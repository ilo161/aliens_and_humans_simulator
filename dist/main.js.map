{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/canvas_events.js","webpack:///./src/scripts/progressBar.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","console","log","currentGrid","undefined","onPlayerGrid","buildPlayerGrid","j","isPresent","cORp","klass","level","buildPlayerState","civilization","community","parks","pyramids","file","cBoost","pBoost","index","ruins","meditationCircles","trees","production","farms","buildings","houses","energy","wind","solar","hydro","canvasEvents","canvasHome","context","menuContainer","document","getElementsByClassName","menu","playerAlert","addEventListener","e","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","getCoords","Array","from","classList","includes","toggle","len","options","length","setAttribute","choiceStr","selectedIndex","chosenBuilding","civilizationMenuSelect","filePathBuild","isGridOccupied","x","y","objAtGridPos","ele","createElement","text","createTextNode","appendChild","removeChild","childNodes","parseImage","occupyGrid","childElementCount","selected","split","filePath","image","Image","src","onload","drawOnGrid","gridX","gridY","drawImage","progressBar","startX","startY","color","orientation","this","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","colorBarSrc","selectColor","that","ori","getElementById","getContext","img1","drawRow","rowX","rowY","drawGrass"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// import grass1 from \"../images/terrain_grass/grass_mix_d.jpg\"\nconsole.log(\"hello from canvas events\")\nimport AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\n// import Alien from \"./alien_ship\"\n\n// //ex: [3,4]\nlet currentGrid = undefined;\n\nconst gameOptions = {\n    0:  {0: [false, {}],\n         1: \"clicked 0,1\",\n         2: \"clicked 0,2\",\n         3: \"clicked 0,3\",\n         4: \"clicked 0,4\",\n         5: \"clicked 0,5\",\n         6: \"clicked 0,6\"}\n    \n}\n\nconst community1={pyramids:\n                        {0:\"you did it!\",\n                         1: \"/src/images/community/pyramids/golden_pyramid.png\"}\n                    }\n\n// skeleton\n// {isPresent: false, klass: \"\", level:0}\n\n\nconst onPlayerGrid = buildPlayerState()\n\n\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                parks: [],\n                pyramids: [{file: \"/src/images/community/pyramids/golden_pyramid.png\", name:\"goldenPyramid\", cBoost: 10, pBoost: 0, cORp: \"community\", klass:\"pyramids\", index:0 }],\n                ruins: [{}],\n                meditationCircles: [],\n                trees:[]\n                },\n        production: {\n                farms: [],\n                buildings: [],\n                houses: [],\n                energy: {\n                        wind:[],\n                        solar:[],\n                        hydro:[]\n                }\n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    \n    //When user clicks on grid it sets currentGrid. If they click outside, it returns\n    // undefined\n    canvasHome.addEventListener('mousedown', (e) => {\n        currentGrid = getCoords(e);\n\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n        } \n        console.log(`currentGrid: ${currentGrid}`)\n    \n    })\n\n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener('change', ()=>{\n        const choiceStr = menu.options[menu.selectedIndex].value\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n            parseImage(context, filePathBuild, currentGrid)\n            occupyGrid(chosenBuilding)\n\n            // Remove error message if there is one\n            if (playerAlert.childElementCount > 0){\n                playerAlert.removeChild(playerAlert.childNodes[0]); \n            }\n        }\n        // Already a building on a grid\n         else if(isGridOccupied()){\n             const x = currentGrid[0]\n             const y = currentGrid[1]\n             const objAtGridPos = onPlayerGrid[x][y]\n\n             // Player tries to add the same building to the occupied grid\n             if (chosenBuilding.klass === objAtGridPos.klass && chosenBuilding.index === objAtGridPos.level){\n                \n                // Add Error message to the DOM -> \"That building is already there. Try upgrading!\"\n                const ele = document.createElement('p');\n\n                var text = document.createTextNode(\"That building is already there. Try upgrading!\"); \n                ele.appendChild(text)\n                ele.setAttribute('class', 'playerAlert');\n                playerAlert.appendChild(ele)\n\n             } else {\n                 //Remove error message \n                 // ********************** ADD FUNCTION HERE TO UPGRADE BUILDING\n                 playerAlert.removeChild(playerAlert.childNodes[0]); \n             }\n\n         }\n\n\n        // reset default of dropdown\n        if (menu.selectedIndex != null){\n            menu.selectedIndex = null\n        }\n\n\n\n    })\n\n    // menuContainer.classList.toggle(\"shrink\")\n    // debugger\n    // menuContainer.classList.toggle(\"hidden\")\n\n\n    \n    // console.log(canvasRect)\n   \n\n    // function onDown(e){\n    //         cx = e.pageX;\n    //         cy = e.pageY;\n    //     // console.log(`X: ${cx}, Y: ${cy}`)\n    // }\n    \n    function getCoords(e){\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        console.log(canvasRect)\n\n        console.log(\"-------\")\n        console.log(cx)\n        console.log(cy)\n        const col = Math.floor((cx - 22) / 86) ;\n        const row = Math.floor((cy - 131) / 86) ;\n\n        // current location console.log\n        console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n    }\n\n    function seeGridOptions(row, col){\n        console.log(gameOptions[row][col])\n    }\n\n    function gridClick(row, col){\n\n\n    }\n\n}\n\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n        // return community1[first][second]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = \"/src/images/terrain_grass/grass_mix_d.jpg\"\n\n        img1.onload = () => {\n\n            drawRow(context, img1, 22, 131)\n            drawRow(context, img1, 22, 217)\n            drawRow(context, img1, 22, 303)\n            drawRow(context, img1, 22, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n\n            // context.drawImage(image, rowX, rowY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            // debugger\n            rowX += 86\n        }\n    }\n}\n\nconst isGridOccupied = () => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    return onPlayerGrid[x][y].isPresent\n}\n\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n    return onPlayerGrid[x][y]\n}\n\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\nconst drawOnGrid = (image, context, gridX, gridY) => {\n    console.log(\"draw on grid\")\n        const offsetX = 22;\n        const offsetY = 131;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n            // context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH )\n            //works and original func\n            // context.drawImage(image, offsetX, offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, offsetX, offsetY, 86, 86 )\n        } else if (gridX === 0 && gridY > 0){\n            //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n        } else {\n            // debugger\n             //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n        }\n\n    \n    }\n\n    // export const animateSquares = (image, cb) => {\n    //     context.clearRect(0, 0, 646, 505)\n    //     for(let i = 0; i < 4; i++){\n    //         for(let j = 0; j < 7; j++){\n    //             drawOnGrid(image, i, j)\n                \n    //         }\n    //     }\n\n    // }\n\n    // export const loadAlienShip = () => {\n    //     // const alienSrc = \"/src/images/aliens/ships/08-Netuno.png\";\n    //     // const alienShip = new Image();\n    //     // alienShip.src = alienSrc;\n\n    //     // alienShip.onload( () => {\n    //     //     return true\n    //     // })\n\n    // }\n\n\n\n// export default canvasEvents;\n\n\n\n","\nclass progressBar {\n    constructor(context, startX, startY, color, orientation){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.color = color;\n        this.blankSprite = undefined;\n        // this.blankSprite.src = this.orientationAndCreate(orientation);\n        this.colorSprite = undefined;\n        // this.colorSprite.src = this.selectColor(this.color, orientation);\n\n        // this.orientation = 0; \n        this.value = 0;\n\n\n       \n        this.loadSrc(orientation)\n\n        // this.blankSprite.onload = this.blankSprite.onload.bind(this);\n        // this.colorSprite.onload = this.colorSprite.onload.bind(this);\n\n        }\n\n    loadSrc(orientation){\n        const backgroundSrc = this.orientationAndCreate(orientation);\n        const colorBarSrc = this.selectColor(this.color, orientation)\n        \n        this.blankSprite = new Image();\n        this.colorSprite = new Image();\n\n        this.blankSprite.src = backgroundSrc; \n        this.colorSprite.src = colorBarSrc; \n        const that = this;\n        this.blankSprite.onload = (e) => {\n            debugger\n            that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 100);\n            that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 100);\n        }\n\n\n    }\n\n        \n        // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // debugger\n            return \"/src/images/h_progress_bars/H_BarBackground.png\"\n        } else if(ori ===\"v\" || ori === \"V\") {\n            // debugger\n            return \"/src/images/v_progress_bars/V_BarBackground.png\"\n        }\n\n        }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori){\n        let selected = undefined;\n        const hColors = {\n            \"blue\": \"/src/images/h_progress_bars/H_BlueBar.png\",\n            // \"blue\": \"/src/images/aliens/ships/08-Netuno.png\",\n            \"green\": \"/src/images/h_progress_bars/H_GreenBar.png\",\n            \"red\": \"/src/images/h_progress_bars/H_RedBar.png\",\n            \"yellow\": \"/src/images/h_progress_bars/H_YellowBar.png\"\n        }\n\n        const vColors = {\n            \"blue\": \"/src/images/v_progress_bars/V_BlueBar.png\",\n            \"green\": \"/src/images/v_progress_bars/V_GreenBar.png\",\n            \"red\": \"/src/images/v_progress_bars/V_RedBar.png\",\n            \"yellow\": \"/src/images/v_progress_bars/V_YellowBar.png\"\n        }\n\n        if (ori === \"h\" || ori === \"H\"){\n            selected = hColors[color];\n\n            return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n    }\n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        // context.drawImage()\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","import {animateSquares,\n     canvasEvents,\n      drawGrass,\n       drawOnGrid,\n    summonAliens} from \"./scripts/canvas_events.js\"\nimport progressBar from \"./scripts/progressBar.js\"\nimport \"./styles/index.scss\";\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n    //draw Production progress bar\n    \n    const productionBar = new progressBar(context, 0, 375, \"blue\", \"v\")\n    const productionBar2 = new progressBar(context, 590, 375, \"blue\", \"v\")\n    // productionBar.drawBar(context)\n    // productionBar.blankSprite.onload = () => {\n    //     debugger\n    //     context.drawImage(productionBar.blankSprite, productionBar.startX, productionBar.startY);\n    //     context.drawImage(productionBar.colorSprite, productionBar.startX, productionBar.startY);\n    // }\n    // productionBar.increaseFill()\n    // progressBar(context, 626, 476, \"blue\")\n\n    // summonAliens(context)\n    \n\n    \n    // let choice = menu.options[menu.selectedIndex].value\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n        // for(let i = 0; i < 7; i++){\n        //     for(let j = 0; j < 7; j++){\n                // drawOnGrid(imgTest, i, j)\n                // animateSquares(imgTest)\n\n\n        //     }\n        // }\n        // drawOnGrid(imgTest, 6)\n    // }\n\n    \n\n\n})\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n    //     drawOnGrid(imgTest, 0, 5)\n    //     // drawOnGrid(imgTest, 6)\n    // }\n//  backgrounds()\n\n\n\n\n\n// const backgrounds = require(\"./scripts/backgrounds.js\")"],"sourceRoot":""}