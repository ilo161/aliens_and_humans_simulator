{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/util.js","webpack:///./src/scripts/alien_ship.js","webpack:///./src/scripts/mothership.js","webpack:///./src/images/aliens/ships/08-Netuno.png","webpack:///./src/images/aliens/ships/06-Saturno.png","webpack:///./src/images/aliens/ships/09-Pluto.png","webpack:///./src/scripts/progressBar.js","webpack:///./src/images/h_progress_bars/H_BarBackground.png","webpack:///./src/images/v_progress_bars/V_BarBackground.png","webpack:///./src/images/h_progress_bars/H_BlueBar.png","webpack:///./src/images/h_progress_bars/H_GreenBar.png","webpack:///./src/images/h_progress_bars/H_RedBar.png","webpack:///./src/images/h_progress_bars/H_YellowBar.png","webpack:///./src/images/v_progress_bars/V_BlueBar10.png","webpack:///./src/images/v_progress_bars/V_BlueBar20.png","webpack:///./src/images/v_progress_bars/V_BlueBar30.png","webpack:///./src/images/v_progress_bars/V_BlueBar40.png","webpack:///./src/images/v_progress_bars/V_BlueBar50.png","webpack:///./src/images/v_progress_bars/V_BlueBar60.png","webpack:///./src/images/v_progress_bars/V_BlueBar70.png","webpack:///./src/images/v_progress_bars/V_BlueBar80.png","webpack:///./src/images/v_progress_bars/V_BlueBar90.png","webpack:///./src/images/v_progress_bars/V_BlueBar100.png","webpack:///./src/images/v_progress_bars/V_GreenBar10.png","webpack:///./src/images/v_progress_bars/V_GreenBar20.png","webpack:///./src/images/v_progress_bars/V_GreenBar30.png","webpack:///./src/images/v_progress_bars/V_GreenBar40.png","webpack:///./src/images/v_progress_bars/V_GreenBar50.png","webpack:///./src/images/v_progress_bars/V_GreenBar60.png","webpack:///./src/images/v_progress_bars/V_GreenBar70.png","webpack:///./src/images/v_progress_bars/V_GreenBar80.png","webpack:///./src/images/v_progress_bars/V_GreenBar90.png","webpack:///./src/images/v_progress_bars/V_GreenBar100.png","webpack:///./src/scripts/pointsSystem.js","webpack:///./src/scripts/allSprites.js","webpack:///./src/images/community/fountains/00fountain.png","webpack:///./src/images/community/meditations/00plain_meditation.png","webpack:///./src/images/community/meditations/01activated_meditation.png","webpack:///./src/images/community/meditations/02light_meditation.png","webpack:///./src/images/community/pyramids/00red_pyramid.png","webpack:///./src/images/community/pyramids/01golden_pyramid.png","webpack:///./src/images/community/pyramids/02light_pyramid.png","webpack:///./src/images/community/trees/00small_tree.png","webpack:///./src/images/community/trees/01mighty_tree.png","webpack:///./src/images/community/trees/02tree_of_light.png","webpack:///./src/images/community/ruins/00yellow_slab.png","webpack:///./src/images/community/ruins/01rainbow_rock.png","webpack:///./src/images/community/ruins/02rock_of_light.png","webpack:///./src/images/production/energy/00water_wheel.png","webpack:///./src/images/production/energy/01windmill.png","webpack:///./src/images/production/energy/02tesla_tower.png","webpack:///./src/images/production/energy/03nuclear.png","webpack:///./src/images/production/energy/04nuclear.png","webpack:///./src/images/production/houses/00shack.png","webpack:///./src/images/production/houses/01butcher.png","webpack:///./src/images/production/houses/02house.png","webpack:///./src/scripts/canvas_events.js","webpack:///./src/images/terrain_grass/grass_mix_d.jpg","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildAssetPath","imgSrc","AlienShip","context","filePath","xStart","yStart","scaleW","scaleH","this","sprite","undefined","movements","moveIdx","loadAlienShip","lToRAnimate","drawShip","moveSpanX","push","x","y","alienSrc","Image","src","drawImage","length","MotherShip","army","shipNum","shipFiles","yPos","alienShip","progressBar","startX","startY","color","orientation","points","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","that","onload","e","colorBarSrc","selectColor","ori","hColors","vColors","10","20","30","40","50","60","70","80","90","100","playerPoints","community","production","resources","alienTimer","adjustResources","num","drawResourcesText","canvas","width","clearRect","font","fillStyle","strokeStyle","fillText","strokeText","allSprites","currentGrid","grassSquare","onPlayerGrid","buildPlayerGrid","j","isPresent","cORp","klass","level","buildPlayerState","civilization","fountains","file","boost","index","meditations","pyramids","ruins","trees","farms","buildings","energy","houses","canvasEvents","canvasHome","menuContainer","document","getElementsByClassName","menu","allDropDownCategories","Array","from","playerAlert","addEventListener","getCoords","classList","includes","toggle","len","options","setAttribute","console","log","removePlayerAlert","target","appendChild","generateErrorAlert","choiceStr","selectedIndex","verifyBuildingMatch","disabled","chosenBuilding","civilizationMenuSelect","filePathBuild","isGridOccupied","objAtGridPos","drawOnGrid","parseImage","occupyGrid","isInitialBuilding","fillPercentage","style","adjustPoints","nextcORp","nextKlass","nextIndex","optionsArr","split","parseInt","maxIndexOfType","childElementCount","removeChild","childNodes","errorMsg","ele","createElement","text","createTextNode","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","selected","image","gridX","gridY","clearRectBoolean","getElementById","getContext","img1","drawRow","rowX","rowY","drawGrass","drawMidline","makeCountdownId","setInterval","halfWidth","drawAlienCountdown","clearAlienText","clearInterval","motherShip","makeShips","intId1","intId2","intId3","setTimeout","summonAliens"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const buildAssetPath = (imgSrc) => {\n    return `./dist/${imgSrc}`;\n}","import {buildAssetPath} from \"./util.js\";\n\nclass AlienShip {\n    constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        this.context = context;\n        this.xStart = xStart;\n        this.yStart = yStart;\n        this.sprite = undefined;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n\n        this.filePath = filePath\n\n        this.movements = [];\n        this.moveIdx = 0;\n\n        this.loadAlienShip = this.loadAlienShip.bind(this);\n        this.lToRAnimate = this.lToRAnimate.bind(this);\n        this.drawShip = this.drawShip.bind(this);\n        this.loadAlienShip()\n        this.moveSpanX()\n    }\n\n    // generate the movements for an alien Ship\n     moveSpanX(){\n            for(let i = 1; i < 23 ; i++){\n                this.movements.push({x: (this.xStart * (i * 40)), y: (this.yStart)})\n            }\n        }\n\n    loadAlienShip(){\n    const alienSrc = this.filePath;\n\n    this.sprite = new Image();\n    this.sprite.src = alienSrc;        \n\n    }\n\n    drawShip(){\n       \n        //works with set pixel\n        // this.context.drawImage(this.sprite, 0, 0, 100, 100);\n\n        // using animation\n        // this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, 100, 100);\n\n        //works with fraction\n        // this.context.drawImage(this.sprite, 0, 0, (this.sprite.width / this.scaleW), (this.sprite.height / this.scaleH));\n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n\n    }\n\n    lToRAnimate(){\n        let x = 0\n        // console.log(\"ship moving\")\n\n            // console.log(this.movements[this.moveIdx])\n            // this.context.clearRect(0,0,646,131)\n            const topLeftX = this.movements[this.moveIdx].x\n            const topLeftY = this.movements[this.moveIdx].y\n\n            // console.log(topLeftX)\n            // console.log(topLeftY)\n\n            //this function removes previous drawing of alien ship.\n            if (this.moveIdx > 0){\n                // this.context.clearRect((this.scaleW * this.moveIdx ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n                //old but works\n                // this.context.clearRect((topLeftX ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n            }\n\n            // this.context.clearRect(topLeftX, topLeftY,(this.scaleW * - 1), (this.scaleW * -1 ))\n\n            // this.context.clearRect(300 , 300,(this.scaleW * (1)), (this.scaleW * -1 ))\n           this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n            this.moveIdx++;\n            if(this.moveIdx >= this.movements.length) this.moveIdx = 0;\n            // if(x === 15){\n            //     window.clearInterval()\n            // }\n        // }\n    }\n}\n\nexport default AlienShip;","import {buildAssetPath} from \"./util.js\"\nimport AlienShip from \"./alien_ship\"\n\nimport neptune from \"../images/aliens/ships/08-Netuno.png\";\nimport saturn from \"../images/aliens/ships/06-Saturno.png\";\nimport pluto from \"../images/aliens/ships/09-Pluto.png\";\n\nclass MotherShip {\n    constructor(context){\n        this.context = context;\n        this.army = []\n\n    }\n\n    makeShips(){\n        let shipNum = this.army.length;\n\n        const shipFiles = [\n            buildAssetPath(neptune),\n            buildAssetPath(saturn),\n            buildAssetPath(pluto)\n        ]\n        // constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        while(this.army.length < 3){\n            shipNum = this.army.length;\n            const yPos = undefined;\n\n            if (shipNum === 0){\n                yPos = shipNum;\n            } else {\n                yPos = shipNum * 40;\n            }\n\n            const alienSrc = shipFiles[shipNum]\n            const alienShip = new AlienShip(this.context, alienSrc, 1, yPos, 40, 40)\n            this.army.push(alienShip)\n\n        }\n    }\n\n}\n\nexport default MotherShip","export default \"images/08-Netuno.png\";","export default \"images/06-Saturno.png\";","export default \"images/09-Pluto.png\";","import hBlank from \"../images/h_progress_bars/H_BarBackground.png\"\nimport hBlue from \"../images/h_progress_bars/H_BlueBar.png\"\nimport hGreen from \"../images/h_progress_bars/H_GreenBar.png\"\nimport hRed from \"../images/h_progress_bars/H_RedBar.png\"\nimport hYellow from \"../images/h_progress_bars/H_YellowBar.png\"\n\n\nimport vBlank from \"../images/v_progress_bars/V_BarBackground.png\"\nimport vBlue10 from \"../images/v_progress_bars/V_BlueBar10.png\"\nimport vBlue20 from \"../images/v_progress_bars/V_BlueBar20.png\"\nimport vBlue30 from \"../images/v_progress_bars/V_BlueBar30.png\"\nimport vBlue40 from \"../images/v_progress_bars/V_BlueBar40.png\"\nimport vBlue50 from \"../images/v_progress_bars/V_BlueBar50.png\"\nimport vBlue60 from \"../images/v_progress_bars/V_BlueBar60.png\"\nimport vBlue70 from \"../images/v_progress_bars/V_BlueBar70.png\"\nimport vBlue80 from \"../images/v_progress_bars/V_BlueBar80.png\"\nimport vBlue90 from \"../images/v_progress_bars/V_BlueBar90.png\"\nimport vBlue100 from \"../images/v_progress_bars/V_BlueBar100.png\"\n\nimport vGreen10 from \"../images/v_progress_bars/V_GreenBar10.png\"\nimport vGreen20 from \"../images/v_progress_bars/V_GreenBar20.png\"\nimport vGreen30 from \"../images/v_progress_bars/V_GreenBar30.png\"\nimport vGreen40 from \"../images/v_progress_bars/V_GreenBar40.png\"\nimport vGreen50 from \"../images/v_progress_bars/V_GreenBar50.png\"\nimport vGreen60 from \"../images/v_progress_bars/V_GreenBar60.png\"\nimport vGreen70 from \"../images/v_progress_bars/V_GreenBar70.png\"\nimport vGreen80 from \"../images/v_progress_bars/V_GreenBar80.png\"\nimport vGreen90 from \"../images/v_progress_bars/V_GreenBar90.png\"\nimport vGreen100 from \"../images/v_progress_bars/V_GreenBar100.png\"\n\n\nimport vGreen from \"../images/v_progress_bars/V_GreenBar100.png\"\n// import vRed from \"../images/v_progress_bars/V_RedBar.png\"\n// import vYellow from \"../images/v_progress_bars/V_YellowBar.png\"\nimport {buildAssetPath} from \"./util.js\"\n\n\nclass progressBar {\n    constructor(context, startX, startY, color, orientation, value){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.points = 30;\n        this.color = color;\n        this.value = value;\n        this.orientation = orientation\n\n        this.blankSprite = undefined;\n        this.colorSprite = undefined;\n\n        this.loadSrc(orientation)\n        \n        }\n\n    loadSrc(orientation){\n        if(this.color === \"blank\"){\n            const backgroundSrc = this.orientationAndCreate(orientation);\n            this.blankSprite = new Image();\n            this.blankSprite.src = backgroundSrc; \n            \n            const that = this;\n            this.blankSprite.onload = (e) => {\n            // debugger\n            // that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 364);\n            that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 378);\n            }\n        } else {\n            const colorBarSrc = this.selectColor(this.color, orientation, this.value)\n            this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n            // debugger\n            const that = this;\n            this.colorSprite.onload = (e) => {\n\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 278);\n                // 30 is good start\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 30);\n                // debugger\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n        \n        \n        \n\n        \n       \n\n\n    }\n\n\n\n    // loadSrc(orientation){\n        \n    //     const backgroundSrc = this.orientationAndCreate(orientation);\n    //     const colorBarSrc = this.selectColor(this.color, orientation)\n        \n    //     this.blankSprite = new Image();\n    //     this.colorSprite = new Image();\n\n    //     this.blankSprite.src = backgroundSrc; \n    //     this.colorSprite.src = colorBarSrc; \n    //     const that = this;\n    //     this.blankSprite.onload = (e) => {\n    //         debugger\n    //         that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 100);\n    //         that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 100);\n    //     }\n\n\n    // }\n\n        \n        // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // debugger\n            return buildAssetPath(hBlank)\n        } else if(ori ===\"v\" || ori === \"V\") {\n            // debugger\n            return buildAssetPath(vBlank)\n        }\n\n    }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori, value){\n        let selected = undefined;\n\n        const hColors = {\n            \"blank\": buildAssetPath(hBlank),\n            \"blue\": buildAssetPath(hBlue),\n            \"green\": buildAssetPath(hGreen),\n            \"red\": buildAssetPath(hRed),\n            \"yellow\": buildAssetPath(hYellow)\n        }\n\n        const vColors = {\n            \"blank\": buildAssetPath(vBlank),\n            \"blue\": {10: buildAssetPath(vBlue10),\n                     20: buildAssetPath(vBlue20),\n                     30: buildAssetPath(vBlue30),\n                     40: buildAssetPath(vBlue40),\n                     50: buildAssetPath(vBlue50),\n                     60: buildAssetPath(vBlue60),\n                     70: buildAssetPath(vBlue70),\n                     80: buildAssetPath(vBlue80),\n                     90: buildAssetPath(vBlue90),\n                     100: buildAssetPath(vBlue100)\n            },\n            \"green\": {10: buildAssetPath(vGreen10),\n                     20: buildAssetPath(vGreen20),\n                     30: buildAssetPath(vGreen30),\n                     40: buildAssetPath(vGreen40),\n                     50: buildAssetPath(vGreen50),\n                     60: buildAssetPath(vGreen60),\n                     70: buildAssetPath(vGreen70),\n                     80: buildAssetPath(vGreen80),\n                     90: buildAssetPath(vGreen90),\n                     100: buildAssetPath(vGreen100)\n             }\n            }\n\n        if (ori === \"h\" || ori === \"H\"){\n            selected = hColors[color];\n\n            return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color][value];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n        // else {\n            this.value = value\n            const colorBarSrc = this.selectColor(this.color, this.orientation, this.value)\n            // this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n            // debugger\n            const that = this;\n            this.colorSprite.onload = (e) => {\n\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 278);\n                // 30 is good start\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 30);\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n    \n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        // context.drawImage()\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","export default \"images/H_BarBackground.png\";","export default \"images/V_BarBackground.png\";","export default \"images/H_BlueBar.png\";","export default \"images/H_GreenBar.png\";","export default \"images/H_RedBar.png\";","export default \"images/H_YellowBar.png\";","export default \"images/V_BlueBar10.png\";","export default \"images/V_BlueBar20.png\";","export default \"images/V_BlueBar30.png\";","export default \"images/V_BlueBar40.png\";","export default \"images/V_BlueBar50.png\";","export default \"images/V_BlueBar60.png\";","export default \"images/V_BlueBar70.png\";","export default \"images/V_BlueBar80.png\";","export default \"images/V_BlueBar90.png\";","export default \"images/V_BlueBar100.png\";","export default \"images/V_GreenBar10.png\";","export default \"images/V_GreenBar20.png\";","export default \"images/V_GreenBar30.png\";","export default \"images/V_GreenBar40.png\";","export default \"images/V_GreenBar50.png\";","export default \"images/V_GreenBar60.png\";","export default \"images/V_GreenBar70.png\";","export default \"images/V_GreenBar80.png\";","export default \"images/V_GreenBar90.png\";","export default \"images/V_GreenBar100.png\";","import progressBar from \"./progressBar.js\"\n\n// contains money, and current build points for player throughout the game\nexport const playerPoints = {\n    community: 0,\n    production: 0,\n    resources: 0,\n    alienTimer: 2\n}\n\n// cORp stands for community or production\nexport const adjustPoints = (points, context, style = \"community\") => {\n\n    let fillPercentage; \n    switch(true){\n        case (points <= 142):\n            fillPercentage = 10;\n            break;\n        case (points > 142 && points <= 184):\n            fillPercentage = 20;\n            break;\n        case (points > 184 && points <= 226):\n            fillPercentage = 30;\n            break;\n        case (points > 226 && points <= 268):\n            fillPercentage = 40;\n            break;\n        case (points > 268 && points <= 310):\n            fillPercentage = 50;\n            break;\n        case (points > 310 && points <= 352):\n            fillPercentage = 60;\n            break;\n        case (points > 352 && points <= 394):\n            fillPercentage = 70;\n            break;\n        case (points > 394 && points <= 436):\n            fillPercentage = 80;\n            break;\n        case (points > 436 && points <= 478):\n            fillPercentage = 90;\n            break;\n        case (points > 700):\n            // debugger\n            fillPercentage = 100;\n            break\n        default:\n            break\n    }\n\n    if (style === \"community\"){\n        //save to variable because garbage collection\n        // debugger\n        const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", fillPercentage);\n    } else {\n        // debugger\n        const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", fillPercentage);\n    }\n}\n\nexport const spawnResources = () => {\n    playerPoints.resources += 5;\n}\n\nexport const adjustResources = (num) => {\n    // debugger\n    playerPoints.resources += num;\n}\n\nexport const adjustTimer = (num) => {\n    // debugger\n    playerPoints.alienTimer += num;\n}\n\nexport const setTimer = (num) => {\n    playerPoints.alienTimer = num\n}\n\nexport const getTime = () => {\n    return playerPoints.alienTimer;\n}\n\nexport const clearAlienText = (context) => {\n    const startX = ((context.canvas.width / 2) - 116);\n    // context.clearRect(startX, 30, 250, 80)\n    context.clearRect(startX, 0, 275, 80)\n}\n\n\nexport const drawMidline = (context) => {\n    const startX = ((context.canvas.width / 2))\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#66A1E7\"\n    // context.strokeStyle = \"#C5E0CF\";\n    context.strokeStyle = \"#55906F\";\n    context.fillText(\"|\", startX, 10);\n    context.strokeText(\"|\", startX, 10);\n}\nexport const drawAlienCountdown = (context) => {\n    const halfWidth = context.canvas.width / 2\n    const startX = ((context.canvas.width / 2) - 116);\n   \n    // context.clearRect(halfWidth-10, 35, (halfWidth-10 + 60), 65)\n    context.clearRect(startX, 0, 275, 80)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#FFF\";\n    // context.strokeStyle = \"#55906F\";\n    context.fillText(\"Aliens are coming!\", startX, 30);\n    context.strokeText(\"Aliens are coming!\", startX, 30);\n     \n    context.fillText(playerPoints.alienTimer, halfWidth-10, 60);\n    context.strokeText(playerPoints.alienTimer, halfWidth-10, 60);\n   \n}\n\nexport const drawResourcesText = (context) => {\n    const startX = ((context.canvas.width / 2) - 108);\n    context.clearRect(startX, 478, (startX + 350), 30)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#C5E0CF\";\n    // context.strokeStyle = \"#55906F\";\n    context.fillText(\"Resources: \" + playerPoints.resources, startX, 500);\n    context.strokeText(\"Resources: \" + playerPoints.resources, startX, 500);\n    // requestAnimationFrame(drawResourcesText(context))\n\n  }","import {buildAssetPath} from \"./util\";\n\n//Community\nimport fountain0 from \"../images/community/fountains/00fountain.png\";\n\nimport meditate0 from \"../images/community/meditations/00plain_meditation.png\";\nimport meditate1 from \"../images/community/meditations/01activated_meditation.png\";\nimport meditate2 from \"../images/community/meditations/02light_meditation.png\";\n\nimport pyramid0 from \"../images/community/pyramids/00red_pyramid.png\";\nimport pyramid1 from \"../images/community/pyramids/01golden_pyramid.png\";\nimport pyramid2 from \"../images/community/pyramids/02light_pyramid.png\";\n\nimport ruin0 from \"../images/community/ruins/00yellow_slab.png\";\nimport ruin1 from \"../images/community/ruins/01rainbow_rock.png\";\nimport ruin2 from \"../images/community/ruins/02rock_of_light.png\";\n\nimport tree0 from \"../images/community/trees/00small_tree.png\";\nimport tree1 from \"../images/community/trees/01mighty_tree.png\";\nimport tree2 from \"../images/community/trees/02tree_of_light.png\";\n\n\n\n\n//Production\nimport energy0 from \"../images/production/energy/00water_wheel.png\";\nimport energy1 from \"../images/production/energy/01windmill.png\";\nimport energy2 from \"../images/production/energy/02tesla_tower.png\";\nimport energy3 from \"../images/production/energy/03nuclear.png\";\nimport energy4 from \"../images/production/energy/04nuclear.png\";\n\n\nimport house0 from \"../images/production/houses/00shack.png\";\nimport house1 from \"../images/production/houses/01butcher.png\";\nimport house2 from \"../images/production/houses/02house.png\";\n\n\nexport const allSprites = {\n    \"fountain0\": fountain0,\n    \"---m\":\"meditation\",\n    \"meditate0\": meditate0,\n    \"meditate1\": meditate1,\n    \"meditate2\": meditate2,\n    \"pyramid0\": pyramid0,\n    \"pyramid1\": pyramid1,\n    \"pyramid2\": pyramid2,\n    \"---trees\":\"trees\",\n    \"tree0\": tree0,\n    \"tree1\": tree1,\n    \"tree2\": tree2,\n    \"---ruin\": \"ruin\",\n    \"ruin0\": ruin0,\n    \"ruin1\": ruin1,\n    \"ruin2\": ruin2,\n    \"p\":\"production\",\n    \"---energy\": \"energy\",\n    \"energy0\": energy0,\n    \"energy1\": energy1,\n    \"energy2\": energy2,\n    \"energy3\": energy3,\n    \"energy4\": energy4,\n    \"house0\": house0,\n    \"house1\": house1,\n    \"house2\": house2,\n}","export default \"images/00fountain.png\";","export default \"images/00plain_meditation.png\";","export default \"images/01activated_meditation.png\";","export default \"images/02light_meditation.png\";","export default \"images/00red_pyramid.png\";","export default \"images/01golden_pyramid.png\";","export default \"images/02light_pyramid.png\";","export default \"images/00small_tree.png\";","export default \"images/01mighty_tree.png\";","export default \"images/02tree_of_light.png\";","export default \"images/00yellow_slab.png\";","export default \"images/01rainbow_rock.png\";","export default \"images/02rock_of_light.png\";","export default \"images/00water_wheel.png\";","export default \"images/01windmill.png\";","export default \"images/02tesla_tower.png\";","export default \"images/03nuclear.png\";","export default \"images/04nuclear.png\";","export default \"images/00shack.png\";","export default \"images/01butcher.png\";","export default \"images/02house.png\";","import AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\nimport {buildAssetPath} from \"./util\"\nimport {\n    playerPoints,\n    adjustPoints,\n    adjustResources,\n    adjustTimer\n} from \"./pointsSystem\"\n\nimport {allSprites} from \"./allSprites\"\n\nimport grassD from \"../images/terrain_grass/grass_mix_d.jpg\"\n// import grassD from \"../images/terrain_grass/midgrass.jpg\"\n\n// //ex: [3,4]\nlet currentGrid = undefined;\n\n//This is a generic grass square preloaded with source path\nconst grassSquare = new Image()\ngrassSquare.src = buildAssetPath(grassD)\n\n// skeleton for onPlayerGrid\n//{isPresent: false, cORp: \"\", klass: \"\", level: null}\nconst onPlayerGrid = buildPlayerState()\n\n// This function builds an object containing all the coordinates of the play grid and \n// stores state of what the player has played\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                fountains: [\n                    {file: buildAssetPath(allSprites[\"fountain0\"]), name:\"Dual Fountain\", boost: 10, cORp: \"community\", klass:\"fountains\", index:0 }\n                ],\n                meditations: [\n                    {file: buildAssetPath(allSprites[\"meditate0\"]), name:\"Ruins Meditate\", boost: 10, cORp: \"community\", klass:\"meditations\", index:0 },\n                    {file: buildAssetPath(allSprites[\"meditate1\"]), name:\"Enlightened Meditate\", boost: 20, cORp: \"community\", klass:\"meditations\", index:1 },\n                    {file: buildAssetPath(allSprites[\"meditate2\"]), name:\"Activated Meditate\", boost: 30, cORp: \"community\", klass:\"meditations\", index:2 },\n\n                ],\n                pyramids: [\n                    {file: buildAssetPath(allSprites[\"pyramid0\"]), name:\"Red Pyramid\", boost: 10, cORp: \"community\", klass:\"pyramids\", index:0 },\n                    {file: buildAssetPath(allSprites[\"pyramid1\"]), name:\"Golden Pyramid\", boost: 20, cORp: \"community\", klass:\"pyramids\", index:1 },\n                    {file: buildAssetPath(allSprites[\"pyramid2\"]), name:\"Pyramid of Light\", boost: 30, cORp: \"community\", klass:\"pyramids\", index:2 }\n                \n                ],\n                ruins: [\n                    {file: buildAssetPath(allSprites[\"ruin0\"]), name:\"Yellow Slab\", boost: 10, cORp: \"community\", klass:\"ruins\", index:0 },\n                    {file: buildAssetPath(allSprites[\"ruin1\"]), name:\"Rainbow Rock\", boost: 20, cORp: \"community\", klass:\"ruins\", index:1 },\n                    {file: buildAssetPath(allSprites[\"ruin2\"]), name:\"Stone of Light\", boost: 30, cORp: \"community\", klass:\"ruins\", index:2 }\n\n                ],\n                \n                trees:[\n                    {file: buildAssetPath(allSprites[\"tree0\"]), name:\"Small Tree\", boost: 10, cORp: \"community\", klass:\"trees\", index:0 },\n                    {file: buildAssetPath(allSprites[\"tree1\"]), name:\"Mighty Tree\", boost: 20, cORp: \"community\", klass:\"trees\", index:1 },\n                    {file: buildAssetPath(allSprites[\"tree2\"]), name:\"Tree of Light\", boost: 30, cORp: \"community\", klass:\"trees\", index:2 }\n                ]\n                },\n        production: {\n                farms: [],\n                buildings: [],\n                  energy: [\n                    {file: buildAssetPath(allSprites[\"energy0\"]), name:\"Water Wheel\", boost: 15, cORp: \"production\", klass:\"energy\", index:0 },\n                    {file: buildAssetPath(allSprites[\"energy1\"]), name:\"Wind Mill\", boost: 25, cORp: \"production\", klass:\"energy\", index:1 },\n                    {file: buildAssetPath(allSprites[\"energy2\"]), name:\"Tesla Tower\", boost: 35, cORp: \"production\", klass:\"energy\", index:2 },\n                    {file: buildAssetPath(allSprites[\"energy3\"]), name:\"Nuclear\", boost: 45, cORp: \"production\", klass:\"energy\", index:3 },\n                    {file: buildAssetPath(allSprites[\"energy4\"]), name:\"Efficient Nuclear\", boost: 55, cORp: \"production\", klass:\"energy\", index:4 }\n\n                  ],\n                houses: [\n                     {file: buildAssetPath(allSprites[\"house0\"]), name:\"Cold House\", boost: 15, cORp: \"production\", klass:\"houses\", index:0 },\n                     {file: buildAssetPath(allSprites[\"house1\"]), name:\"Farm House\", boost: 25, cORp: \"production\", klass:\"houses\", index:1 },\n                     {file: buildAssetPath(allSprites[\"house2\"]), name:\"Warm House\", boost: 35, cORp: \"production\", klass:\"houses\", index:2 }\n                    ],\n                  \n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const allDropDownCategories = Array.from(document.getElementsByClassName(\"cat\"));\n    const mainDropDown = Array.from(menu);\n    // let menu = document.getElementsByClassName(\"nocat\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    \n    //When user clicks on grid it sets currentGrid. If they click outside, it returns\n    // undefined\n    canvasHome.addEventListener('mousedown', (e) => {\n        currentGrid = getCoords(e);\n\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n        } \n        console.log(`currentGrid: ${currentGrid}`)\n    \n    })\n\n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener('click', (e) => {\n        removePlayerAlert()\n        // debugger\n        if (allDropDownCategories.includes(e.target) ){\n            playerAlert.appendChild(generateErrorAlert(\"That is not a building\"))\n            return false;\n        }\n\n        console.log(\"resources\",playerPoints.resources)\n        // Remove error message if there is one\n        \n\n        if (playerPoints.resources < 20){\n            playerAlert.appendChild(generateErrorAlert(\"Every building costs 20 resources ... !\"))\n            // menu.selectedIndex = null; \n            return false\n        } \n        \n        //choiceStr is \"production,houses,0\"\n        const choiceStr = menu.options[menu.selectedIndex].value\n\n        if (!choiceStr.includes(\",\")){\n            playerAlert.appendChild(generateErrorAlert(\"That is not a building\"))\n            return false;\n        } \n        // console.log(onPlayerGrid[currentGrid[0]][currentGrid[1]])\n        const okToRender = verifyBuildingMatch(choiceStr, menu)\n        if (!okToRender){\n            console.log(\"can't draw\")\n            menu.disabled = false;\n            // menu.selectedIndex = null\n            return false;\n        } \n        \n        //chosenBuilding is \\\n        //{isPresent: false, cORp: \"\", klass: \"\", level: null}\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n        \n        \n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n            \n            if (isInitialBuilding(chosenBuilding) === true){\n                parseImage(context, filePathBuild, currentGrid)\n                occupyGrid(chosenBuilding)\n                console.log(\"PAY UP\")\n                adjustResources(-20)\n\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                // debugger\n                adjustPoints(playerPoints[chosenBuilding.cORp], context, chosenBuilding.cORp)\n                // adjustPoints(playerPoints.community, context)\n                // adjustPoints(playerPoints.production, context, \"production\")\n                // menu.disabled = false\n            } else {\n                playerAlert.appendChild(generateErrorAlert(\"That building is not the first of it's kind!\"))\n                // menu.disabled = false\n            }\n        } else if (isGridOccupied()){\n             // Already a building on grid pos\n             const x = currentGrid[0];\n             const y = currentGrid[1];\n\n             const objAtGridPos = onPlayerGrid[x][y];\n            //  const maxIndexOfType = civilization[chosenBuilding.cORp][chosenBuilding.klass].length - 1\n\n            //  // Player tries to add the same building to the occupied grid\n            //  if (chosenBuilding.klass === objAtGridPos.klass && chosenBuilding.index === objAtGridPos.level\n            //     && maxIndexOfType != chosenBuilding.index){\n\n            //     playerAlert.appendChild(generateErrorAlert(\"That building is already there. Try upgrading!\"));\n\n            //  } else if (chosenBuilding.klass !== objAtGridPos.klass){\n            //     // Player tries to upgrade to a building of a different klass\n\n            //      playerAlert.appendChild(generateErrorAlert(\"Try upgrading that structure to a higher level!\"));\n            //  } else if (chosenBuilding.klass === objAtGridPos.klass) {\n            //     // building klass is a match\n                \n            //     // player has maxed out upgrade\n            //      if (maxIndexOfType === objAtGridPos.level){\n            //          playerAlert.appendChild(generateErrorAlert(\"Max upgrade achieved!\"));\n                //  } \n                //  else \n                 if (chosenBuilding.index === (objAtGridPos.level + 1)){\n                     // player upgrades appropriately by 1 level\n                     //re-render grass first && remove previous building\n                     console.log(\"DRAW!!!\")\n                     drawOnGrid(grassSquare, context, x, y, true)\n                     \n                     parseImage(context, filePathBuild, currentGrid)\n                     occupyGrid(chosenBuilding)\n                     console.log(\"PAY UP\")\n                    adjustResources(-20)\n                     playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                    //  menu.disabled = false\n                 }\n                //   else if (chosenBuilding.index < objAtGridPos.level){\n                //      playerAlert.appendChild(generateErrorAlert(\"Try upgrading, we must not regret our past decisions\"));\n                //  }\n                 \n\n            //  }\n            \n\n         }\n\n\n        // reset default of dropdown\n            console.log(\"GO FALSE!\")\n            menu.disabled = false\n            // menu.selectedIndex = null\n            console.log(\"playerpoints\", playerPoints)\n\n\n\n\n    })\n\n    const verifyBuildingMatch = (choiceStr, menu) => {\n        const x = currentGrid[0]\n        const y = currentGrid[1]\n        menu.disabled = true\n        // debugger\n\n        if(onPlayerGrid[x][y].isPresent === true){\n\n            let optionsArr = choiceStr.split(\",\")\n            let nextcORp = null\n            let nextKlass = null;\n            let nextIndex = null;\n            [nextcORp, nextKlass, nextIndex] = optionsArr;\n            nextIndex = parseInt(optionsArr[2])\n            \n            const objAtGridPos = onPlayerGrid[x][y]\n            const maxIndexOfType = civilization[nextcORp][nextKlass].length - 1\n\n\n            \n\n            if(objAtGridPos.cORp !== nextcORp || objAtGridPos.klass !== nextKlass){\n                playerAlert.appendChild(generateErrorAlert(\"Building types must match!\"))\n                return false;\n            } else if (nextKlass === objAtGridPos.klass && nextIndex === objAtGridPos.level\n                && maxIndexOfType != nextIndex){\n                // debugger\n                playerAlert.appendChild(generateErrorAlert(\"That building is already there. Try upgrading!\"));\n                return false\n             } else if (nextKlass === objAtGridPos.klass) {\n                // building klass is a match\n                \n                // player has maxed out upgrade\n                 if (maxIndexOfType === objAtGridPos.level){\n                     playerAlert.appendChild(generateErrorAlert(\"Max upgrade achieved!\"));\n                     return false;\n                 } else if (nextIndex < objAtGridPos.level){\n                     playerAlert.appendChild(generateErrorAlert(\"Try upgrading, we must not regret our past decisions\"));\n                     return false;\n                 } else if((objAtGridPos.level + 1) !== nextIndex){\n                     playerAlert.appendChild(generateErrorAlert(\"Upgrade one level at a time!\"));\n                     return false;\n                } \n            }\n            // else if ()\n        }\n        return true\n    }\n\n    //Alert System\n    const removePlayerAlert = () => {\n         if (playerAlert.childElementCount > 0){\n            playerAlert.removeChild(playerAlert.childNodes[0]); \n        }\n    }\n\n    const generateErrorAlert = (errorMsg) => {\n        // Add Error message to the DOM -> \"That building is already there. Try upgrading!\"\n        const ele = document.createElement('p');\n\n        const text = document.createTextNode(errorMsg); \n        ele.appendChild(text)\n        ele.setAttribute('class', 'playerAlert');\n        return ele\n    }\n\n    // menuContainer.classList.toggle(\"shrink\")\n    // \n    // menuContainer.classList.toggle(\"hidden\")\n\n\n    \n    // console.log(canvasRect)\n   \n\n    // function onDown(e){\n    //         cx = e.pageX;\n    //         cy = e.pageY;\n    //     // console.log(`X: ${cx}, Y: ${cy}`)\n    // }\n    \n    const getCoords = (e) => {\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        console.log(canvasRect)\n\n        console.log(\"-------\")\n        console.log(cx)\n        console.log(cy)\n        const col = Math.floor((cx - 22) / 86) ;\n        const row = Math.floor((cy - 131) / 86) ;\n\n        // current location console.log\n        console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n    }\n\n    function seeGridOptions(row, col){\n        console.log(gameOptions[row][col])\n    }\n\n    function gridClick(row, col){\n\n\n    }\n\n}\n// selected argument is \"production,houses,0\"\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        console.log(\"--\")\n        // console.log(optionsArr);\n        // console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = buildAssetPath(grassD)\n\n        img1.onload = () => {\n\n            drawRow(context, img1, 22, 131)\n            drawRow(context, img1, 22, 217)\n            drawRow(context, img1, 22, 303)\n            drawRow(context, img1, 22, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n\n            // context.drawImage(image, rowX, rowY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            // \n            rowX += 86\n        }\n    }\n}\n\nconst isGridOccupied = () => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    return onPlayerGrid[x][y].isPresent\n}\n\n//update gameState with chosen Building\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n\n    return onPlayerGrid[x][y]\n}\n\nconst isInitialBuilding = (chosenBuilding) => {\n    if (chosenBuilding.index === 0) return true;\n    return false\n}\n\n// to be MOVED LATER *!*!*!*!*!*!!*!*!*!*!*!*!*!*\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\n// FN will draw an image at the appropriate spot on the grid\nconst drawOnGrid = (image, context, gridX, gridY, clearRectBoolean) => {\n    console.log(\"draw on grid\", gridX, gridY)\n        const offsetX = 22;\n        const offsetY = 131;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n            // context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH )\n            //works and original func\n            // context.drawImage(image, offsetX, offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                context.clearRect(offsetX, offsetY, 86, 86)\n                context.drawImage(image, offsetX, offsetY, 86, 86)\n            } else {\n                context.drawImage(image, offsetX, offsetY, 86, 86 )\n            }\n        } else if (gridX === 0 && gridY > 0){\n            //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n            }\n        } else {\n            // \n             //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                //original\n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            }\n        }\n\n    \n    }\n\n    // export const animateSquares = (image, cb) => {\n    //     context.clearRect(0, 0, 646, 505)\n    //     for(let i = 0; i < 4; i++){\n    //         for(let j = 0; j < 7; j++){\n    //             drawOnGrid(image, i, j)\n                \n    //         }\n    //     }\n\n    // }\n\n    // export const loadAlienShip = () => {\n    //     // const alienSrc = \"/src/images/aliens/ships/08-Netuno.png\";\n    //     // const alienShip = new Image();\n    //     // alienShip.src = alienSrc;\n\n    //     // alienShip.onload( () => {\n    //     //     return true\n    //     // })\n\n    // }\n\n\n\n// export default canvasEvents;\n\n\n\n","export default \"images/grass_mix_d.jpg\";","import {animateSquares,\n     canvasEvents,\n      drawGrass,\n       drawOnGrid,\n    summonAliens} from \"./scripts/canvas_events.js\"\nimport progressBar from \"./scripts/progressBar.js\"\nimport \"./styles/index.scss\";\n\nimport {\n    drawResourcesText,\n    drawAlienCountdown,\n    clearAlienText,\n    adjustTimer,\n    getTime,\n    setTimer,\n    drawMidline,\n    spawnResources} from \"./scripts/pointsSystem\";\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n    //draw Production progress bar\n    // y is 375\n    // const blankLeft = new progressBar(context, -34, 125, \"blank\", \"v\")\n    const blankLeft = new progressBar(context, -34, 115, \"blank\", \"v\");\n    const blankRight = new progressBar(context, 590, 115, \"blank\", \"v\");\n    // debugger\n    drawMidline(context)\n\n    const makeCountdownId = setInterval(() => {\n        adjustTimer(-1);\n        drawAlienCountdown(context);\n        if(getTime() === 0){\n            clearAlienText(context)\n            clearInterval(makeCountdownId)\n            summonAliens(context)\n        }\n    },1000)\n\n    const makeResourcesId = setInterval(() => {\n        spawnResources();\n        drawResourcesText(context);\n    }, 600)\n\n    setInterval(() => {\n        drawResourcesText(context);\n    }, 250)\n    // spawnResources();\n    // drawResourcesText(context);\n\n\n\n\n    // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", 10);\n    // const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", 20);\n    // const redBar = new progressBar(context, -34, 375, \"blue\", \"v\")\n\n    // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", 90);\n\n    // greenBar.increaseFill(100)\n\n    // const yellowBar = new progressBar(context, 590, 375, \"yellow\", \"v\")\n\n    //start points\n    // const yellowBar = new progressBar(context, 590, 445, \"yellow\", \"v\")\n    // const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", 20);\n    // productionBar.drawBar(context)\n    // productionBar.blankSprite.onload = () => {\n    //     \n    //     context.drawImage(productionBar.blankSprite, productionBar.startX, productionBar.startY);\n    //     context.drawImage(productionBar.colorSprite, productionBar.startX, productionBar.startY);\n    // }\n    // productionBar.increaseFill()\n    // progressBar(context, 626, 476, \"blue\")\n\n    \n    \n\n    \n    // let choice = menu.options[menu.selectedIndex].value\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n        // for(let i = 0; i < 7; i++){\n        //     for(let j = 0; j < 7; j++){\n                // drawOnGrid(imgTest, i, j)\n                // animateSquares(imgTest)\n\n\n        //     }\n        // }\n        // drawOnGrid(imgTest, 6)\n    // }\n\n    \n\n\n})\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n    //     drawOnGrid(imgTest, 0, 5)\n    //     // drawOnGrid(imgTest, 6)\n    // }\n//  backgrounds()\n\n\n\n\n\n// const backgrounds = require(\"./scripts/backgrounds.js\")"],"sourceRoot":""}