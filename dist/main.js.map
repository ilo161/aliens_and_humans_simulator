{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/util.js","webpack:///./src/scripts/alien_ship.js","webpack:///./src/scripts/mothership.js","webpack:///./src/images/aliens/ships/08-Netuno.png","webpack:///./src/images/aliens/ships/06-Saturno.png","webpack:///./src/images/aliens/ships/09-Pluto.png","webpack:///./src/scripts/canvas_events.js","webpack:///./src/images/community/pyramids/golden_pyramid.png","webpack:///./src/scripts/progressBar.js","webpack:///./src/images/h_progress_bars/H_BarBackground.png","webpack:///./src/images/v_progress_bars/V_BarBackground.png","webpack:///./src/images/h_progress_bars/H_BlueBar.png","webpack:///./src/images/h_progress_bars/H_GreenBar.png","webpack:///./src/images/h_progress_bars/H_RedBar.png","webpack:///./src/images/h_progress_bars/H_YellowBar.png","webpack:///./src/images/v_progress_bars/V_BlueBar.png","webpack:///./src/images/v_progress_bars/V_GreenBar.png","webpack:///./src/images/v_progress_bars/V_RedBar.png","webpack:///./src/images/v_progress_bars/V_YellowBar.png","webpack:///./src/index.js","webpack:///./src/images/terrain_grass/grass_mix_d.jpg"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildAssetPath","imgSrc","AlienShip","context","filePath","xStart","yStart","scaleW","scaleH","this","sprite","undefined","movements","moveIdx","loadAlienShip","lToRAnimate","drawShip","moveSpanX","push","x","y","alienSrc","Image","src","drawImage","length","MotherShip","army","shipNum","shipFiles","yPos","alienShip","console","log","currentGrid","onPlayerGrid","buildPlayerGrid","j","isPresent","cORp","klass","level","buildPlayerState","civilization","community","parks","pyramids","file","cBoost","pBoost","index","ruins","meditationCircles","trees","production","farms","buildings","houses","energy","wind","solar","hydro","canvasEvents","canvasHome","menuContainer","document","getElementsByClassName","menu","playerAlert","addEventListener","e","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","getCoords","Array","from","classList","includes","toggle","len","options","setAttribute","choiceStr","selectedIndex","chosenBuilding","civilizationMenuSelect","filePathBuild","isGridOccupied","objAtGridPos","ele","createElement","text","createTextNode","appendChild","removeChild","childNodes","parseImage","occupyGrid","childElementCount","selected","split","image","onload","drawOnGrid","gridX","gridY","progressBar","startX","startY","color","orientation","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","colorBarSrc","selectColor","that","ori","hColors","vColors","getElementById","getContext","img1","drawRow","rowX","rowY","drawGrass","motherShip","makeShips","intId1","setInterval","intId2","intId3","setTimeout","clearInterval","summonAliens"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const buildAssetPath = (imgSrc) => {\n    return `./dist/${imgSrc}`;\n}","import {buildAssetPath} from \"./util.js\";\n\nclass AlienShip {\n    constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        this.context = context;\n        this.xStart = xStart;\n        this.yStart = yStart;\n        this.sprite = undefined;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n\n        this.filePath = filePath\n\n        this.movements = [];\n        this.moveIdx = 0;\n\n        this.loadAlienShip = this.loadAlienShip.bind(this);\n        this.lToRAnimate = this.lToRAnimate.bind(this);\n        this.drawShip = this.drawShip.bind(this);\n        this.loadAlienShip()\n        this.moveSpanX()\n    }\n\n    // generate the movements for an alien Ship\n     moveSpanX(){\n            for(let i = 1; i < 23 ; i++){\n                this.movements.push({x: (this.xStart * (i * 40)), y: (this.yStart)})\n            }\n        }\n\n    loadAlienShip(){\n    const alienSrc = this.filePath;\n\n    this.sprite = new Image();\n    this.sprite.src = alienSrc;        \n\n    }\n\n    drawShip(){\n       \n        //works with set pixel\n        // this.context.drawImage(this.sprite, 0, 0, 100, 100);\n\n        // using animation\n        // this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, 100, 100);\n\n        //works with fraction\n        // this.context.drawImage(this.sprite, 0, 0, (this.sprite.width / this.scaleW), (this.sprite.height / this.scaleH));\n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n\n    }\n\n    lToRAnimate(){\n        let x = 0\n        // console.log(\"ship moving\")\n\n            // console.log(this.movements[this.moveIdx])\n            // this.context.clearRect(0,0,646,131)\n            const topLeftX = this.movements[this.moveIdx].x\n            const topLeftY = this.movements[this.moveIdx].y\n\n            // console.log(topLeftX)\n            // console.log(topLeftY)\n\n            //this function removes previous drawing of alien ship.\n            if (this.moveIdx > 0){\n                // this.context.clearRect((this.scaleW * this.moveIdx ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n                //old but works\n                // this.context.clearRect((topLeftX ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n            }\n\n            // this.context.clearRect(topLeftX, topLeftY,(this.scaleW * - 1), (this.scaleW * -1 ))\n\n            // this.context.clearRect(300 , 300,(this.scaleW * (1)), (this.scaleW * -1 ))\n           this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n            this.moveIdx++;\n            if(this.moveIdx >= this.movements.length) this.moveIdx = 0;\n            // if(x === 15){\n            //     window.clearInterval()\n            // }\n        // }\n    }\n}\n\nexport default AlienShip;","import {buildAssetPath} from \"./util.js\"\nimport AlienShip from \"./alien_ship\"\n\nimport neptune from \"../images/aliens/ships/08-Netuno.png\";\nimport saturn from \"../images/aliens/ships/06-Saturno.png\";\nimport pluto from \"../images/aliens/ships/09-Pluto.png\";\n\nclass MotherShip {\n    constructor(context){\n        this.context = context;\n        this.army = []\n\n    }\n\n    makeShips(){\n        let shipNum = this.army.length;\n\n        // const shipFiles = [\n        //     \"/src/images/aliens/ships/08-Netuno.png\",\n        //     \"/src/images/aliens/ships/06-Saturno.png\",\n        //     \"/src/images/aliens/ships/09-Pluto.png\"\n        // ]\n\n        const shipFiles = [\n            buildAssetPath(neptune),\n            buildAssetPath(saturn),\n            buildAssetPath(pluto)\n        ]\n        // constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        while(this.army.length < 3){\n            shipNum = this.army.length;\n            const yPos = undefined;\n\n            if (shipNum === 0){\n                yPos = shipNum;\n            } else {\n                yPos = shipNum * 40;\n            }\n\n            const alienSrc = shipFiles[shipNum]\n            const alienShip = new AlienShip(this.context, alienSrc, 1, yPos, 40, 40)\n            this.army.push(alienShip)\n\n        }\n    }\n\n}\n\nexport default MotherShip","export default \"images/08-Netuno.png\";","export default \"images/06-Saturno.png\";","export default \"images/09-Pluto.png\";","console.log(\"hello from canvas events\")\nimport AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\nimport {buildAssetPath} from \"./util\"\n\nimport pyramid0 from \"../images/community/pyramids/golden_pyramid.png\"\n\nimport grassD from \"../images/terrain_grass/grass_mix_d.jpg\"\n// import Alien from \"./alien_ship\"\n\n// //ex: [3,4]\nlet currentGrid = undefined;\n\n\n// function buildAssetPath(imgSrc) {\n//     return `./dist/${imgSrc}`;\n// }\n\nconst gameOptions = {\n    0:  {0: [false, {}],\n         1: \"clicked 0,1\",\n         2: \"clicked 0,2\",\n         3: \"clicked 0,3\",\n         4: \"clicked 0,4\",\n         5: \"clicked 0,5\",\n         6: \"clicked 0,6\"}\n    \n}\n\n// const community1={pyramids:\n//                         {0:\"you did it!\",\n//                          1: \"/src/images/community/pyramids/golden_pyramid.png\"}\n//                     }\n\n// skeleton\n// {isPresent: false, klass: \"\", level:0}\n\n\nconst onPlayerGrid = buildPlayerState()\n\n\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                parks: [],\n                pyramids: [{file: buildAssetPath(pyramid0), name:\"goldenPyramid\", cBoost: 10, pBoost: 0, cORp: \"community\", klass:\"pyramids\", index:0 }],\n                ruins: [{}],\n                meditationCircles: [],\n                trees:[]\n                },\n        production: {\n                farms: [],\n                buildings: [],\n                houses: [],\n                energy: {\n                        wind:[],\n                        solar:[],\n                        hydro:[]\n                }\n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    \n    //When user clicks on grid it sets currentGrid. If they click outside, it returns\n    // undefined\n    canvasHome.addEventListener('mousedown', (e) => {\n        currentGrid = getCoords(e);\n\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n        } \n        console.log(`currentGrid: ${currentGrid}`)\n    \n    })\n\n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener('change', ()=>{\n        const choiceStr = menu.options[menu.selectedIndex].value\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n            parseImage(context, filePathBuild, currentGrid)\n            occupyGrid(chosenBuilding)\n\n            // Remove error message if there is one\n            if (playerAlert.childElementCount > 0){\n                playerAlert.removeChild(playerAlert.childNodes[0]); \n            }\n        }\n        // Already a building on a grid\n         else if(isGridOccupied()){\n             const x = currentGrid[0]\n             const y = currentGrid[1]\n             const objAtGridPos = onPlayerGrid[x][y]\n\n             // Player tries to add the same building to the occupied grid\n             if (chosenBuilding.klass === objAtGridPos.klass && chosenBuilding.index === objAtGridPos.level){\n                \n                // Add Error message to the DOM -> \"That building is already there. Try upgrading!\"\n                const ele = document.createElement('p');\n\n                var text = document.createTextNode(\"That building is already there. Try upgrading!\"); \n                ele.appendChild(text)\n                ele.setAttribute('class', 'playerAlert');\n                playerAlert.appendChild(ele)\n\n             } else {\n                 //Remove error message \n                 // ********************** ADD FUNCTION HERE TO UPGRADE BUILDING\n                 playerAlert.removeChild(playerAlert.childNodes[0]); \n             }\n\n         }\n\n\n        // reset default of dropdown\n        if (menu.selectedIndex != null){\n            menu.selectedIndex = null\n        }\n\n\n\n    })\n\n    // menuContainer.classList.toggle(\"shrink\")\n    // debugger\n    // menuContainer.classList.toggle(\"hidden\")\n\n\n    \n    // console.log(canvasRect)\n   \n\n    // function onDown(e){\n    //         cx = e.pageX;\n    //         cy = e.pageY;\n    //     // console.log(`X: ${cx}, Y: ${cy}`)\n    // }\n    \n    function getCoords(e){\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        console.log(canvasRect)\n\n        console.log(\"-------\")\n        console.log(cx)\n        console.log(cy)\n        const col = Math.floor((cx - 22) / 86) ;\n        const row = Math.floor((cy - 131) / 86) ;\n\n        // current location console.log\n        console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n    }\n\n    function seeGridOptions(row, col){\n        console.log(gameOptions[row][col])\n    }\n\n    function gridClick(row, col){\n\n\n    }\n\n}\n\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n        // return community1[first][second]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = buildAssetPath(grassD)\n\n        img1.onload = () => {\n\n            drawRow(context, img1, 22, 131)\n            drawRow(context, img1, 22, 217)\n            drawRow(context, img1, 22, 303)\n            drawRow(context, img1, 22, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n\n            // context.drawImage(image, rowX, rowY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            // debugger\n            rowX += 86\n        }\n    }\n}\n\nconst isGridOccupied = () => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    return onPlayerGrid[x][y].isPresent\n}\n\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n    return onPlayerGrid[x][y]\n}\n\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\nconst drawOnGrid = (image, context, gridX, gridY) => {\n    console.log(\"draw on grid\")\n        const offsetX = 22;\n        const offsetY = 131;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n            // context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH )\n            //works and original func\n            // context.drawImage(image, offsetX, offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, offsetX, offsetY, 86, 86 )\n        } else if (gridX === 0 && gridY > 0){\n            //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n        } else {\n            // debugger\n             //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n        }\n\n    \n    }\n\n    // export const animateSquares = (image, cb) => {\n    //     context.clearRect(0, 0, 646, 505)\n    //     for(let i = 0; i < 4; i++){\n    //         for(let j = 0; j < 7; j++){\n    //             drawOnGrid(image, i, j)\n                \n    //         }\n    //     }\n\n    // }\n\n    // export const loadAlienShip = () => {\n    //     // const alienSrc = \"/src/images/aliens/ships/08-Netuno.png\";\n    //     // const alienShip = new Image();\n    //     // alienShip.src = alienSrc;\n\n    //     // alienShip.onload( () => {\n    //     //     return true\n    //     // })\n\n    // }\n\n\n\n// export default canvasEvents;\n\n\n\n","export default \"images/golden_pyramid.png\";","import hBlank from \"../images/h_progress_bars/H_BarBackground.png\"\nimport hBlue from \"../images/h_progress_bars/H_BlueBar.png\"\nimport hGreen from \"../images/h_progress_bars/H_GreenBar.png\"\nimport hRed from \"../images/h_progress_bars/H_RedBar.png\"\nimport hYellow from \"../images/h_progress_bars/H_YellowBar.png\"\n\n\nimport vBlank from \"../images/v_progress_bars/V_BarBackground.png\"\nimport vBlue from \"../images/v_progress_bars/V_BlueBar.png\"\nimport vGreen from \"../images/v_progress_bars/V_GreenBar.png\"\nimport vRed from \"../images/v_progress_bars/V_RedBar.png\"\nimport vYellow from \"../images/v_progress_bars/V_YellowBar.png\"\nimport {buildAssetPath} from \"./util.js\"\n\n\nclass progressBar {\n    constructor(context, startX, startY, color, orientation){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.color = color;\n        this.blankSprite = undefined;\n        // this.blankSprite.src = this.orientationAndCreate(orientation);\n        this.colorSprite = undefined;\n        // this.colorSprite.src = this.selectColor(this.color, orientation);\n\n        // this.orientation = 0; \n        this.value = 0;\n\n\n       \n        this.loadSrc(orientation)\n\n        // this.blankSprite.onload = this.blankSprite.onload.bind(this);\n        // this.colorSprite.onload = this.colorSprite.onload.bind(this);\n\n        }\n\n    loadSrc(orientation){\n        const backgroundSrc = this.orientationAndCreate(orientation);\n        const colorBarSrc = this.selectColor(this.color, orientation)\n        \n        this.blankSprite = new Image();\n        this.colorSprite = new Image();\n\n        this.blankSprite.src = backgroundSrc; \n        this.colorSprite.src = colorBarSrc; \n        const that = this;\n        this.blankSprite.onload = (e) => {\n            // debugger\n            that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 100);\n            that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 100);\n        }\n\n\n    }\n\n        \n        // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // debugger\n            return buildAssetPath(hBlank)\n        } else if(ori ===\"v\" || ori === \"V\") {\n            // debugger\n            return buildAssetPath(vBlank)\n        }\n\n        }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori){\n        let selected = undefined;\n        const hColors = {\n            \"blue\": buildAssetPath(hBlue),\n            \"green\": buildAssetPath(hGreen),\n            \"red\": buildAssetPath(hRed),\n            \"yellow\": buildAssetPath(hYellow)\n        }\n\n        const vColors = {\n            \"blue\": buildAssetPath(vBlue),\n            \"green\": buildAssetPath(vGreen),\n            \"red\": buildAssetPath(vRed),\n            \"yellow\": buildAssetPath(vYellow)\n        }\n\n        if (ori === \"h\" || ori === \"H\"){\n            selected = hColors[color];\n\n            return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n    }\n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        // context.drawImage()\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","export default \"images/H_BarBackground.png\";","export default \"images/V_BarBackground.png\";","export default \"images/H_BlueBar.png\";","export default \"images/H_GreenBar.png\";","export default \"images/H_RedBar.png\";","export default \"images/H_YellowBar.png\";","export default \"images/V_BlueBar.png\";","export default \"images/V_GreenBar.png\";","export default \"images/V_RedBar.png\";","export default \"images/V_YellowBar.png\";","import {animateSquares,\n     canvasEvents,\n      drawGrass,\n       drawOnGrid,\n    summonAliens} from \"./scripts/canvas_events.js\"\nimport progressBar from \"./scripts/progressBar.js\"\nimport \"./styles/index.scss\";\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n    //draw Production progress bar\n    \n    const productionBar = new progressBar(context, -34, 375, \"red\", \"v\")\n    const productionBar2 = new progressBar(context, 590, 375, \"yellow\", \"v\")\n    // productionBar.drawBar(context)\n    // productionBar.blankSprite.onload = () => {\n    //     debugger\n    //     context.drawImage(productionBar.blankSprite, productionBar.startX, productionBar.startY);\n    //     context.drawImage(productionBar.colorSprite, productionBar.startX, productionBar.startY);\n    // }\n    // productionBar.increaseFill()\n    // progressBar(context, 626, 476, \"blue\")\n\n    summonAliens(context)\n    \n\n    \n    // let choice = menu.options[menu.selectedIndex].value\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n        // for(let i = 0; i < 7; i++){\n        //     for(let j = 0; j < 7; j++){\n                // drawOnGrid(imgTest, i, j)\n                // animateSquares(imgTest)\n\n\n        //     }\n        // }\n        // drawOnGrid(imgTest, 6)\n    // }\n\n    \n\n\n})\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n    //     drawOnGrid(imgTest, 0, 5)\n    //     // drawOnGrid(imgTest, 6)\n    // }\n//  backgrounds()\n\n\n\n\n\n// const backgrounds = require(\"./scripts/backgrounds.js\")","export default \"images/grass_mix_d.jpg\";"],"sourceRoot":""}