{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/util.js","webpack:///./src/scripts/alien_ship.js","webpack:///./src/scripts/mothership.js","webpack:///./src/images/aliens/ships/08-Netuno.png","webpack:///./src/images/aliens/ships/06-Saturno.png","webpack:///./src/images/aliens/ships/09-Pluto.png","webpack:///./src/scripts/progressBar.js","webpack:///./src/images/v_progress_bars/V_BarBackground.png","webpack:///./src/images/v_progress_bars/V_BlueBar10.png","webpack:///./src/images/v_progress_bars/V_BlueBar20.png","webpack:///./src/images/v_progress_bars/V_BlueBar30.png","webpack:///./src/images/v_progress_bars/V_BlueBar40.png","webpack:///./src/images/v_progress_bars/V_BlueBar50.png","webpack:///./src/images/v_progress_bars/V_BlueBar60.png","webpack:///./src/images/v_progress_bars/V_BlueBar70.png","webpack:///./src/images/v_progress_bars/V_BlueBar80.png","webpack:///./src/images/v_progress_bars/V_BlueBar90.png","webpack:///./src/images/v_progress_bars/V_BlueBar100.png","webpack:///./src/images/v_progress_bars/V_GreenBar10.png","webpack:///./src/images/v_progress_bars/V_GreenBar20.png","webpack:///./src/images/v_progress_bars/V_GreenBar30.png","webpack:///./src/images/v_progress_bars/V_GreenBar40.png","webpack:///./src/images/v_progress_bars/V_GreenBar50.png","webpack:///./src/images/v_progress_bars/V_GreenBar60.png","webpack:///./src/images/v_progress_bars/V_GreenBar70.png","webpack:///./src/images/v_progress_bars/V_GreenBar80.png","webpack:///./src/images/v_progress_bars/V_GreenBar90.png","webpack:///./src/images/v_progress_bars/V_GreenBar100.png","webpack:///./src/scripts/pointsSystem.js","webpack:///./src/scripts/allSprites.js","webpack:///./src/images/community/fountains/00fountain.png","webpack:///./src/images/community/meditations/00plain_meditation.png","webpack:///./src/images/community/meditations/01activated_meditation.png","webpack:///./src/images/community/meditations/02light_meditation.png","webpack:///./src/images/community/pyramids/00red_pyramid.png","webpack:///./src/images/community/pyramids/01golden_pyramid.png","webpack:///./src/images/community/pyramids/02light_pyramid.png","webpack:///./src/images/community/trees/00small_tree.png","webpack:///./src/images/community/trees/01mighty_tree.png","webpack:///./src/images/community/trees/02tree_of_light.png","webpack:///./src/images/community/ruins/00yellow_slab.png","webpack:///./src/images/community/ruins/01rainbow_rock.png","webpack:///./src/images/community/ruins/02rock_of_light.png","webpack:///./src/images/production/business/00merchant_tent.png","webpack:///./src/images/production/business/01department_store.png","webpack:///./src/images/production/business/02skyscraper.png","webpack:///./src/images/production/energy/00water_wheel.png","webpack:///./src/images/production/energy/01windmill.png","webpack:///./src/images/production/energy/02tesla_tower.png","webpack:///./src/images/production/energy/03nuclear.png","webpack:///./src/images/production/energy/04nuclear.png","webpack:///./src/images/production/flight/01hot_air_balloon.png","webpack:///./src/images/production/flight/02toy_helicopter.png","webpack:///./src/images/production/flight/03airplane.png","webpack:///./src/images/production/flight/04jet.png","webpack:///./src/images/production/houses/00shack.png","webpack:///./src/images/production/houses/01butcher.png","webpack:///./src/images/production/houses/02house.png","webpack:///./src/images/production/weapons/01defensive_missile.png","webpack:///./src/images/production/weapons/02attack_missile.png","webpack:///./src/images/production/weapons/03mind_control.png","webpack:///./src/scripts/canvas_events.js","webpack:///./src/images/terrain_grass/grass_mix_d.jpg","webpack:///./src/images/cursor.png","webpack:///./src/scripts/leviathan.js","webpack:///./src/index.js","webpack:///./src/images/aliens/leviathan_strip.png","webpack:///./src/images/background/full_lightning.png","webpack:///./src/images/animals/chicken.png"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildAssetPath","imgSrc","animateLeviathans","context","levis","leviatathanID","setInterval","isStatic","some","levi","undefined","drawSpin","fillStyle","fillRect","canvas","width","height","forEach","drawFacing","AlienShip","filePath","xStart","yStart","scaleW","scaleH","this","sprite","movements","moveIdx","loadAlienShip","lToRAnimate","drawShip","moveSpanX","push","x","y","alienSrc","Image","src","drawImage","length","MotherShip","army","shipNum","shipFiles","yPos","alienShip","progressBar","startX","startY","color","orientation","points","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","that","onload","e","colorBarSrc","selectColor","ori","vColors","10","20","30","40","50","60","70","80","90","100","playerPoints","community","production","resources","alienTimer","adjustResources","num","getPoints","cORp","drawPointsText","clearHeight","clearRect","font","strokeStyle","fillText","startXTxt","startYTxt","strokeText","allSprites","_listener","currentGrid","previousGrid","onMobile","grassSquare","cursor","onPlayerGrid","buildPlayerGrid","j","isPresent","klass","level","buildPlayerState","civilization","fountains","file","boost","index","meditations","pyramids","ruins","trees","business","energy","flight","houses","weapons","canvasEvents","canvasHome","menuContainer","document","getElementsByClassName","menu","allDropDownCategories","Array","from","playerAlert","playerAlert2","handleMouseDown","addEventListener","test","navigator","userAgent","removePlayerAlert","isGridOccupied","currBuild","appendChild","generateAlert","generateCurrSelText","childElementCount","includes","target","choiceStr","options","selectedIndex","verifyBuildingMatch","disabled","chosenBuilding","civilizationMenuSelect","filePathBuild","objAtGridPos","drawOnGrid","parseImage","occupyGrid","isInitialBuilding","fillPercentage","style","adjustPoints","nextcORp","nextKlass","nextIndex","optionsArr","split","parseInt","maxIndexOfType","getCoords","classList","toggle","len","setAttribute","prevX","prevY","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","gridDecoderX","0","1","2","3","gridDecoderY","4","5","6","msg","isErrorMsg","ele","createElement","text","createTextNode","$p","parts","posText","justBuilt","alertType","removeChild","childNodes","selected","image","gridX","gridY","clearRectBoolean","Leviathan","spinCount","cWidth","cHeight","okToSpin","sx","sy","properties","position","id","okToClearCanvas","clearInterval","leviathanSprite","fullLightning","chicken","getElementById","getContext","youWin","youLose","img1","drawRow","rowX","rowY","drawGrass","leviathanArr","leviCx","leviCy","leviCount","drawMidline","alpha","numeric","startAlphaY","startNumX","drawLetterNum","drawResourcesTextId","drawResourcesText","makeCountdownId","halfWidth","drawAlienCountdown","clearAlienText","removeEventListener","motherShip","makeShips","intId1","intId2","intId3","setTimeout","summonAliens","animateSquares","drawLightning"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const buildAssetPath = (imgSrc) => {\n    return `./dist/${imgSrc}`;\n}\n\nexport const animateLeviathans = (context, ...levis) => {\n    const leviatathanID = setInterval( () => {\n      let isStatic = levis.some(levi => {\n\n        while (isStatic === undefined){\n            return levi.drawSpin(leviatathanID)\n        }\n      })   \n\n       if (isStatic === true){\n            context.fillStyle = \"#000\";\n            context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n            levis.forEach(levi => levi.drawFacing())\n        }\n      \n    }, 50)\n}\n\n\n","import {buildAssetPath} from \"./util.js\";\n\nclass AlienShip {\n    constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        this.context = context;\n        this.xStart = xStart;\n        this.yStart = yStart;\n        this.sprite = undefined;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n\n        this.filePath = filePath\n\n        this.movements = [];\n        this.moveIdx = 0;\n\n        this.loadAlienShip = this.loadAlienShip.bind(this);\n        this.lToRAnimate = this.lToRAnimate.bind(this);\n        this.drawShip = this.drawShip.bind(this);\n        this.loadAlienShip()\n        this.moveSpanX()\n    }\n\n    // generate the movements for an alien Ship\n     moveSpanX(){\n            for(let i = 1; i < 23 ; i++){\n                this.movements.push({x: (this.xStart * (i * 40)), y: (this.yStart)})\n            }\n        }\n\n    loadAlienShip(){\n    const alienSrc = this.filePath;\n\n    this.sprite = new Image();\n    this.sprite.src = alienSrc;        \n\n    }\n\n    drawShip(){\n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n    }\n\n    lToRAnimate(){\n        let x = 0\n\n        const topLeftX = this.movements[this.moveIdx].x\n        const topLeftY = this.movements[this.moveIdx].y\n    \n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n        this.moveIdx++;\n        if(this.moveIdx >= this.movements.length) this.moveIdx = 0;\n    }\n}\n\nexport default AlienShip;","import {buildAssetPath} from \"./util.js\"\nimport AlienShip from \"./alien_ship\"\n\nimport neptune from \"../images/aliens/ships/08-Netuno.png\";\nimport saturn from \"../images/aliens/ships/06-Saturno.png\";\nimport pluto from \"../images/aliens/ships/09-Pluto.png\";\n\nclass MotherShip {\n    constructor(context){\n        this.context = context;\n        this.army = []\n\n    }\n\n    makeShips(){\n        let shipNum = this.army.length;\n\n        const shipFiles = [\n            buildAssetPath(neptune),\n            buildAssetPath(saturn),\n            buildAssetPath(pluto)\n        ]\n        // constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        while(this.army.length < 3){\n            shipNum = this.army.length;\n            const yPos = undefined;\n\n            if (shipNum === 0){\n                yPos = shipNum;\n            } else {\n                yPos = shipNum * 40;\n            }\n\n            const alienSrc = shipFiles[shipNum]\n            const alienShip = new AlienShip(this.context, alienSrc, 1, yPos, 40, 40)\n            this.army.push(alienShip)\n\n        }\n    }\n\n}\n\nexport default MotherShip","export default \"images/08-Netuno.png\";","export default \"images/06-Saturno.png\";","export default \"images/09-Pluto.png\";","import vBlank from \"../images/v_progress_bars/V_BarBackground.png\"\nimport vBlue10 from \"../images/v_progress_bars/V_BlueBar10.png\"\nimport vBlue20 from \"../images/v_progress_bars/V_BlueBar20.png\"\nimport vBlue30 from \"../images/v_progress_bars/V_BlueBar30.png\"\nimport vBlue40 from \"../images/v_progress_bars/V_BlueBar40.png\"\nimport vBlue50 from \"../images/v_progress_bars/V_BlueBar50.png\"\nimport vBlue60 from \"../images/v_progress_bars/V_BlueBar60.png\"\nimport vBlue70 from \"../images/v_progress_bars/V_BlueBar70.png\"\nimport vBlue80 from \"../images/v_progress_bars/V_BlueBar80.png\"\nimport vBlue90 from \"../images/v_progress_bars/V_BlueBar90.png\"\nimport vBlue100 from \"../images/v_progress_bars/V_BlueBar100.png\"\n\nimport vGreen10 from \"../images/v_progress_bars/V_GreenBar10.png\"\nimport vGreen20 from \"../images/v_progress_bars/V_GreenBar20.png\"\nimport vGreen30 from \"../images/v_progress_bars/V_GreenBar30.png\"\nimport vGreen40 from \"../images/v_progress_bars/V_GreenBar40.png\"\nimport vGreen50 from \"../images/v_progress_bars/V_GreenBar50.png\"\nimport vGreen60 from \"../images/v_progress_bars/V_GreenBar60.png\"\nimport vGreen70 from \"../images/v_progress_bars/V_GreenBar70.png\"\nimport vGreen80 from \"../images/v_progress_bars/V_GreenBar80.png\"\nimport vGreen90 from \"../images/v_progress_bars/V_GreenBar90.png\"\nimport vGreen100 from \"../images/v_progress_bars/V_GreenBar100.png\"\n\n\nimport {buildAssetPath} from \"./util.js\"\n\n\nclass progressBar {\n    constructor(context, startX, startY, color, orientation, value){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.points = 30;\n        this.color = color;\n        this.value = value;\n        this.orientation = orientation\n\n        this.blankSprite = undefined;\n        this.colorSprite = undefined;\n\n        this.loadSrc(orientation)\n        \n        }\n\n    loadSrc(orientation){\n        if(this.color === \"blank\"){\n            const backgroundSrc = this.orientationAndCreate(orientation);\n            this.blankSprite = new Image();\n            this.blankSprite.src = backgroundSrc; \n            \n            const that = this;\n            this.blankSprite.onload = (e) => {\n\n                that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 378);\n            }\n        } else {\n            const colorBarSrc = this.selectColor(this.color, orientation, this.value)\n            this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n\n            const that = this;\n            this.colorSprite.onload = (e) => {\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n        \n        \n        \n\n        \n       \n\n\n    }\n        \n    // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // return buildAssetPath(hBlank)\n        } else if(ori ===\"v\" || ori === \"V\") {\n\n            return buildAssetPath(vBlank)\n        }\n\n    }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori, value){\n        let selected = undefined;\n\n        // const hColors = {\n        //     \"blank\": buildAssetPath(hBlank),\n        //     \"blue\": buildAssetPath(hBlue),\n        //     \"green\": buildAssetPath(hGreen),\n        //     \"red\": buildAssetPath(hRed),\n        //     \"yellow\": buildAssetPath(hYellow)\n        // }\n\n        const vColors = {\n            \"blank\": buildAssetPath(vBlank),\n            \"blue\": {10: buildAssetPath(vBlue10),\n                     20: buildAssetPath(vBlue20),\n                     30: buildAssetPath(vBlue30),\n                     40: buildAssetPath(vBlue40),\n                     50: buildAssetPath(vBlue50),\n                     60: buildAssetPath(vBlue60),\n                     70: buildAssetPath(vBlue70),\n                     80: buildAssetPath(vBlue80),\n                     90: buildAssetPath(vBlue90),\n                     100: buildAssetPath(vBlue100)\n            },\n            \"green\": {10: buildAssetPath(vGreen10),\n                     20: buildAssetPath(vGreen20),\n                     30: buildAssetPath(vGreen30),\n                     40: buildAssetPath(vGreen40),\n                     50: buildAssetPath(vGreen50),\n                     60: buildAssetPath(vGreen60),\n                     70: buildAssetPath(vGreen70),\n                     80: buildAssetPath(vGreen80),\n                     90: buildAssetPath(vGreen90),\n                     100: buildAssetPath(vGreen100)\n             }\n            }\n\n        if (ori === \"h\" || ori === \"H\"){\n            // selected = hColors[color];\n\n            // return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color][value];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n\n            this.value = value\n            const colorBarSrc = this.selectColor(this.color, this.orientation, this.value)\n\n            this.colorSprite.src = colorBarSrc; \n\n            const that = this;\n            this.colorSprite.onload = (e) => {\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n    \n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","export default \"images/V_BarBackground.png\";","export default \"images/V_BlueBar10.png\";","export default \"images/V_BlueBar20.png\";","export default \"images/V_BlueBar30.png\";","export default \"images/V_BlueBar40.png\";","export default \"images/V_BlueBar50.png\";","export default \"images/V_BlueBar60.png\";","export default \"images/V_BlueBar70.png\";","export default \"images/V_BlueBar80.png\";","export default \"images/V_BlueBar90.png\";","export default \"images/V_BlueBar100.png\";","export default \"images/V_GreenBar10.png\";","export default \"images/V_GreenBar20.png\";","export default \"images/V_GreenBar30.png\";","export default \"images/V_GreenBar40.png\";","export default \"images/V_GreenBar50.png\";","export default \"images/V_GreenBar60.png\";","export default \"images/V_GreenBar70.png\";","export default \"images/V_GreenBar80.png\";","export default \"images/V_GreenBar90.png\";","export default \"images/V_GreenBar100.png\";","import progressBar from \"./progressBar.js\"\n\n// contains money, and current build points for player throughout the game\nexport const playerPoints = {\n    community: 0,\n    production: 0,\n    resources: 500,\n    alienTimer: 120\n}\n\n// cORp stands for community or production\nexport const adjustPoints = (points, context, style = \"community\") => {\n\n    let fillPercentage; \n    switch(true){\n        case (points <= 142):\n            fillPercentage = 10;\n            break;\n        case (points > 142 && points <= 184):\n            fillPercentage = 20;\n            break;\n        case (points > 184 && points <= 226):\n            fillPercentage = 30;\n            break;\n        case (points > 226 && points <= 268):\n            fillPercentage = 40;\n            break;\n        case (points > 268 && points <= 310):\n            fillPercentage = 50;\n            break;\n        case (points > 310 && points <= 352):\n            fillPercentage = 60;\n            break;\n        case (points > 352 && points <= 394):\n            fillPercentage = 70;\n            break;\n        case (points > 394 && points <= 436):\n            fillPercentage = 80;\n            break;\n        case (points > 436 && points <= 700):\n            fillPercentage = 90;\n            break;\n        case (points > 700):\n            // debugger\n            fillPercentage = 100;\n            break\n        default:\n            break\n    }\n\n    if (style === \"community\"){\n        //save to variable because garbage collection\n        // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", fillPercentage);\n        const greenBar = new progressBar(context, -31, 105, \"green\", \"v\", fillPercentage);\n    } else {\n        // debugger\n        const blueBar = new progressBar(context, 612, 105, \"blue\", \"v\", fillPercentage);\n    }\n}\n\nexport const spawnResources = () => {\n    playerPoints.resources += 5;\n}\n\nexport const adjustResources = (num) => {\n    playerPoints.resources += num;\n}\n\nexport const adjustTimer = (num) => {\n    playerPoints.alienTimer += num;\n}\n\nexport const setTimer = (num) => {\n    playerPoints.alienTimer = num\n}\n\nexport const getTime = () => {\n    return playerPoints.alienTimer;\n}\n\nexport const getPoints = (cORp) => {\n    if(cORp === \"community\") return playerPoints.community\n    else return playerPoints.production\n}\n\nexport const clearAlienText = (context) => {\n    const startX = ((context.canvas.width / 2) - 116);\n    context.clearRect(startX, 0, 275, 80)\n}\n\n\nexport const drawMidline = (context) => {\n    const startX = ((context.canvas.width / 2))\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#66A1E7\"\n    context.strokeStyle = \"#55906F\";\n    context.fillText(\"|\", startX, 10);\n    context.strokeText(\"|\", startX, 10);\n}\n\nexport const drawAlienCountdown = (context) => {\n    const halfWidth = context.canvas.width / 2\n    const startX = ((context.canvas.width / 2) - 116);\n   \n    context.clearRect(startX, 0, 275, 80)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#FFF\";\n\n    context.fillText(\"Aliens are coming!\", startX, 30);\n    context.strokeText(\"Aliens are coming!\", startX, 30);\n     \n    context.fillText(playerPoints.alienTimer, halfWidth-10, 60);\n    context.strokeText(playerPoints.alienTimer, halfWidth-10, 60);\n   \n}\n\nexport const drawResourcesText = (context) => {\n    const startX = ((context.canvas.width / 2) - 108);\n    const startY = 522;\n\n    context.clearRect(startX, 500, 260, 30)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#FFF\";\n\n    context.fillText(\"Resources: \" + playerPoints.resources, startX, startY);\n    context.strokeText(\"Resources: \" + playerPoints.resources, startX, startY);\n  }\n\n  export const drawPointsText = (context, cORp) => {\n      \n    if (cORp === \"community\"){\n        const startX = 5;\n        const startY = 522;\n        const clearStartHeight = startY - 20;\n        const clearHeight = context.canvas.height - clearStartHeight;\n        context.clearRect(0, clearStartHeight, 225, clearHeight);\n        context.font = 'bold 20px Sans-Serif';\n        context.fillStyle = \"#9efdff\"\n        context.strokeStyle = \"#FFF\";\n        context.fillText(\"community: \" + playerPoints.community, startX, startY);\n\n    } else if(cORp === \"production\"){\n        //Txt coords\n        const startXTxt = context.canvas.width - 165\n        const startYTxt = 522;\n        // num coords\n        const startXPts = context.canvas.width - 55\n        const startYPts = startYTxt - 18;\n\n        const clearStartHeight = startYTxt - 33;\n        const clearHeight = context.canvas.height - clearStartHeight;\n        context.clearRect(startXTxt, clearStartHeight, startXTxt, clearHeight);\n        context.font = 'bold 20px Sans-Serif';\n        context.fillStyle = \"#FFF\"\n        context.strokeStyle = \"#000\";\n        \n        context.strokeText(\"production: \" + playerPoints.production, startXTxt, startYTxt);\n        context.fillText(\"production: \" + playerPoints.production, startXTxt, startYTxt);\n    } \n\n  }","import {buildAssetPath} from \"./util\";\n\n//Community\nimport fountain0 from \"../images/community/fountains/00fountain.png\";\n\nimport meditate0 from \"../images/community/meditations/00plain_meditation.png\";\nimport meditate1 from \"../images/community/meditations/01activated_meditation.png\";\nimport meditate2 from \"../images/community/meditations/02light_meditation.png\";\n\nimport pyramid0 from \"../images/community/pyramids/00red_pyramid.png\";\nimport pyramid1 from \"../images/community/pyramids/01golden_pyramid.png\";\nimport pyramid2 from \"../images/community/pyramids/02light_pyramid.png\";\n\nimport ruin0 from \"../images/community/ruins/00yellow_slab.png\";\nimport ruin1 from \"../images/community/ruins/01rainbow_rock.png\";\nimport ruin2 from \"../images/community/ruins/02rock_of_light.png\";\n\nimport tree0 from \"../images/community/trees/00small_tree.png\";\nimport tree1 from \"../images/community/trees/01mighty_tree.png\";\nimport tree2 from \"../images/community/trees/02tree_of_light.png\";\n\n\n//Production\n\nimport biz0 from \"../images/production/business/00merchant_tent.png\";\nimport biz1 from \"../images/production/business/01department_store.png\";\nimport biz2 from \"../images/production/business/02skyscraper.png\";\n\nimport energy0 from \"../images/production/energy/00water_wheel.png\";\nimport energy1 from \"../images/production/energy/01windmill.png\";\nimport energy2 from \"../images/production/energy/02tesla_tower.png\";\nimport energy3 from \"../images/production/energy/03nuclear.png\";\nimport energy4 from \"../images/production/energy/04nuclear.png\";\n\nimport flight0 from \"../images/production/flight/01hot_air_balloon.png\";\nimport flight1 from \"../images/production/flight/02toy_helicopter.png\";\nimport flight2 from \"../images/production/flight/03airplane.png\";\nimport flight3 from \"../images/production/flight/04jet.png\";\n\nimport house0 from \"../images/production/houses/00shack.png\";\nimport house1 from \"../images/production/houses/01butcher.png\";\nimport house2 from \"../images/production/houses/02house.png\";\n\nimport weapon0 from \"../images/production/weapons/01defensive_missile.png\";\nimport weapon1 from \"../images/production/weapons/02attack_missile.png\";\nimport weapon2 from \"../images/production/weapons/03mind_control.png\";\n\nexport const allSprites = {\n    \"fountain0\": fountain0,\n    \"---m\":\"meditation\",\n    \"meditate0\": meditate0,\n    \"meditate1\": meditate1,\n    \"meditate2\": meditate2,\n    \"---pyramid\":\"pyramids\",\n    \"pyramid0\": pyramid0,\n    \"pyramid1\": pyramid1,\n    \"pyramid2\": pyramid2,\n    \"---trees\":\"trees\",\n    \"tree0\": tree0,\n    \"tree1\": tree1,\n    \"tree2\": tree2,\n    \"---ruin\": \"ruin\",\n    \"ruin0\": ruin0,\n    \"ruin1\": ruin1,\n    \"ruin2\": ruin2,\n    \"p\":\"PRODUCTION\",\n    \"---biz\":\"business\",\n    \"biz0\": biz0,\n    \"biz1\": biz1,\n    \"biz2\": biz2,\n    \"---energy\": \"energy\",\n    \"energy0\": energy0,\n    \"energy1\": energy1,\n    \"energy2\": energy2,\n    \"energy3\": energy3,\n    \"energy4\": energy4,\n    \"---flight\":\"flight\",\n    \"flight0\": flight0,\n    \"flight1\": flight1,\n    \"flight2\": flight2,\n    \"flight3\": flight3,\n    \"---house\": \"house\",\n    \"house0\": house0,\n    \"house1\": house1,\n    \"house2\": house2,\n    \"--weapon\":\"weapon\",\n    \"weapon0\": weapon0,\n    \"weapon1\": weapon1,\n    \"weapon2\": weapon2\n}","export default \"images/00fountain.png\";","export default \"images/00plain_meditation.png\";","export default \"images/01activated_meditation.png\";","export default \"images/02light_meditation.png\";","export default \"images/00red_pyramid.png\";","export default \"images/01golden_pyramid.png\";","export default \"images/02light_pyramid.png\";","export default \"images/00small_tree.png\";","export default \"images/01mighty_tree.png\";","export default \"images/02tree_of_light.png\";","export default \"images/00yellow_slab.png\";","export default \"images/01rainbow_rock.png\";","export default \"images/02rock_of_light.png\";","export default \"images/00merchant_tent.png\";","export default \"images/01department_store.png\";","export default \"images/02skyscraper.png\";","export default \"images/00water_wheel.png\";","export default \"images/01windmill.png\";","export default \"images/02tesla_tower.png\";","export default \"images/03nuclear.png\";","export default \"images/04nuclear.png\";","export default \"images/01hot_air_balloon.png\";","export default \"images/02toy_helicopter.png\";","export default \"images/03airplane.png\";","export default \"images/04jet.png\";","export default \"images/00shack.png\";","export default \"images/01butcher.png\";","export default \"images/02house.png\";","export default \"images/01defensive_missile.png\";","export default \"images/02attack_missile.png\";","export default \"images/03mind_control.png\";","import AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\nimport {buildAssetPath} from \"./util\"\nimport {\n    playerPoints,\n    drawPointsText,\n    adjustPoints,\n    adjustResources,\n    adjustTimer\n} from \"./pointsSystem\"\n\nimport {allSprites} from \"./allSprites\"\n\nimport grassD from \"../images/terrain_grass/grass_mix_d.jpg\"\nimport cursorPng from \"../images/cursor.png\"\n\n\nexport let _listener = undefined;\n// //ex: [3,4]\nlet currentGrid = undefined;\nlet previousGrid = undefined;\nlet onMobile = false;\n\n//This is a generic grass square preloaded with source path\nexport const grassSquare = new Image()\ngrassSquare.src = buildAssetPath(grassD)\n\n// This is the cursor icon, preloaded with source path\nexport const cursor = new Image()\ncursor.src = buildAssetPath(cursorPng)\n\n\n\n// skeleton for onPlayerGrid\n//{isPresent: false, cORp: \"\", klass: \"\", level: null}\nconst onPlayerGrid = buildPlayerState()\n\n// This function builds an object containing all the coordinates of the play grid and \n// stores state of what the player has played\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null, name: \"\"}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                fountains: [\n                    {file: buildAssetPath(allSprites[\"fountain0\"]), name:\"Dual Fountain\", boost: 10, cORp: \"community\", klass:\"fountains\", index:0 }\n                ],\n                meditations: [\n                    {file: buildAssetPath(allSprites[\"meditate0\"]), name:\"Ruins Meditate\", boost: 10, cORp: \"community\", klass:\"meditations\", index:0 },\n                    {file: buildAssetPath(allSprites[\"meditate1\"]), name:\"Enlightened Meditate\", boost: 20, cORp: \"community\", klass:\"meditations\", index:1 },\n                    {file: buildAssetPath(allSprites[\"meditate2\"]), name:\"Activated Meditate\", boost: 30, cORp: \"community\", klass:\"meditations\", index:2 },\n\n                ],\n                pyramids: [\n                    {file: buildAssetPath(allSprites[\"pyramid0\"]), name:\"Red Pyramid\", boost: 10, cORp: \"community\", klass:\"pyramids\", index:0 },\n                    {file: buildAssetPath(allSprites[\"pyramid1\"]), name:\"Golden Pyramid\", boost: 20, cORp: \"community\", klass:\"pyramids\", index:1 },\n                    {file: buildAssetPath(allSprites[\"pyramid2\"]), name:\"Pyramid of Light\", boost: 30, cORp: \"community\", klass:\"pyramids\", index:2 }\n                \n                ],\n                ruins: [\n                    {file: buildAssetPath(allSprites[\"ruin0\"]), name:\"Yellow Slab\", boost: 10, cORp: \"community\", klass:\"ruins\", index:0 },\n                    {file: buildAssetPath(allSprites[\"ruin1\"]), name:\"Rainbow Rock\", boost: 20, cORp: \"community\", klass:\"ruins\", index:1 },\n                    {file: buildAssetPath(allSprites[\"ruin2\"]), name:\"Stone of Light\", boost: 30, cORp: \"community\", klass:\"ruins\", index:2 }\n\n                ],\n                trees:[\n                    {file: buildAssetPath(allSprites[\"tree0\"]), name:\"Small Tree\", boost: 10, cORp: \"community\", klass:\"trees\", index:0 },\n                    {file: buildAssetPath(allSprites[\"tree1\"]), name:\"Mighty Tree\", boost: 20, cORp: \"community\", klass:\"trees\", index:1 },\n                    {file: buildAssetPath(allSprites[\"tree2\"]), name:\"Tree of Light\", boost: 30, cORp: \"community\", klass:\"trees\", index:2 }\n                ]\n                },\n        production: {\n                business: [\n                    {file: buildAssetPath(allSprites[\"biz0\"]), name:\"Fruit Stand\", boost: 15, cORp: \"production\", klass:\"business\", index:0 },\n                    {file: buildAssetPath(allSprites[\"biz1\"]), name:\"Mall\", boost: 25, cORp: \"production\", klass:\"business\", index:1 },\n                    {file: buildAssetPath(allSprites[\"biz2\"]), name:\"Skyscraper\", boost: 90, cORp: \"production\", klass:\"business\", index:2 }\n                ],\n                  energy: [\n                    {file: buildAssetPath(allSprites[\"energy0\"]), name:\"Water Wheel\", boost: 15, cORp: \"production\", klass:\"energy\", index:0 },\n                    {file: buildAssetPath(allSprites[\"energy1\"]), name:\"Wind Mill\", boost: 25, cORp: \"production\", klass:\"energy\", index:1 },\n                    {file: buildAssetPath(allSprites[\"energy2\"]), name:\"Tesla Tower\", boost: 35, cORp: \"production\", klass:\"energy\", index:2 },\n                    {file: buildAssetPath(allSprites[\"energy3\"]), name:\"Nuclear\", boost: 45, cORp: \"production\", klass:\"energy\", index:3 },\n                    {file: buildAssetPath(allSprites[\"energy4\"]), name:\"Efficient Nuclear\", boost: 55, cORp: \"production\", klass:\"energy\", index:4 }\n                  ],\n                  flight:[\n                    {file: buildAssetPath(allSprites[\"flight0\"]), name:\"Hot Air Balloon\", boost: 15, cORp: \"production\", klass:\"flight\", index:0},\n                    {file: buildAssetPath(allSprites[\"flight1\"]), name:\"Helicopter\", boost: 25, cORp: \"production\", klass:\"flight\", index:1},\n                    {file: buildAssetPath(allSprites[\"flight2\"]), name:\"Airplane\", boost: 35, cORp: \"production\", klass:\"flight\", index:2},\n                    {file: buildAssetPath(allSprites[\"flight3\"]), name:\"Jet\", boost: 45, cORp: \"production\", klass:\"flight\", index:3},\n                  ],\n                houses: [\n                     {file: buildAssetPath(allSprites[\"house0\"]), name:\"Cold House\", boost: 15, cORp: \"production\", klass:\"houses\", index:0 },\n                     {file: buildAssetPath(allSprites[\"house1\"]), name:\"Farm House\", boost: 25, cORp: \"production\", klass:\"houses\", index:1 },\n                     {file: buildAssetPath(allSprites[\"house2\"]), name:\"Warm House\", boost: 35, cORp: \"production\", klass:\"houses\", index:2 }\n                    ],\n                weapons: [\n                     {file: buildAssetPath(allSprites[\"weapon0\"]), name:\"Defense Missle\", boost: 15, cORp: \"production\", klass:\"weapons\", index:0 },\n                     {file: buildAssetPath(allSprites[\"weapon1\"]), name:\"Attack Missle\", boost: 25, cORp: \"production\", klass:\"weapons\", index:1 },\n                     {file: buildAssetPath(allSprites[\"weapon2\"]), name:\"Mind Control\", boost: 35, cORp: \"production\", klass:\"weapons\", index:2 }\n                ]\n                  \n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const allDropDownCategories = Array.from(document.getElementsByClassName(\"cat\"));\n    const mainDropDown = Array.from(menu);\n    // let menu = document.getElementsByClassName(\"nocat\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    const playerAlert2 = document.getElementsByClassName(\"playerAlert2\")[0]\n    \n    // this is the \"anonymous function\" given to canvasHome as an event listener \n    // variable is made to allow it to be removed later\n     _listener = function(e) {\n        handleMouseDown(e, canvasHome, context, \n        menuContainer, menu, playerAlert, playerAlert2)\n    }\n    \n    canvasHome.addEventListener('mousedown', _listener)\n   \n    if ( /Android|webOS|iPhone|iPod|Blackberry|Windows Phone/i.test(navigator.userAgent)){\n       onMobile = true;\n    }\n    \n    \n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener(onMobile === false ? \"click\" : \"change\", (e) => {\n        // Remove error message if there is one\n        removePlayerAlert(playerAlert)\n        removePlayerAlert(playerAlert2)\n        \n        // show what sprite is currently there\n        if (previousGrid !== undefined){\n            if(previousGrid[0] === currentGrid[0] \n                && previousGrid[1] === currentGrid[1]\n                && isGridOccupied()){\n\n            const currBuild = onPlayerGrid[currentGrid[0]][currentGrid[1]]\n            playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n\n            } \n        }\n\n        if(playerAlert2.childElementCount === 0 && isGridOccupied()){\n                const currBuild = onPlayerGrid[currentGrid[0]][currentGrid[1]]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n        }\n        \n\n        // player clicks on an option that isn't a play sprite\n        if (allDropDownCategories.includes(e.target) ){\n            playerAlert.appendChild(generateAlert(\"That is not a building\"))\n            return false;\n        }\n\n        // console.log(\"resources\",playerPoints.resources)\n        \n        \n        // minimum purchase price required\n        if (playerPoints.resources < 20){\n            playerAlert.appendChild(generateAlert(\"Every building costs 20 resources ... !\"))\n            return false\n        } \n        \n        //choiceStr is \"production,houses,0\"\n        const choiceStr = menu.options[menu.selectedIndex].value\n\n        // prevent incorrect choice on dropdown from being playable as a sprite\n        if (!choiceStr.includes(\",\")){\n            playerAlert.appendChild(generateAlert(\"That is not a building\"))\n            return false;\n        } \n\n\n        // handle all the error cases with verifyBuildingMatch FN\n        const okToRender = verifyBuildingMatch(choiceStr, menu)\n        if (!okToRender){\n            // console.log(\"choiceStr\", choiceStr)\n            // console.log(\"can't draw\")\n            menu.disabled = false;\n            if(onMobile){\n                // playerAlert.appendChild(generateAlert(\"On Mobile\"))\n                menu.selectedIndex = null\n            }\n            return false;\n        } \n        \n        // chosenBuilding is syntax is....\n        // {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n        \n        // If we made it this far, we know the option selected IS a valid building\n        // Image file has been parsed\n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n\n            // Is the first building to be places\n            if (isInitialBuilding(chosenBuilding) === true){\n                parseImage(context, filePathBuild, currentGrid)\n                \n                const currBuild = occupyGrid(chosenBuilding)\n\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                \n                // console.log(\"PAY UP\")\n                adjustResources(-20)\n\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                drawPointsText(context, chosenBuilding.cORp)\n                adjustPoints(playerPoints[chosenBuilding.cORp], context, chosenBuilding.cORp)\n            } else {\n                playerAlert.appendChild(generateAlert(\"That building is not the first of it's kind!\"))\n            }\n        } else if (isGridOccupied()){\n            \n             // Already a building on grid pos\n             const x = currentGrid[0];\n             const y = currentGrid[1];\n\n             const objAtGridPos = onPlayerGrid[x][y];\n            \n             if (chosenBuilding.index === (objAtGridPos.level + 1)){\n                // player upgrades appropriately by 1 level\n                //re-render grass first && remove previous building\n                // console.log(\"DRAW!!!\")\n                drawOnGrid(grassSquare, context, x, y, true)\n                \n                parseImage(context, filePathBuild, currentGrid)\n\n                //prepare playerAlert2 iff the cursor is at a new spot\n                const currBuild = occupyGrid(chosenBuilding)\n            \n                if (playerAlert2.childElementCount === 0){\n                   playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                } else {\n\n                  removePlayerAlert(playerAlert2)\n                  playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                }\n\n                // console.log(\"PAY UP\")\n                adjustResources(-20)\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                drawPointsText(context, chosenBuilding.cORp)\n                //  menu.disabled = false\n            }\n\n\n        }\n\n\n        // reset default of dropdown\n            // console.log(\"GO FALSE!\")\n            menu.disabled = false\n            if(onMobile){\n                // playerAlert.appendChild(generateAlert(\"On Mobile\"))\n                menu.selectedIndex = null\n            }\n            // console.log(\"playerpoints\", playerPoints)\n\n\n\n\n    })\n\n    const verifyBuildingMatch = (choiceStr, menu) => {\n        const x = currentGrid[0]\n        const y = currentGrid[1]\n        menu.disabled = true\n\n        if(onPlayerGrid[x][y].isPresent === true){\n\n            let optionsArr = choiceStr.split(\",\")\n            let nextcORp = null\n            let nextKlass = null;\n            let nextIndex = null;\n            [nextcORp, nextKlass, nextIndex] = optionsArr;\n            nextIndex = parseInt(optionsArr[2])\n            \n            const objAtGridPos = onPlayerGrid[x][y]\n            const maxIndexOfType = civilization[nextcORp][nextKlass].length - 1\n\n            if(objAtGridPos.cORp !== nextcORp || objAtGridPos.klass !== nextKlass){\n                playerAlert.appendChild(generateAlert(\"Building types must match!\"))\n                return false;\n            } else if (nextKlass === objAtGridPos.klass && nextIndex === objAtGridPos.level\n                && maxIndexOfType != nextIndex){\n\n                playerAlert.appendChild(generateAlert(\"That building is already there. Try upgrading!\"));\n                return false\n             } else if (nextKlass === objAtGridPos.klass) {\n                // building klass is a match\n                \n                // player has maxed out upgrade\n                 if (maxIndexOfType === objAtGridPos.level){\n                     // players attempts to downgrade a max upgrade unit\n                     if (nextIndex < maxIndexOfType){\n                         playerAlert.appendChild(generateAlert(\"Go forth & build! The aliens are coming!\"));\n                         return false;\n                     } else {\n                         // players pick max upgrade again\n                         playerAlert.appendChild(generateAlert(\"Max upgrade achieved!\"));\n                         return false;\n                     }\n                 } else if (nextIndex < objAtGridPos.level){\n                     playerAlert.appendChild(generateAlert(\"Try upgrading, we must not regret our past decisions\"));\n                     return false;\n                 } else if((objAtGridPos.level + 1) !== nextIndex){\n                     playerAlert.appendChild(generateAlert(\"Upgrade one level at a time!\"));\n                     return false;\n                } \n            }\n\n        }\n        return true\n    }\n\n}\n\nexport const handleMouseDown = (e, canvasHome, context, menuContainer, menu, playerAlert, playerAlert2) => {\n    currentGrid = getCoords(e, canvasHome);\n\n        // Menu is hidden . Therefore show the dropdown menu\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            const x = currentGrid[0];\n            const y = currentGrid[1];\n\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            //expand the dropdown\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n            if(!isGridOccupied()){\n                removePlayerAlert(playerAlert)\n                previousGrid = currentGrid\n                // console.log(\"previous grid\", previousGrid)\n                //draw crosshair\n                drawOnGrid(cursor, context, x, y)\n            } else {\n                removePlayerAlert(playerAlert)\n                const currBuild = onPlayerGrid[x][y]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n            }\n\n        } else if(currentGrid && !Array.from(menuContainer.classList).includes(\"hidden\")){\n            // Menu is not hidden, Game is Playable\n            // Draw cursor options below\n            if(!isGridOccupied()){\n                removePlayerAlert(playerAlert)\n                removePlayerAlert(playerAlert2)\n                const x = currentGrid[0];\n                const y = currentGrid[1];\n\n                if(previousGrid !== undefined){\n                    const prevX = previousGrid[0];\n                    const prevY = previousGrid[1];\n                    \n                    //remove crosshair cursor iff the previous grid wasn't built on.\n                    // if(!isGridOccupied(prevX, prevY)){\n                    if (onPlayerGrid[prevX][prevY].isPresent === false){\n                        drawOnGrid(grassSquare, context, prevX, prevY, true)\n                    }\n                }\n\n                //remove crosshair cursor iff the previous grid wasn't built on.\n                // draw new crosshair\n                previousGrid = currentGrid\n                drawOnGrid(cursor, context, x, y)\n            } else {\n                removePlayerAlert(playerAlert)\n                removePlayerAlert(playerAlert2)\n                const x = currentGrid[0];\n                const y = currentGrid[1];\n\n                if(previousGrid !== undefined){\n                    const prevX = previousGrid[0];\n                    const prevY = previousGrid[1];\n                \n                    //remove crosshair cursor iff the previous grid wasn't built on.\n                    // if(!isGridOccupied(prevX, prevY)){\n                    if(onPlayerGrid[prevX][prevY].isPresent === false){\n                        drawOnGrid(grassSquare, context, prevX, prevY, true)\n                    }\n                }\n                const currBuild = onPlayerGrid[x][y]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n            }\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            removePlayerAlert(playerAlert)\n            removePlayerAlert(playerAlert2)\n\n            if(previousGrid !== undefined){\n                const prevX = previousGrid[0];\n                const prevY = previousGrid[1];\n            \n                //remove crosshair cursor\n                if(onPlayerGrid[prevX][prevY].isPresent === false){\n                    drawOnGrid(grassSquare, context, prevX, prevY, true)\n                }\n            }\n            \n            previousGrid = undefined;\n\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n\n        } \n        // console.log(`currentGrid: ${currentGrid}`)\n        // console.log(`previousGrid: ${previousGrid}`)\n}\n\nconst getCoords = (e, canvasHome) => {\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        // console.log(\"-------\")\n        // console.log(\"px\", px)\n        // console.log(\"py\", py)\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        // console.log(canvasRect)\n\n        // console.log(\"-------\")\n        // console.log(\"cx\", cx)\n        // console.log(\"cy\",cy)\n        // const col = Math.floor((cx - 22) / 86) ;\n        // const row = Math.floor((cy - 131) / 86) ;\n\n        const col = Math.floor((cx - 49) / 86) ;\n        const row = Math.floor((cy - 138) / 86) ;\n\n        // current location console.log\n        // console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n}\n\n// x is a row and goes top -> down\n    const gridDecoderX = {\n        0: \"A\",\n        1: \"B\",\n        2: \"C\",\n        3: \"D\"\n    }\n\n    const gridDecoderY = {\n        0: \"1\",\n        1: \"2\",\n        2: \"3\",\n        3: \"4\",\n        4: \"5\",\n        5: \"6\",\n        6: \"7\",\n    }\n\nconst generateAlert = (msg, isErrorMsg = true) => {\n        // Add message to the DOM -> \"That building is already there. Try upgrading!\"\n        const ele = document.createElement('span');\n        \n        if(isErrorMsg){\n            const text = document.createTextNode(msg); \n            ele.appendChild(text);\n\n            ele.setAttribute('class', 'playerAlert');\n            return ele\n        } else {\n            const $p = document.createElement('p');\n            const parts = msg.split(\";\");\n\n            const text = document.createTextNode(parts[0]);\n            const posText = document.createTextNode(parts[1]);\n            ele.appendChild(text)\n            $p.appendChild(posText)\n            ele.setAttribute('class', 'playerAlert2');\n            $p.setAttribute('class', 'red');\n\n            ele.appendChild($p)\n            return ele\n        }\n\n        \n}\n\nconst generateCurrSelText = (justBuilt) => {\n        const x = gridDecoderX[currentGrid[0]]\n        const y = gridDecoderY[currentGrid[1]]\n\n        let str = `Current Selection: ${justBuilt.name} ; @ [${x},${y}]`\n\n        return str\n}\n\nconst removePlayerAlert = (alertType) => {\n    const thisMany = alertType.childElementCount\n\n    if (thisMany > 0){\n        alertType.removeChild(alertType.childNodes[0]); \n    }\n         \n}\n\n// selected argument is \"production,houses,0\"\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        // console.log(\"--\")\n        // console.log(optionsArr);\n        // console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = buildAssetPath(grassD)\n\n        img1.onload = () => {\n\n            drawRow(context, img1, 44, 131)\n            drawRow(context, img1, 44, 217)\n            drawRow(context, img1, 44, 303)\n            drawRow(context, img1, 44, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            rowX += 86\n        }\n    }\n}\n\nexport const drawLetterNum = (context) => {\n    const alpha = [\"A\", \"B\", \"C\", \"D\"]\n    const numeric = [1, 2, 3, 4, 5, 6, 7]\n    // coordinates for Letters on left side\n    const startAlphaX = 32;\n    let startAlphaY = 177;\n    // coordinates for numbers on bottom of board\n    let startNumX = 83;\n    const startNumY = 489;\n\n    context.font = 'bold 13px Sans-Serif';\n    context.fillStyle = \"#FFF\"\n    context.strokeStyle = \"#FFF\";\n    for(let i = 0; i < alpha.length; i++){\n        context.fillText(alpha[i], startAlphaX, startAlphaY);\n        startAlphaY += 86;\n\n    }\n\n    for (let i = 0; i < numeric.length; i++) {\n        context.fillText(numeric[i], startNumX, startNumY);\n        startNumX += 86;\n\n        \n    }\n\n}\n\nconst isGridOccupied = (x = currentGrid[0], y = currentGrid[1]) => {\n    return onPlayerGrid[x][y].isPresent\n}\n\n//update gameState with chosen Building\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n    onPlayerGrid[x][y].name = chosenBuilding.name\n\n\n    return onPlayerGrid[x][y]\n}\n\n\n\nconst isInitialBuilding = (chosenBuilding) => {\n    if (chosenBuilding.index === 0) return true;\n    return false\n}\n\n\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0];\n    const y = currentGrid[1];\n\n    // remove crosshair before placing new sprite\n    drawOnGrid(grassSquare, context, x, y, true);\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\n// FN will draw an image at the appropriate spot on the grid\nconst drawOnGrid = (image, context, gridX, gridY, clearRectBoolean) => {\n    // console.log(\"draw on grid\", gridX, gridY)\n        // const offsetX = 22;\n        const offsetY = 131;\n        const offsetX = 44;\n\n        // const offsetY = 136;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n    \n            if (clearRectBoolean){\n                context.clearRect(offsetX, offsetY, 86, 86)\n                context.drawImage(image, offsetX, offsetY, 86, 86)\n            } else {\n                context.drawImage(image, offsetX, offsetY, 86, 86 )\n            }\n        } else if (gridX === 0 && gridY > 0){\n\n            if (clearRectBoolean){\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n            }\n        } else {\n\n            if (clearRectBoolean){\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            }\n        }\n\n    \n}\n\nexport const animateSquares = (image, context) => {\n    context.clearRect(44, 131, 602, 344)\n    for(let i = 0; i < 4; i++){\n        for(let j = 0; j < 7; j++){\n            drawOnGrid(grassSquare, context, i, j)\n            drawOnGrid(image, context, i, j)\n            \n        }\n    }\n\n}\n\nexport const drawLightning = (image, context) => {\n    context.drawImage(image, 0, 0, context.canvas.width, context.canvas.height)\n}\n\n\n\n\n\n\n\n\n","export default \"images/grass_mix_d.jpg\";","export default \"images/cursor.png\";","class Leviathan {\n    constructor(context, filePath, cx, cy, scaleW, scaleH){\n        this.context = context;\n        this.cx = cx;\n        this.cy = cy;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n        this.sprite = undefined;\n        this.index = 0;\n        this.spinCount = 0;\n        this.cWidth = this.context.canvas.width;\n        this.cHeight = this.context.canvas.height;\n        \n        this.filePath = filePath;\n        this.okToSpin = true;\n\n        this.movements = [\n            {sx: 0, sy: 0, px: 96, py: 96},\n            {sx: 0, sy: 96, px: 96, py: 96},\n            {sx: 0, sy: 192, px: 96, py: 96},\n            {sx: 0, sy: 288, px: 96, py: 96}\n        ]\n\n        this.properties = {width: scaleW, height: scaleH,\n                           position: {x: this.cx, y: this.cy}}\n\n        this.loadSrc();\n        this.drawSpin = this.drawSpin.bind(this);\n        this.drawFacing = this.drawFacing.bind(this);\n    }\n\n    loadSrc(){\n        this.sprite = new Image();\n        this.sprite.src = this.filePath;\n    }\n\n    drawSpin(id, okToClearCanvas){\n\n        if(this.okToSpin){\n            \n            this.context.clearRect(this.cx, this.cy, this.scaleW, this.scaleH);\n            this.context.drawImage(this.sprite, \n                this.movements[this.index].sx, this.movements[this.index].sy,\n                this.movements[this.index].px, this.movements[this.index].py,\n                this.properties.position.x, this.properties.position.y,\n                this.properties.width, this.properties.height\n                )\n            this.index++;\n\n            if(this.spinCount === 8) {\n                this.okToSpin = false;\n                clearInterval(id)\n                return true\n                // new Promise solution\n\n                // return this.drawFacing().then((res) =>{\n                //     console.log(\"SUCCESSFUL PROMISE\", res)\n                //     return true\n                // });\n                \n\n\n            }\n            if(this.index >= this.movements.length) {\n                this.index = 0;\n                this.spinCount++;\n            }\n        }\n    }\n\n\n\n    drawFacing(id){\n        this.context.drawImage(this.sprite, \n                this.movements[0].sx, this.movements[0].sy,\n                this.movements[0].px, this.movements[0].py,\n                this.properties.position.x, this.properties.position.y,\n                this.properties.width, this.properties.height\n                )\n\n            //with new Promise Solution\n        // const promise = new Promise(function(resolve, reject) {\n        //     setTimeout(() => {\n        //     resolve(true);\n        //     }, 1000);\n        // });\n        // return promise;  \n        \n        // clearInterval(id)\n\n    }\n\n}\n\nexport default Leviathan;","import {animateSquares,\n        canvasEvents,\n        drawGrass,\n        drawLetterNum,\n        summonAliens,\n        drawLightning,\n        _listener\n        } from \"./scripts/canvas_events.js\";\n\nimport progressBar from \"./scripts/progressBar.js\";\nimport {buildAssetPath, animateLeviathans} from \"./scripts/util\";\nimport \"./styles/index.scss\";\n\nimport {\n    drawResourcesText,\n    drawPointsText,\n    drawAlienCountdown,\n    clearAlienText,\n    adjustTimer,\n    getTime,\n    setTimer,\n    drawMidline,\n    spawnResources,\n    getPoints} from \"./scripts/pointsSystem\";\n\nimport Leviathan from \"./scripts/leviathan\";\nimport leviathanSheet from \"./images/aliens/leviathan_strip.png\";\nimport fullLightningPng from \"./images/background/full_lightning.png\"\nimport chickenPng from \"./images/animals/chicken.png\"\n\nconst leviathanSprite = buildAssetPath(leviathanSheet);\nconst fullLightning = new Image();\nconst chicken = new Image();\nfullLightning.src = buildAssetPath(fullLightningPng)\nchicken.src = buildAssetPath(chickenPng)\n\n\n\n\n// This is the cursor icon, preloaded with source path\n// const cursor = new Image()\n// cursor.src = buildAssetPath(cursorPng)\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n    const menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    const youWin = document.getElementsByClassName(\"youwin\")[0]\n    const youLose = document.getElementsByClassName(\"youlose\")[0]\n\n\n    \n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n\n\n    const leviathanArr = [];\n    let leviCx = 100;\n    let leviCy = 0;\n    let leviCount = 0;\n\n    for(let i = 0; i < 9; i++){\n        const levi = new Leviathan(context, leviathanSprite, leviCx, leviCy, 131, 131);\n        leviathanArr.push(levi);\n        leviCx += 167;\n    \n        leviCount++;\n        if(leviCx > 434) leviCx = 100;\n        if(leviCount % 3 === 0) leviCy += 167;\n\n    }\n    \n    //draw Production progress bar\n    // y is 375\n    // old\n    // const blankLeft = new progressBar(context, -34, 125, \"blank\", \"v\")\n    // pre resize\n    // const blankLeft = new progressBar(context, -34, 115, \"blank\", \"v\");\n    // const blankRight = new progressBar(context, 590, 115, \"blank\", \"v\");\n    \n    \n    const blankLeft = new progressBar(context, -31, 115, \"blank\", \"v\");\n    const blankRight = new progressBar(context, 612, 115, \"blank\", \"v\");\n    // debugger\n    drawMidline(context)\n    drawLetterNum(context)\n    drawPointsText(context, \"community\")\n    drawPointsText(context, \"production\")\n\n    // draw the players $$ on bottom middle of canvas\n    const drawResourcesTextId = setInterval(() => {\n        drawResourcesText(context);\n    }, 600)\n\n    // spawn random resources\n    const makeResourcesId = setInterval(() => {\n        spawnResources();\n        // drawResourcesText(context);\n    }, 600)\n    \n    //stick this into a \"Start game button\"\n    const makeCountdownId = setInterval(() => {\n        adjustTimer(-1);\n        drawAlienCountdown(context);\n        if(getTime() === 0){\n            // context.clearRect(44,389,86,86)\n            // animateSquares(cursor, context)\n            clearAlienText(context)\n            clearInterval(makeCountdownId)\n            clearInterval(drawResourcesTextId)\n\n            // remove mousedown event listener for canvas.\n            canvasHome.removeEventListener(\"mousedown\", _listener)\n\n\n            // hide the buildings menu\n            if(!Array.from(menuContainer.classList).includes(\"hidden\")){\n                menuContainer.classList.toggle(\"hidden\")\n\n            }\n\n            summonAliens(context)\n\n            setTimeout(() =>{\n                // player loses the game\n                if(getPoints(\"community\") <= getPoints()){\n                    animateSquares(chicken,context)\n                    setTimeout(() => {\n                        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n                        animateLeviathans(context, ...leviathanArr)\n                        setTimeout( () =>{\n                             drawLightning(fullLightning, context)\n                             setTimeout(()=> {\n                                 youLose.classList.toggle(\"hidden\")\n                                //  setTimeout(() => window.location.reload(), 10000)\n                                }, 1500)\n                             \n                            }, 3000)\n                    },2000)\n                } else{\n                    //player wins the game\n                    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n                    animateLeviathans(context, ...leviathanArr)\n                    setTimeout( () =>{\n                        youWin.classList.toggle(\"hidden\")\n                        // setTimeout(() => window.location.reload(), 10000)\n                            }, 4000)\n                }\n            },2500)\n        }\n    },1000)\n\n})\n\n\n\n","export default \"images/leviathan_strip.png\";","export default \"images/full_lightning.png\";","export default \"images/chicken.png\";"],"sourceRoot":""}