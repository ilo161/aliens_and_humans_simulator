{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/util.js","webpack:///./src/scripts/alien_ship.js","webpack:///./src/scripts/mothership.js","webpack:///./src/images/aliens/ships/08-Netuno.png","webpack:///./src/images/aliens/ships/06-Saturno.png","webpack:///./src/images/aliens/ships/09-Pluto.png","webpack:///./src/scripts/canvas_events.js","webpack:///./src/images/terrain_grass/grass_mix_d.jpg","webpack:///./src/images/community/pyramids/00red_pyramid.png","webpack:///./src/images/community/pyramids/01golden_pyramid.png","webpack:///./src/images/community/pyramids/02light_pyramid.png","webpack:///./src/scripts/progressBar.js","webpack:///./src/images/h_progress_bars/H_BarBackground.png","webpack:///./src/images/v_progress_bars/V_BarBackground.png","webpack:///./src/images/h_progress_bars/H_BlueBar.png","webpack:///./src/images/h_progress_bars/H_GreenBar.png","webpack:///./src/images/h_progress_bars/H_RedBar.png","webpack:///./src/images/h_progress_bars/H_YellowBar.png","webpack:///./src/images/v_progress_bars/V_BlueBar10.png","webpack:///./src/images/v_progress_bars/V_BlueBar20.png","webpack:///./src/images/v_progress_bars/V_BlueBar30.png","webpack:///./src/images/v_progress_bars/V_BlueBar40.png","webpack:///./src/images/v_progress_bars/V_BlueBar50.png","webpack:///./src/images/v_progress_bars/V_BlueBar60.png","webpack:///./src/images/v_progress_bars/V_BlueBar70.png","webpack:///./src/images/v_progress_bars/V_BlueBar80.png","webpack:///./src/images/v_progress_bars/V_BlueBar90.png","webpack:///./src/images/v_progress_bars/V_BlueBar100.png","webpack:///./src/images/v_progress_bars/V_GreenBar10.png","webpack:///./src/images/v_progress_bars/V_GreenBar20.png","webpack:///./src/images/v_progress_bars/V_GreenBar30.png","webpack:///./src/images/v_progress_bars/V_GreenBar40.png","webpack:///./src/images/v_progress_bars/V_GreenBar50.png","webpack:///./src/images/v_progress_bars/V_GreenBar60.png","webpack:///./src/images/v_progress_bars/V_GreenBar70.png","webpack:///./src/images/v_progress_bars/V_GreenBar80.png","webpack:///./src/images/v_progress_bars/V_GreenBar90.png","webpack:///./src/images/v_progress_bars/V_GreenBar100.png","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildAssetPath","imgSrc","AlienShip","context","filePath","xStart","yStart","scaleW","scaleH","this","sprite","undefined","movements","moveIdx","loadAlienShip","lToRAnimate","drawShip","moveSpanX","push","x","y","alienSrc","Image","src","drawImage","length","MotherShip","army","shipNum","shipFiles","yPos","alienShip","console","log","currentGrid","grassSquare","onPlayerGrid","buildPlayerGrid","j","isPresent","cORp","klass","level","buildPlayerState","playerPoints","community","production","resources","civilization","parks","pyramids","file","boost","index","ruins","meditationCircles","trees","farms","buildings","houses","energy","wind","solar","hydro","civilizationMenuSelect","selected","optionsArr","split","isGridOccupied","occupyGrid","chosenBuilding","isInitialBuilding","parseImage","image","onload","drawOnGrid","gridX","gridY","clearRectBoolean","clearRect","progressBar","startX","startY","color","orientation","points","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","that","e","colorBarSrc","selectColor","ori","hColors","vColors","10","20","30","40","50","60","70","80","90","100","document","addEventListener","canvasHome","getElementById","getContext","menuContainer","getElementsByClassName","menu","playerAlert","getCoords","Array","from","classList","includes","toggle","len","options","setAttribute","choiceStr","selectedIndex","filePathBuild","removePlayerAlert","objAtGridPos","maxIndexOfType","appendChild","generateErrorAlert","childElementCount","removeChild","childNodes","errorMsg","ele","createElement","text","createTextNode","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","canvasEvents","img1","drawRow","rowX","rowY","drawGrass","motherShip","makeShips","intId1","setInterval","intId2","intId3","setTimeout","clearInterval","summonAliens"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const buildAssetPath = (imgSrc) => {\n    return `./dist/${imgSrc}`;\n}","import {buildAssetPath} from \"./util.js\";\n\nclass AlienShip {\n    constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        this.context = context;\n        this.xStart = xStart;\n        this.yStart = yStart;\n        this.sprite = undefined;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n\n        this.filePath = filePath\n\n        this.movements = [];\n        this.moveIdx = 0;\n\n        this.loadAlienShip = this.loadAlienShip.bind(this);\n        this.lToRAnimate = this.lToRAnimate.bind(this);\n        this.drawShip = this.drawShip.bind(this);\n        this.loadAlienShip()\n        this.moveSpanX()\n    }\n\n    // generate the movements for an alien Ship\n     moveSpanX(){\n            for(let i = 1; i < 23 ; i++){\n                this.movements.push({x: (this.xStart * (i * 40)), y: (this.yStart)})\n            }\n        }\n\n    loadAlienShip(){\n    const alienSrc = this.filePath;\n\n    this.sprite = new Image();\n    this.sprite.src = alienSrc;        \n\n    }\n\n    drawShip(){\n       \n        //works with set pixel\n        // this.context.drawImage(this.sprite, 0, 0, 100, 100);\n\n        // using animation\n        // this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, 100, 100);\n\n        //works with fraction\n        // this.context.drawImage(this.sprite, 0, 0, (this.sprite.width / this.scaleW), (this.sprite.height / this.scaleH));\n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n\n    }\n\n    lToRAnimate(){\n        let x = 0\n        // console.log(\"ship moving\")\n\n            // console.log(this.movements[this.moveIdx])\n            // this.context.clearRect(0,0,646,131)\n            const topLeftX = this.movements[this.moveIdx].x\n            const topLeftY = this.movements[this.moveIdx].y\n\n            // console.log(topLeftX)\n            // console.log(topLeftY)\n\n            //this function removes previous drawing of alien ship.\n            if (this.moveIdx > 0){\n                // this.context.clearRect((this.scaleW * this.moveIdx ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n                //old but works\n                // this.context.clearRect((topLeftX ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n            }\n\n            // this.context.clearRect(topLeftX, topLeftY,(this.scaleW * - 1), (this.scaleW * -1 ))\n\n            // this.context.clearRect(300 , 300,(this.scaleW * (1)), (this.scaleW * -1 ))\n           this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n            this.moveIdx++;\n            if(this.moveIdx >= this.movements.length) this.moveIdx = 0;\n            // if(x === 15){\n            //     window.clearInterval()\n            // }\n        // }\n    }\n}\n\nexport default AlienShip;","import {buildAssetPath} from \"./util.js\"\nimport AlienShip from \"./alien_ship\"\n\nimport neptune from \"../images/aliens/ships/08-Netuno.png\";\nimport saturn from \"../images/aliens/ships/06-Saturno.png\";\nimport pluto from \"../images/aliens/ships/09-Pluto.png\";\n\nclass MotherShip {\n    constructor(context){\n        this.context = context;\n        this.army = []\n\n    }\n\n    makeShips(){\n        let shipNum = this.army.length;\n\n        const shipFiles = [\n            buildAssetPath(neptune),\n            buildAssetPath(saturn),\n            buildAssetPath(pluto)\n        ]\n        // constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        while(this.army.length < 3){\n            shipNum = this.army.length;\n            const yPos = undefined;\n\n            if (shipNum === 0){\n                yPos = shipNum;\n            } else {\n                yPos = shipNum * 40;\n            }\n\n            const alienSrc = shipFiles[shipNum]\n            const alienShip = new AlienShip(this.context, alienSrc, 1, yPos, 40, 40)\n            this.army.push(alienShip)\n\n        }\n    }\n\n}\n\nexport default MotherShip","export default \"images/08-Netuno.png\";","export default \"images/06-Saturno.png\";","export default \"images/09-Pluto.png\";","console.log(\"hello from canvas events\")\nimport AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\nimport {buildAssetPath} from \"./util\"\n\n//works\nimport pyramid0 from \"../images/community/pyramids/00red_pyramid.png\"\nimport pyramid1 from \"../images/community/pyramids/01golden_pyramid.png\"\nimport pyramid2 from \"../images/community/pyramids/02light_pyramid.png\"\n\n// import pyramid0 from \"../images/community/pyramids/01pyramid.svg\"\n\nimport grassD from \"../images/terrain_grass/grass_mix_d.jpg\"\n\n// //ex: [3,4]\nlet currentGrid = undefined;\n\n\n// function buildAssetPath(imgSrc) {\n//     return `./dist/${imgSrc}`;\n// }\n\n//This is a generic grass square preloaded with source path\nconst grassSquare = new Image()\ngrassSquare.src = buildAssetPath(grassD)\n\n\n\n// skeleton for onPlayerGrid\n//{isPresent: false, cORp: \"\", klass: \"\", level: null}\nconst onPlayerGrid = buildPlayerState()\n\n// contains money, and current build points for player throughout the game\nconst playerPoints = {\n    community: 0,\n    production: 0,\n    resources: 0\n}\n// console.log(onPlayerGrid)\n\n// This function builds an object containing all the coordinates of the play grid and \n// stores state of what the player has played\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                parks: [],\n                pyramids: [\n                    {file: buildAssetPath(pyramid0), name:\"redPyramid\", boost: 10, cORp: \"community\", klass:\"pyramids\", index:0 },\n                    {file: buildAssetPath(pyramid1), name:\"goldenPyramid\", boost: 20, cORp: \"community\", klass:\"pyramids\", index:1 },\n                    {file: buildAssetPath(pyramid2), name:\"lightPyramid\", boost: 30, cORp: \"community\", klass:\"pyramids\", index:2 }\n                \n                ],\n                ruins: [{}],\n                meditationCircles: [],\n                trees:[]\n                },\n        production: {\n                farms: [],\n                buildings: [],\n                houses: [],\n                energy: {\n                        wind:[],\n                        solar:[],\n                        hydro:[]\n                }\n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    \n    //When user clicks on grid it sets currentGrid. If they click outside, it returns\n    // undefined\n    canvasHome.addEventListener('mousedown', (e) => {\n        currentGrid = getCoords(e);\n\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n        } \n        console.log(`currentGrid: ${currentGrid}`)\n    \n    })\n\n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener('change', () => {\n        const choiceStr = menu.options[menu.selectedIndex].value\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n\n        // Remove error message if there is one\n        removePlayerAlert()\n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n            \n            if (isInitialBuilding(chosenBuilding) === true){\n                parseImage(context, filePathBuild, currentGrid)\n                occupyGrid(chosenBuilding)\n\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n            } else {\n                playerAlert.appendChild(generateErrorAlert(\"That building is not the first of it's kind!\"))\n            }\n        } else if (isGridOccupied()){\n             // Already a building on grid pos\n             const x = currentGrid[0]\n             const y = currentGrid[1]\n             const objAtGridPos = onPlayerGrid[x][y]\n             const maxIndexOfType = civilization[chosenBuilding.cORp][chosenBuilding.klass].length - 1\n\n             // Player tries to add the same building to the occupied grid\n             if (chosenBuilding.klass === objAtGridPos.klass && chosenBuilding.index === objAtGridPos.level\n                && maxIndexOfType != chosenBuilding.index){\n\n                playerAlert.appendChild(generateErrorAlert(\"That building is already there. Try upgrading!\"));\n\n             } else if (chosenBuilding.klass !== objAtGridPos.klass){\n                // Player tries to upgrade to a building of a different klass\n\n                 playerAlert.appendChild(generateErrorAlert(\"Try upgrading that structure to a higher level!\"));\n             } else if (chosenBuilding.klass === objAtGridPos.klass) {\n                // building klass is a match\n                \n                // player has maxed out upgrade\n                 if (maxIndexOfType === objAtGridPos.level){\n                     playerAlert.appendChild(generateErrorAlert(\"Max upgrade achieved!\"));\n                 } else if (chosenBuilding.index === (objAtGridPos.level + 1)){\n                     // player upgrades appropriately by 1 level\n                     //re-render grass first && remove previous building\n                     drawOnGrid(grassSquare, context, x, y, true)\n                     \n                     parseImage(context, filePathBuild, currentGrid)\n                     occupyGrid(chosenBuilding)\n                     playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                 } else if (chosenBuilding.index < objAtGridPos.level){\n                     playerAlert.appendChild(generateErrorAlert(\"Try upgrading, we must not regret our past decisions\"));\n                 }\n                 \n\n             }\n            \n\n         }\n\n\n        // reset default of dropdown\n            menu.selectedIndex = null\n            console.log(playerPoints)\n\n\n\n\n    })\n\n    //Alert System\n    const removePlayerAlert = () => {\n         if (playerAlert.childElementCount > 0){\n            playerAlert.removeChild(playerAlert.childNodes[0]); \n        }\n    }\n\n    const generateErrorAlert = (errorMsg) => {\n        // Add Error message to the DOM -> \"That building is already there. Try upgrading!\"\n        const ele = document.createElement('p');\n\n        const text = document.createTextNode(errorMsg); \n        ele.appendChild(text)\n        ele.setAttribute('class', 'playerAlert');\n        return ele\n    }\n\n    // menuContainer.classList.toggle(\"shrink\")\n    // \n    // menuContainer.classList.toggle(\"hidden\")\n\n\n    \n    // console.log(canvasRect)\n   \n\n    // function onDown(e){\n    //         cx = e.pageX;\n    //         cy = e.pageY;\n    //     // console.log(`X: ${cx}, Y: ${cy}`)\n    // }\n    \n    const getCoords = (e) => {\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        console.log(canvasRect)\n\n        console.log(\"-------\")\n        console.log(cx)\n        console.log(cy)\n        const col = Math.floor((cx - 22) / 86) ;\n        const row = Math.floor((cy - 131) / 86) ;\n\n        // current location console.log\n        console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n    }\n\n    function seeGridOptions(row, col){\n        console.log(gameOptions[row][col])\n    }\n\n    function gridClick(row, col){\n\n\n    }\n\n}\n\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        console.log(\"--\")\n        console.log(optionsArr);\n        console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = buildAssetPath(grassD)\n\n        img1.onload = () => {\n\n            drawRow(context, img1, 22, 131)\n            drawRow(context, img1, 22, 217)\n            drawRow(context, img1, 22, 303)\n            drawRow(context, img1, 22, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n\n            // context.drawImage(image, rowX, rowY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            // \n            rowX += 86\n        }\n    }\n}\n\nconst isGridOccupied = () => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    return onPlayerGrid[x][y].isPresent\n}\n\n//update gameState with chosen Building\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n\n    return onPlayerGrid[x][y]\n}\n\nconst isInitialBuilding = (chosenBuilding) => {\n    if (chosenBuilding.index === 0) return true;\n    return false\n}\n\n// to be MOVED LATER *!*!*!*!*!*!!*!*!*!*!*!*!*!*\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\nconst drawOnGrid = (image, context, gridX, gridY, clearRectBoolean) => {\n    console.log(\"draw on grid\")\n        const offsetX = 22;\n        const offsetY = 131;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n            // context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH )\n            //works and original func\n            // context.drawImage(image, offsetX, offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                context.clearRect(offsetX, offsetY, 86, 86)\n                context.drawImage(image, offsetX, offsetY, 86, 86)\n            } else {\n                context.drawImage(image, offsetX, offsetY, 86, 86 )\n            }\n        } else if (gridX === 0 && gridY > 0){\n            //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n            }\n        } else {\n            // \n             //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                //original\n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            }\n        }\n\n    \n    }\n\n    // export const animateSquares = (image, cb) => {\n    //     context.clearRect(0, 0, 646, 505)\n    //     for(let i = 0; i < 4; i++){\n    //         for(let j = 0; j < 7; j++){\n    //             drawOnGrid(image, i, j)\n                \n    //         }\n    //     }\n\n    // }\n\n    // export const loadAlienShip = () => {\n    //     // const alienSrc = \"/src/images/aliens/ships/08-Netuno.png\";\n    //     // const alienShip = new Image();\n    //     // alienShip.src = alienSrc;\n\n    //     // alienShip.onload( () => {\n    //     //     return true\n    //     // })\n\n    // }\n\n\n\n// export default canvasEvents;\n\n\n\n","export default \"images/grass_mix_d.jpg\";","export default \"images/00red_pyramid.png\";","export default \"images/01golden_pyramid.png\";","export default \"images/02light_pyramid.png\";","import hBlank from \"../images/h_progress_bars/H_BarBackground.png\"\nimport hBlue from \"../images/h_progress_bars/H_BlueBar.png\"\nimport hGreen from \"../images/h_progress_bars/H_GreenBar.png\"\nimport hRed from \"../images/h_progress_bars/H_RedBar.png\"\nimport hYellow from \"../images/h_progress_bars/H_YellowBar.png\"\n\n\nimport vBlank from \"../images/v_progress_bars/V_BarBackground.png\"\nimport vBlue10 from \"../images/v_progress_bars/V_BlueBar10.png\"\nimport vBlue20 from \"../images/v_progress_bars/V_BlueBar20.png\"\nimport vBlue30 from \"../images/v_progress_bars/V_BlueBar30.png\"\nimport vBlue40 from \"../images/v_progress_bars/V_BlueBar40.png\"\nimport vBlue50 from \"../images/v_progress_bars/V_BlueBar50.png\"\nimport vBlue60 from \"../images/v_progress_bars/V_BlueBar60.png\"\nimport vBlue70 from \"../images/v_progress_bars/V_BlueBar70.png\"\nimport vBlue80 from \"../images/v_progress_bars/V_BlueBar80.png\"\nimport vBlue90 from \"../images/v_progress_bars/V_BlueBar90.png\"\nimport vBlue100 from \"../images/v_progress_bars/V_BlueBar100.png\"\n\nimport vGreen10 from \"../images/v_progress_bars/V_GreenBar10.png\"\nimport vGreen20 from \"../images/v_progress_bars/V_GreenBar20.png\"\nimport vGreen30 from \"../images/v_progress_bars/V_GreenBar30.png\"\nimport vGreen40 from \"../images/v_progress_bars/V_GreenBar40.png\"\nimport vGreen50 from \"../images/v_progress_bars/V_GreenBar50.png\"\nimport vGreen60 from \"../images/v_progress_bars/V_GreenBar60.png\"\nimport vGreen70 from \"../images/v_progress_bars/V_GreenBar70.png\"\nimport vGreen80 from \"../images/v_progress_bars/V_GreenBar80.png\"\nimport vGreen90 from \"../images/v_progress_bars/V_GreenBar90.png\"\nimport vGreen100 from \"../images/v_progress_bars/V_GreenBar100.png\"\n\n\nimport vGreen from \"../images/v_progress_bars/V_GreenBar100.png\"\n// import vRed from \"../images/v_progress_bars/V_RedBar.png\"\n// import vYellow from \"../images/v_progress_bars/V_YellowBar.png\"\nimport {buildAssetPath} from \"./util.js\"\n\n\nclass progressBar {\n    constructor(context, startX, startY, color, orientation, value){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.points = 30;\n        this.color = color;\n        this.value = value;\n\n        this.blankSprite = undefined;\n        this.colorSprite = undefined;\n\n        this.loadSrc(orientation)\n        \n        }\n\n    loadSrc(orientation){\n        if(this.color === \"blank\"){\n            const backgroundSrc = this.orientationAndCreate(orientation);\n            this.blankSprite = new Image();\n            this.blankSprite.src = backgroundSrc; \n            \n            const that = this;\n            this.blankSprite.onload = (e) => {\n            // debugger\n            // that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 364);\n            that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 378);\n            }\n        } else {\n            const colorBarSrc = this.selectColor(this.color, orientation, this.value)\n            this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n            // debugger\n            const that = this;\n            this.colorSprite.onload = (e) => {\n\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 278);\n                // 30 is good start\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 30);\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n        \n        \n        \n\n        \n       \n\n\n    }\n\n\n\n    // loadSrc(orientation){\n        \n    //     const backgroundSrc = this.orientationAndCreate(orientation);\n    //     const colorBarSrc = this.selectColor(this.color, orientation)\n        \n    //     this.blankSprite = new Image();\n    //     this.colorSprite = new Image();\n\n    //     this.blankSprite.src = backgroundSrc; \n    //     this.colorSprite.src = colorBarSrc; \n    //     const that = this;\n    //     this.blankSprite.onload = (e) => {\n    //         debugger\n    //         that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 100);\n    //         that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 100);\n    //     }\n\n\n    // }\n\n        \n        // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // debugger\n            return buildAssetPath(hBlank)\n        } else if(ori ===\"v\" || ori === \"V\") {\n            // debugger\n            return buildAssetPath(vBlank)\n        }\n\n        }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori, value){\n        let selected = undefined;\n\n        const hColors = {\n            \"blank\": buildAssetPath(hBlank),\n            \"blue\": buildAssetPath(hBlue),\n            \"green\": buildAssetPath(hGreen),\n            \"red\": buildAssetPath(hRed),\n            \"yellow\": buildAssetPath(hYellow)\n        }\n\n        const vColors = {\n            \"blank\": buildAssetPath(vBlank),\n            \"blue\": {10: buildAssetPath(vBlue10),\n                     20: buildAssetPath(vBlue20),\n                     30: buildAssetPath(vBlue30),\n                     40: buildAssetPath(vBlue40),\n                     50: buildAssetPath(vBlue50),\n                     60: buildAssetPath(vBlue60),\n                     70: buildAssetPath(vBlue70),\n                     80: buildAssetPath(vBlue80),\n                     90: buildAssetPath(vBlue90),\n                     100: buildAssetPath(vBlue100)\n            },\n            \"green\": {10: buildAssetPath(vGreen10),\n                     20: buildAssetPath(vGreen20),\n                     30: buildAssetPath(vGreen30),\n                     40: buildAssetPath(vGreen40),\n                     50: buildAssetPath(vGreen50),\n                     60: buildAssetPath(vGreen60),\n                     70: buildAssetPath(vGreen70),\n                     80: buildAssetPath(vGreen80),\n                     90: buildAssetPath(vGreen90),\n                     100: buildAssetPath(vGreen100)\n             }\n            }\n\n        if (ori === \"h\" || ori === \"H\"){\n            selected = hColors[color];\n\n            return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color][value];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n    }\n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        // context.drawImage()\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","export default \"images/H_BarBackground.png\";","export default \"images/V_BarBackground.png\";","export default \"images/H_BlueBar.png\";","export default \"images/H_GreenBar.png\";","export default \"images/H_RedBar.png\";","export default \"images/H_YellowBar.png\";","export default \"images/V_BlueBar10.png\";","export default \"images/V_BlueBar20.png\";","export default \"images/V_BlueBar30.png\";","export default \"images/V_BlueBar40.png\";","export default \"images/V_BlueBar50.png\";","export default \"images/V_BlueBar60.png\";","export default \"images/V_BlueBar70.png\";","export default \"images/V_BlueBar80.png\";","export default \"images/V_BlueBar90.png\";","export default \"images/V_BlueBar100.png\";","export default \"images/V_GreenBar10.png\";","export default \"images/V_GreenBar20.png\";","export default \"images/V_GreenBar30.png\";","export default \"images/V_GreenBar40.png\";","export default \"images/V_GreenBar50.png\";","export default \"images/V_GreenBar60.png\";","export default \"images/V_GreenBar70.png\";","export default \"images/V_GreenBar80.png\";","export default \"images/V_GreenBar90.png\";","export default \"images/V_GreenBar100.png\";","import {animateSquares,\n     canvasEvents,\n      drawGrass,\n       drawOnGrid,\n    summonAliens} from \"./scripts/canvas_events.js\"\nimport progressBar from \"./scripts/progressBar.js\"\nimport \"./styles/index.scss\";\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n    //draw Production progress bar\n    // y is 375\n    // const blankLeft = new progressBar(context, -34, 128, \"blank\", \"v\")\n    // const blankLeft = new progressBar(context, -34, 115, \"blank\", \"v\");\n    // const blankRight = new progressBar(context, 590, 115, \"blank\", \"v\");\n\n    \n    // const redBar = new progressBar(context, -34, 375, \"red\", \"v\")\n    const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", 10);\n\n    // const yellowBar = new progressBar(context, 590, 375, \"yellow\", \"v\")\n\n    //start points\n    // const yellowBar = new progressBar(context, 590, 445, \"yellow\", \"v\")\n    const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", 20);\n    // productionBar.drawBar(context)\n    // productionBar.blankSprite.onload = () => {\n    //     \n    //     context.drawImage(productionBar.blankSprite, productionBar.startX, productionBar.startY);\n    //     context.drawImage(productionBar.colorSprite, productionBar.startX, productionBar.startY);\n    // }\n    // productionBar.increaseFill()\n    // progressBar(context, 626, 476, \"blue\")\n\n    summonAliens(context)\n    \n\n    \n    // let choice = menu.options[menu.selectedIndex].value\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n        // for(let i = 0; i < 7; i++){\n        //     for(let j = 0; j < 7; j++){\n                // drawOnGrid(imgTest, i, j)\n                // animateSquares(imgTest)\n\n\n        //     }\n        // }\n        // drawOnGrid(imgTest, 6)\n    // }\n\n    \n\n\n})\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n    //     drawOnGrid(imgTest, 0, 5)\n    //     // drawOnGrid(imgTest, 6)\n    // }\n//  backgrounds()\n\n\n\n\n\n// const backgrounds = require(\"./scripts/backgrounds.js\")"],"sourceRoot":""}