{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/util.js","webpack:///./src/scripts/alien_ship.js","webpack:///./src/scripts/mothership.js","webpack:///./src/images/aliens/ships/08-Netuno.png","webpack:///./src/images/aliens/ships/06-Saturno.png","webpack:///./src/images/aliens/ships/09-Pluto.png","webpack:///./src/scripts/progressBar.js","webpack:///./src/images/h_progress_bars/H_BarBackground.png","webpack:///./src/images/v_progress_bars/V_BarBackground.png","webpack:///./src/images/h_progress_bars/H_BlueBar.png","webpack:///./src/images/h_progress_bars/H_GreenBar.png","webpack:///./src/images/h_progress_bars/H_RedBar.png","webpack:///./src/images/h_progress_bars/H_YellowBar.png","webpack:///./src/images/v_progress_bars/V_BlueBar10.png","webpack:///./src/images/v_progress_bars/V_BlueBar20.png","webpack:///./src/images/v_progress_bars/V_BlueBar30.png","webpack:///./src/images/v_progress_bars/V_BlueBar40.png","webpack:///./src/images/v_progress_bars/V_BlueBar50.png","webpack:///./src/images/v_progress_bars/V_BlueBar60.png","webpack:///./src/images/v_progress_bars/V_BlueBar70.png","webpack:///./src/images/v_progress_bars/V_BlueBar80.png","webpack:///./src/images/v_progress_bars/V_BlueBar90.png","webpack:///./src/images/v_progress_bars/V_BlueBar100.png","webpack:///./src/images/v_progress_bars/V_GreenBar10.png","webpack:///./src/images/v_progress_bars/V_GreenBar20.png","webpack:///./src/images/v_progress_bars/V_GreenBar30.png","webpack:///./src/images/v_progress_bars/V_GreenBar40.png","webpack:///./src/images/v_progress_bars/V_GreenBar50.png","webpack:///./src/images/v_progress_bars/V_GreenBar60.png","webpack:///./src/images/v_progress_bars/V_GreenBar70.png","webpack:///./src/images/v_progress_bars/V_GreenBar80.png","webpack:///./src/images/v_progress_bars/V_GreenBar90.png","webpack:///./src/images/v_progress_bars/V_GreenBar100.png","webpack:///./src/scripts/pointsSystem.js","webpack:///./src/scripts/allSprites.js","webpack:///./src/images/community/fountains/00fountain.png","webpack:///./src/images/community/meditations/00plain_meditation.png","webpack:///./src/images/community/meditations/01activated_meditation.png","webpack:///./src/images/community/meditations/02light_meditation.png","webpack:///./src/images/community/pyramids/00red_pyramid.png","webpack:///./src/images/community/pyramids/01golden_pyramid.png","webpack:///./src/images/community/pyramids/02light_pyramid.png","webpack:///./src/images/community/trees/00small_tree.png","webpack:///./src/images/community/trees/01mighty_tree.png","webpack:///./src/images/community/trees/02tree_of_light.png","webpack:///./src/images/community/ruins/00yellow_slab.png","webpack:///./src/images/community/ruins/01rainbow_rock.png","webpack:///./src/images/community/ruins/02rock_of_light.png","webpack:///./src/images/production/business/00merchant_tent.png","webpack:///./src/images/production/business/01department_store.png","webpack:///./src/images/production/business/02skyscraper.png","webpack:///./src/images/production/energy/00water_wheel.png","webpack:///./src/images/production/energy/01windmill.png","webpack:///./src/images/production/energy/02tesla_tower.png","webpack:///./src/images/production/energy/03nuclear.png","webpack:///./src/images/production/energy/04nuclear.png","webpack:///./src/images/production/flight/01hot_air_balloon.png","webpack:///./src/images/production/flight/02toy_helicopter.png","webpack:///./src/images/production/flight/03airplane.png","webpack:///./src/images/production/flight/04jet.png","webpack:///./src/images/production/houses/00shack.png","webpack:///./src/images/production/houses/01butcher.png","webpack:///./src/images/production/houses/02house.png","webpack:///./src/images/production/weapons/01defensive_missile.png","webpack:///./src/images/production/weapons/02attack_missile.png","webpack:///./src/images/production/weapons/03mind_control.png","webpack:///./src/scripts/canvas_events.js","webpack:///./src/images/terrain_grass/grass_mix_d.jpg","webpack:///./src/images/cursor.png","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildAssetPath","imgSrc","AlienShip","context","filePath","xStart","yStart","scaleW","scaleH","this","sprite","undefined","movements","moveIdx","loadAlienShip","lToRAnimate","drawShip","moveSpanX","push","x","y","alienSrc","Image","src","drawImage","length","MotherShip","army","shipNum","shipFiles","yPos","alienShip","progressBar","startX","startY","color","orientation","points","blankSprite","colorSprite","loadSrc","backgroundSrc","orientationAndCreate","that","onload","e","colorBarSrc","selectColor","ori","hColors","vColors","10","20","30","40","50","60","70","80","90","100","playerPoints","community","production","resources","alienTimer","adjustResources","num","drawResourcesText","canvas","width","clearRect","font","fillStyle","strokeStyle","fillText","strokeText","allSprites","currentGrid","previousGrid","onMobile","grassSquare","cursor","onPlayerGrid","buildPlayerGrid","j","isPresent","cORp","klass","level","buildPlayerState","civilization","fountains","file","boost","index","meditations","pyramids","ruins","trees","farms","business","energy","flight","houses","weapons","canvasEvents","canvasHome","menuContainer","document","getElementsByClassName","menu","allDropDownCategories","Array","from","playerAlert","playerAlert2","addEventListener","getCoords","classList","includes","toggle","len","options","setAttribute","isGridOccupied","removePlayerAlert","currBuild","appendChild","generateAlert","generateCurrSelText","console","log","drawOnGrid","prevX","prevY","test","navigator","userAgent","childElementCount","target","choiceStr","selectedIndex","verifyBuildingMatch","disabled","chosenBuilding","civilizationMenuSelect","filePathBuild","objAtGridPos","parseImage","occupyGrid","isInitialBuilding","fillPercentage","style","adjustPoints","nextcORp","nextKlass","nextIndex","optionsArr","split","parseInt","maxIndexOfType","alertType","removeChild","childNodes","gridDecoderX","0","1","2","3","gridDecoderY","4","5","6","justBuilt","msg","isErrorMsg","ele","createElement","text","createTextNode","$span","parts","posText","cx","cy","canvasRect","getBoundingClientRect","px","pageX","py","pageY","left","top","col","Math","floor","row","selected","image","gridX","gridY","clearRectBoolean","getElementById","getContext","img1","drawRow","rowX","rowY","drawGrass","drawMidline","alpha","numeric","startAlphaY","startNumX","drawLetterNum","makeCountdownId","setInterval","halfWidth","drawAlienCountdown","clearAlienText","clearInterval","motherShip","makeShips","intId1","intId2","intId3","setTimeout","summonAliens"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const buildAssetPath = (imgSrc) => {\n    return `./dist/${imgSrc}`;\n}","import {buildAssetPath} from \"./util.js\";\n\nclass AlienShip {\n    constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        this.context = context;\n        this.xStart = xStart;\n        this.yStart = yStart;\n        this.sprite = undefined;\n        this.scaleW = scaleW;\n        this.scaleH = scaleH;\n\n        this.filePath = filePath\n\n        this.movements = [];\n        this.moveIdx = 0;\n\n        this.loadAlienShip = this.loadAlienShip.bind(this);\n        this.lToRAnimate = this.lToRAnimate.bind(this);\n        this.drawShip = this.drawShip.bind(this);\n        this.loadAlienShip()\n        this.moveSpanX()\n    }\n\n    // generate the movements for an alien Ship\n     moveSpanX(){\n            for(let i = 1; i < 23 ; i++){\n                this.movements.push({x: (this.xStart * (i * 40)), y: (this.yStart)})\n            }\n        }\n\n    loadAlienShip(){\n    const alienSrc = this.filePath;\n\n    this.sprite = new Image();\n    this.sprite.src = alienSrc;        \n\n    }\n\n    drawShip(){\n       \n        //works with set pixel\n        // this.context.drawImage(this.sprite, 0, 0, 100, 100);\n\n        // using animation\n        // this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, 100, 100);\n\n        //works with fraction\n        // this.context.drawImage(this.sprite, 0, 0, (this.sprite.width / this.scaleW), (this.sprite.height / this.scaleH));\n        this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n\n    }\n\n    lToRAnimate(){\n        let x = 0\n        // console.log(\"ship moving\")\n\n            // console.log(this.movements[this.moveIdx])\n            // this.context.clearRect(0,0,646,131)\n            const topLeftX = this.movements[this.moveIdx].x\n            const topLeftY = this.movements[this.moveIdx].y\n\n            // console.log(topLeftX)\n            // console.log(topLeftY)\n\n            //this function removes previous drawing of alien ship.\n            if (this.moveIdx > 0){\n                // this.context.clearRect((this.scaleW * this.moveIdx ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n                //old but works\n                // this.context.clearRect((topLeftX ) , topLeftY,(this.scaleW * (-1)), (this.scaleW * 1 ))\n\n            }\n\n            // this.context.clearRect(topLeftX, topLeftY,(this.scaleW * - 1), (this.scaleW * -1 ))\n\n            // this.context.clearRect(300 , 300,(this.scaleW * (1)), (this.scaleW * -1 ))\n           this.context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH );\n            this.moveIdx++;\n            if(this.moveIdx >= this.movements.length) this.moveIdx = 0;\n            // if(x === 15){\n            //     window.clearInterval()\n            // }\n        // }\n    }\n}\n\nexport default AlienShip;","import {buildAssetPath} from \"./util.js\"\nimport AlienShip from \"./alien_ship\"\n\nimport neptune from \"../images/aliens/ships/08-Netuno.png\";\nimport saturn from \"../images/aliens/ships/06-Saturno.png\";\nimport pluto from \"../images/aliens/ships/09-Pluto.png\";\n\nclass MotherShip {\n    constructor(context){\n        this.context = context;\n        this.army = []\n\n    }\n\n    makeShips(){\n        let shipNum = this.army.length;\n\n        const shipFiles = [\n            buildAssetPath(neptune),\n            buildAssetPath(saturn),\n            buildAssetPath(pluto)\n        ]\n        // constructor(context, filePath, xStart, yStart, scaleW, scaleH){\n        while(this.army.length < 3){\n            shipNum = this.army.length;\n            const yPos = undefined;\n\n            if (shipNum === 0){\n                yPos = shipNum;\n            } else {\n                yPos = shipNum * 40;\n            }\n\n            const alienSrc = shipFiles[shipNum]\n            const alienShip = new AlienShip(this.context, alienSrc, 1, yPos, 40, 40)\n            this.army.push(alienShip)\n\n        }\n    }\n\n}\n\nexport default MotherShip","export default \"images/08-Netuno.png\";","export default \"images/06-Saturno.png\";","export default \"images/09-Pluto.png\";","import hBlank from \"../images/h_progress_bars/H_BarBackground.png\"\nimport hBlue from \"../images/h_progress_bars/H_BlueBar.png\"\nimport hGreen from \"../images/h_progress_bars/H_GreenBar.png\"\nimport hRed from \"../images/h_progress_bars/H_RedBar.png\"\nimport hYellow from \"../images/h_progress_bars/H_YellowBar.png\"\n\n\nimport vBlank from \"../images/v_progress_bars/V_BarBackground.png\"\nimport vBlue10 from \"../images/v_progress_bars/V_BlueBar10.png\"\nimport vBlue20 from \"../images/v_progress_bars/V_BlueBar20.png\"\nimport vBlue30 from \"../images/v_progress_bars/V_BlueBar30.png\"\nimport vBlue40 from \"../images/v_progress_bars/V_BlueBar40.png\"\nimport vBlue50 from \"../images/v_progress_bars/V_BlueBar50.png\"\nimport vBlue60 from \"../images/v_progress_bars/V_BlueBar60.png\"\nimport vBlue70 from \"../images/v_progress_bars/V_BlueBar70.png\"\nimport vBlue80 from \"../images/v_progress_bars/V_BlueBar80.png\"\nimport vBlue90 from \"../images/v_progress_bars/V_BlueBar90.png\"\nimport vBlue100 from \"../images/v_progress_bars/V_BlueBar100.png\"\n\nimport vGreen10 from \"../images/v_progress_bars/V_GreenBar10.png\"\nimport vGreen20 from \"../images/v_progress_bars/V_GreenBar20.png\"\nimport vGreen30 from \"../images/v_progress_bars/V_GreenBar30.png\"\nimport vGreen40 from \"../images/v_progress_bars/V_GreenBar40.png\"\nimport vGreen50 from \"../images/v_progress_bars/V_GreenBar50.png\"\nimport vGreen60 from \"../images/v_progress_bars/V_GreenBar60.png\"\nimport vGreen70 from \"../images/v_progress_bars/V_GreenBar70.png\"\nimport vGreen80 from \"../images/v_progress_bars/V_GreenBar80.png\"\nimport vGreen90 from \"../images/v_progress_bars/V_GreenBar90.png\"\nimport vGreen100 from \"../images/v_progress_bars/V_GreenBar100.png\"\n\n\nimport vGreen from \"../images/v_progress_bars/V_GreenBar100.png\"\n// import vRed from \"../images/v_progress_bars/V_RedBar.png\"\n// import vYellow from \"../images/v_progress_bars/V_YellowBar.png\"\nimport {buildAssetPath} from \"./util.js\"\n\n\nclass progressBar {\n    constructor(context, startX, startY, color, orientation, value){\n        this.context = context;\n        this.startX = startX;\n        this.startY = startY;\n        this.points = 30;\n        this.color = color;\n        this.value = value;\n        this.orientation = orientation\n\n        this.blankSprite = undefined;\n        this.colorSprite = undefined;\n\n        this.loadSrc(orientation)\n        \n        }\n\n    loadSrc(orientation){\n        if(this.color === \"blank\"){\n            const backgroundSrc = this.orientationAndCreate(orientation);\n            this.blankSprite = new Image();\n            this.blankSprite.src = backgroundSrc; \n            \n            const that = this;\n            this.blankSprite.onload = (e) => {\n            // debugger\n            // that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 364);\n            that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 378);\n            }\n        } else {\n            const colorBarSrc = this.selectColor(this.color, orientation, this.value)\n            this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n            // debugger\n            const that = this;\n            this.colorSprite.onload = (e) => {\n\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 278);\n                // 30 is good start\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 30);\n                // debugger\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n        \n        \n        \n\n        \n       \n\n\n    }\n\n\n\n    // loadSrc(orientation){\n        \n    //     const backgroundSrc = this.orientationAndCreate(orientation);\n    //     const colorBarSrc = this.selectColor(this.color, orientation)\n        \n    //     this.blankSprite = new Image();\n    //     this.colorSprite = new Image();\n\n    //     this.blankSprite.src = backgroundSrc; \n    //     this.colorSprite.src = colorBarSrc; \n    //     const that = this;\n    //     this.blankSprite.onload = (e) => {\n    //         debugger\n    //         that.context.drawImage(that.blankSprite, that.startX, that.startY, 100, 100);\n    //         that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 100);\n    //     }\n\n\n    // }\n\n        \n        // select initial orientation of progress bar. Vertical or Horizontal.\n    orientationAndCreate(ori){\n        if(ori === \"h\" || ori === \"H\"){\n            // debugger\n            return buildAssetPath(hBlank)\n        } else if(ori ===\"v\" || ori === \"V\") {\n            // debugger\n            return buildAssetPath(vBlank)\n        }\n\n    }\n\n         // select color of progress bar vertical or horizontal\n    selectColor(color, ori, value){\n        let selected = undefined;\n\n        const hColors = {\n            \"blank\": buildAssetPath(hBlank),\n            \"blue\": buildAssetPath(hBlue),\n            \"green\": buildAssetPath(hGreen),\n            \"red\": buildAssetPath(hRed),\n            \"yellow\": buildAssetPath(hYellow)\n        }\n\n        const vColors = {\n            \"blank\": buildAssetPath(vBlank),\n            \"blue\": {10: buildAssetPath(vBlue10),\n                     20: buildAssetPath(vBlue20),\n                     30: buildAssetPath(vBlue30),\n                     40: buildAssetPath(vBlue40),\n                     50: buildAssetPath(vBlue50),\n                     60: buildAssetPath(vBlue60),\n                     70: buildAssetPath(vBlue70),\n                     80: buildAssetPath(vBlue80),\n                     90: buildAssetPath(vBlue90),\n                     100: buildAssetPath(vBlue100)\n            },\n            \"green\": {10: buildAssetPath(vGreen10),\n                     20: buildAssetPath(vGreen20),\n                     30: buildAssetPath(vGreen30),\n                     40: buildAssetPath(vGreen40),\n                     50: buildAssetPath(vGreen50),\n                     60: buildAssetPath(vGreen60),\n                     70: buildAssetPath(vGreen70),\n                     80: buildAssetPath(vGreen80),\n                     90: buildAssetPath(vGreen90),\n                     100: buildAssetPath(vGreen100)\n             }\n            }\n\n        if (ori === \"h\" || ori === \"H\"){\n            selected = hColors[color];\n\n            return selected;\n        }else if(ori ===\"v\" || ori === \"V\"){\n            selected = vColors[color][value];\n\n            return selected;\n        }\n\n    }\n    \n\n    increaseFill(value){\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n        // this.context.drawImage(this.colorSprite, this.startX, this.startY, 22, 200)\n        // else {\n            this.value = value\n            const colorBarSrc = this.selectColor(this.color, this.orientation, this.value)\n            // this.colorSprite = new Image();\n            this.colorSprite.src = colorBarSrc; \n            // debugger\n            const that = this;\n            this.colorSprite.onload = (e) => {\n\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 278);\n                // 30 is good start\n                // that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 30);\n                that.context.drawImage(that.colorSprite, that.startX, that.startY, 100, 400);\n            }\n\n        }\n    \n\n    decreaseFill(value){\n\n    }\n\n    resetFill(){\n\n    }\n\n    drawBar(context){\n        // context.drawImage()\n        context.drawImage(this.blankSprite, this.startX, this.startY, 100, 100);\n    }\n\n}\n\nexport default progressBar;\n\n","export default \"images/H_BarBackground.png\";","export default \"images/V_BarBackground.png\";","export default \"images/H_BlueBar.png\";","export default \"images/H_GreenBar.png\";","export default \"images/H_RedBar.png\";","export default \"images/H_YellowBar.png\";","export default \"images/V_BlueBar10.png\";","export default \"images/V_BlueBar20.png\";","export default \"images/V_BlueBar30.png\";","export default \"images/V_BlueBar40.png\";","export default \"images/V_BlueBar50.png\";","export default \"images/V_BlueBar60.png\";","export default \"images/V_BlueBar70.png\";","export default \"images/V_BlueBar80.png\";","export default \"images/V_BlueBar90.png\";","export default \"images/V_BlueBar100.png\";","export default \"images/V_GreenBar10.png\";","export default \"images/V_GreenBar20.png\";","export default \"images/V_GreenBar30.png\";","export default \"images/V_GreenBar40.png\";","export default \"images/V_GreenBar50.png\";","export default \"images/V_GreenBar60.png\";","export default \"images/V_GreenBar70.png\";","export default \"images/V_GreenBar80.png\";","export default \"images/V_GreenBar90.png\";","export default \"images/V_GreenBar100.png\";","import progressBar from \"./progressBar.js\"\n\n// contains money, and current build points for player throughout the game\nexport const playerPoints = {\n    community: 0,\n    production: 0,\n    resources: 0,\n    alienTimer: 2\n}\n\n// cORp stands for community or production\nexport const adjustPoints = (points, context, style = \"community\") => {\n\n    let fillPercentage; \n    switch(true){\n        case (points <= 142):\n            fillPercentage = 10;\n            break;\n        case (points > 142 && points <= 184):\n            fillPercentage = 20;\n            break;\n        case (points > 184 && points <= 226):\n            fillPercentage = 30;\n            break;\n        case (points > 226 && points <= 268):\n            fillPercentage = 40;\n            break;\n        case (points > 268 && points <= 310):\n            fillPercentage = 50;\n            break;\n        case (points > 310 && points <= 352):\n            fillPercentage = 60;\n            break;\n        case (points > 352 && points <= 394):\n            fillPercentage = 70;\n            break;\n        case (points > 394 && points <= 436):\n            fillPercentage = 80;\n            break;\n        case (points > 436 && points <= 478):\n            fillPercentage = 90;\n            break;\n        case (points > 700):\n            // debugger\n            fillPercentage = 100;\n            break\n        default:\n            break\n    }\n\n    if (style === \"community\"){\n        //save to variable because garbage collection\n        // debugger\n        // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", fillPercentage);\n        const greenBar = new progressBar(context, -31, 105, \"green\", \"v\", fillPercentage);\n    } else {\n        // debugger\n        const blueBar = new progressBar(context, 612, 105, \"blue\", \"v\", fillPercentage);\n    }\n}\n\nexport const spawnResources = () => {\n    playerPoints.resources += 5;\n}\n\nexport const adjustResources = (num) => {\n    // debugger\n    playerPoints.resources += num;\n}\n\nexport const adjustTimer = (num) => {\n    // debugger\n    playerPoints.alienTimer += num;\n}\n\nexport const setTimer = (num) => {\n    playerPoints.alienTimer = num\n}\n\nexport const getTime = () => {\n    return playerPoints.alienTimer;\n}\n\nexport const clearAlienText = (context) => {\n    const startX = ((context.canvas.width / 2) - 116);\n    // context.clearRect(startX, 30, 250, 80)\n    context.clearRect(startX, 0, 275, 80)\n}\n\n\nexport const drawMidline = (context) => {\n    const startX = ((context.canvas.width / 2))\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#66A1E7\"\n    // context.strokeStyle = \"#C5E0CF\";\n    context.strokeStyle = \"#55906F\";\n    context.fillText(\"|\", startX, 10);\n    context.strokeText(\"|\", startX, 10);\n}\n\nexport const drawAlienCountdown = (context) => {\n    const halfWidth = context.canvas.width / 2\n    const startX = ((context.canvas.width / 2) - 116);\n   \n    // context.clearRect(halfWidth-10, 35, (halfWidth-10 + 60), 65)\n    context.clearRect(startX, 0, 275, 80)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#FFF\";\n    // context.strokeStyle = \"#55906F\";\n    context.fillText(\"Aliens are coming!\", startX, 30);\n    context.strokeText(\"Aliens are coming!\", startX, 30);\n     \n    context.fillText(playerPoints.alienTimer, halfWidth-10, 60);\n    context.strokeText(playerPoints.alienTimer, halfWidth-10, 60);\n   \n}\n\nexport const drawResourcesText = (context) => {\n    const startX = ((context.canvas.width / 2) - 108);\n    const startY = 522;\n    // context.clearRect(startX, 478, (startX + 350), 30)\n    context.clearRect(startX, 500, (startX + 350), 30)\n\n    context.font = 'bold 30px Sans-Serif';\n    context.fillStyle = \"#000\"\n    context.strokeStyle = \"#FFF\";\n    // context.strokeStyle = \"#C5E0CF\";\n\n    context.fillText(\"Resources: \" + playerPoints.resources, startX, startY);\n    context.strokeText(\"Resources: \" + playerPoints.resources, startX, startY);\n    // requestAnimationFrame(drawResourcesText(context))\n\n  }","import {buildAssetPath} from \"./util\";\n\n//Community\nimport fountain0 from \"../images/community/fountains/00fountain.png\";\n\nimport meditate0 from \"../images/community/meditations/00plain_meditation.png\";\nimport meditate1 from \"../images/community/meditations/01activated_meditation.png\";\nimport meditate2 from \"../images/community/meditations/02light_meditation.png\";\n\nimport pyramid0 from \"../images/community/pyramids/00red_pyramid.png\";\nimport pyramid1 from \"../images/community/pyramids/01golden_pyramid.png\";\nimport pyramid2 from \"../images/community/pyramids/02light_pyramid.png\";\n\nimport ruin0 from \"../images/community/ruins/00yellow_slab.png\";\nimport ruin1 from \"../images/community/ruins/01rainbow_rock.png\";\nimport ruin2 from \"../images/community/ruins/02rock_of_light.png\";\n\nimport tree0 from \"../images/community/trees/00small_tree.png\";\nimport tree1 from \"../images/community/trees/01mighty_tree.png\";\nimport tree2 from \"../images/community/trees/02tree_of_light.png\";\n\n\n\n\n//Production\n\nimport biz0 from \"../images/production/business/00merchant_tent.png\";\nimport biz1 from \"../images/production/business/01department_store.png\";\nimport biz2 from \"../images/production/business/02skyscraper.png\";\n\nimport energy0 from \"../images/production/energy/00water_wheel.png\";\nimport energy1 from \"../images/production/energy/01windmill.png\";\nimport energy2 from \"../images/production/energy/02tesla_tower.png\";\nimport energy3 from \"../images/production/energy/03nuclear.png\";\nimport energy4 from \"../images/production/energy/04nuclear.png\";\n\nimport flight0 from \"../images/production/flight/01hot_air_balloon.png\";\nimport flight1 from \"../images/production/flight/02toy_helicopter.png\";\nimport flight2 from \"../images/production/flight/03airplane.png\";\nimport flight3 from \"../images/production/flight/04jet.png\";\n\nimport house0 from \"../images/production/houses/00shack.png\";\nimport house1 from \"../images/production/houses/01butcher.png\";\nimport house2 from \"../images/production/houses/02house.png\";\n\nimport weapon0 from \"../images/production/weapons/01defensive_missile.png\";\nimport weapon1 from \"../images/production/weapons/02attack_missile.png\";\nimport weapon2 from \"../images/production/weapons/03mind_control.png\";\n\nexport const allSprites = {\n    \"fountain0\": fountain0,\n    \"---m\":\"meditation\",\n    \"meditate0\": meditate0,\n    \"meditate1\": meditate1,\n    \"meditate2\": meditate2,\n    \"pyramid0\": pyramid0,\n    \"pyramid1\": pyramid1,\n    \"pyramid2\": pyramid2,\n    \"---trees\":\"trees\",\n    \"tree0\": tree0,\n    \"tree1\": tree1,\n    \"tree2\": tree2,\n    \"---ruin\": \"ruin\",\n    \"ruin0\": ruin0,\n    \"ruin1\": ruin1,\n    \"ruin2\": ruin2,\n    \"p\":\"PRODUCTION\",\n    \"---biz\":\"business\",\n    \"biz0\": biz0,\n    \"biz1\": biz1,\n    \"biz2\": biz2,\n    \"---energy\": \"energy\",\n    \"energy0\": energy0,\n    \"energy1\": energy1,\n    \"energy2\": energy2,\n    \"energy3\": energy3,\n    \"energy4\": energy4,\n    \"---flight\":\"flight\",\n    \"flight0\": flight0,\n    \"flight1\": flight1,\n    \"flight2\": flight2,\n    \"flight3\": flight3,\n    \"---house\": \"house\",\n    \"house0\": house0,\n    \"house1\": house1,\n    \"house2\": house2,\n    \"--weapon\":\"weapon\",\n    \"weapon0\": weapon0,\n    \"weapon1\": weapon1,\n    \"weapon2\": weapon2\n}","export default \"images/00fountain.png\";","export default \"images/00plain_meditation.png\";","export default \"images/01activated_meditation.png\";","export default \"images/02light_meditation.png\";","export default \"images/00red_pyramid.png\";","export default \"images/01golden_pyramid.png\";","export default \"images/02light_pyramid.png\";","export default \"images/00small_tree.png\";","export default \"images/01mighty_tree.png\";","export default \"images/02tree_of_light.png\";","export default \"images/00yellow_slab.png\";","export default \"images/01rainbow_rock.png\";","export default \"images/02rock_of_light.png\";","export default \"images/00merchant_tent.png\";","export default \"images/01department_store.png\";","export default \"images/02skyscraper.png\";","export default \"images/00water_wheel.png\";","export default \"images/01windmill.png\";","export default \"images/02tesla_tower.png\";","export default \"images/03nuclear.png\";","export default \"images/04nuclear.png\";","export default \"images/01hot_air_balloon.png\";","export default \"images/02toy_helicopter.png\";","export default \"images/03airplane.png\";","export default \"images/04jet.png\";","export default \"images/00shack.png\";","export default \"images/01butcher.png\";","export default \"images/02house.png\";","export default \"images/01defensive_missile.png\";","export default \"images/02attack_missile.png\";","export default \"images/03mind_control.png\";","import AlienShip from \"./alien_ship\";\nimport MotherShip from \"./mothership\";\nimport {buildAssetPath} from \"./util\"\nimport {\n    playerPoints,\n    adjustPoints,\n    adjustResources,\n    adjustTimer\n} from \"./pointsSystem\"\n\nimport {allSprites} from \"./allSprites\"\n\nimport grassD from \"../images/terrain_grass/grass_mix_d.jpg\"\nimport cursorPng from \"../images/cursor.png\"\n// import grassD from \"../images/terrain_grass/midgrass.jpg\"\n\n// //ex: [3,4]\nlet currentGrid = undefined;\nlet previousGrid = undefined;\nlet onMobile = false;\n\n//This is a generic grass square preloaded with source path\nexport const grassSquare = new Image()\ngrassSquare.src = buildAssetPath(grassD)\n\n// This is the cursor icon, preloaded with source path\nexport const cursor = new Image()\ncursor.src = buildAssetPath(cursorPng)\n\n// skeleton for onPlayerGrid\n//{isPresent: false, cORp: \"\", klass: \"\", level: null}\nconst onPlayerGrid = buildPlayerState()\n\n// This function builds an object containing all the coordinates of the play grid and \n// stores state of what the player has played\nfunction buildPlayerState(){\n    let buildPlayerGrid = {}\n    for(let i = 0 ; i < 4; i++){\n        buildPlayerGrid[i] = {}\n        for(let j = 0; j < 7; j++){\n\n            buildPlayerGrid[i][j] = {isPresent: false, cORp: \"\", klass: \"\", level: null, name: \"\"}\n        }\n    }\n    return buildPlayerGrid\n}\n\n\n//skeleton\n//{file: \"\"\", name:\"\", cBoost: 10, pBoost: 0, community:\"\", klass:\"\", index:#}\nconst civilization = {\n        community: {\n                fountains: [\n                    {file: buildAssetPath(allSprites[\"fountain0\"]), name:\"Dual Fountain\", boost: 10, cORp: \"community\", klass:\"fountains\", index:0 }\n                ],\n                meditations: [\n                    {file: buildAssetPath(allSprites[\"meditate0\"]), name:\"Ruins Meditate\", boost: 10, cORp: \"community\", klass:\"meditations\", index:0 },\n                    {file: buildAssetPath(allSprites[\"meditate1\"]), name:\"Enlightened Meditate\", boost: 20, cORp: \"community\", klass:\"meditations\", index:1 },\n                    {file: buildAssetPath(allSprites[\"meditate2\"]), name:\"Activated Meditate\", boost: 30, cORp: \"community\", klass:\"meditations\", index:2 },\n\n                ],\n                pyramids: [\n                    {file: buildAssetPath(allSprites[\"pyramid0\"]), name:\"Red Pyramid\", boost: 10, cORp: \"community\", klass:\"pyramids\", index:0 },\n                    {file: buildAssetPath(allSprites[\"pyramid1\"]), name:\"Golden Pyramid\", boost: 20, cORp: \"community\", klass:\"pyramids\", index:1 },\n                    {file: buildAssetPath(allSprites[\"pyramid2\"]), name:\"Pyramid of Light\", boost: 30, cORp: \"community\", klass:\"pyramids\", index:2 }\n                \n                ],\n                ruins: [\n                    {file: buildAssetPath(allSprites[\"ruin0\"]), name:\"Yellow Slab\", boost: 10, cORp: \"community\", klass:\"ruins\", index:0 },\n                    {file: buildAssetPath(allSprites[\"ruin1\"]), name:\"Rainbow Rock\", boost: 20, cORp: \"community\", klass:\"ruins\", index:1 },\n                    {file: buildAssetPath(allSprites[\"ruin2\"]), name:\"Stone of Light\", boost: 30, cORp: \"community\", klass:\"ruins\", index:2 }\n\n                ],\n                \n                trees:[\n                    {file: buildAssetPath(allSprites[\"tree0\"]), name:\"Small Tree\", boost: 10, cORp: \"community\", klass:\"trees\", index:0 },\n                    {file: buildAssetPath(allSprites[\"tree1\"]), name:\"Mighty Tree\", boost: 20, cORp: \"community\", klass:\"trees\", index:1 },\n                    {file: buildAssetPath(allSprites[\"tree2\"]), name:\"Tree of Light\", boost: 30, cORp: \"community\", klass:\"trees\", index:2 }\n                ]\n                },\n        production: {\n                farms: [],\n                business: [\n                    {file: buildAssetPath(allSprites[\"biz0\"]), name:\"Fruit Stand\", boost: 15, cORp: \"production\", klass:\"business\", index:0 },\n                    {file: buildAssetPath(allSprites[\"biz1\"]), name:\"Mall\", boost: 25, cORp: \"production\", klass:\"business\", index:1 },\n                    {file: buildAssetPath(allSprites[\"biz2\"]), name:\"Skyscraper\", boost: 90, cORp: \"production\", klass:\"business\", index:2 }\n                ],\n                  energy: [\n                    {file: buildAssetPath(allSprites[\"energy0\"]), name:\"Water Wheel\", boost: 15, cORp: \"production\", klass:\"energy\", index:0 },\n                    {file: buildAssetPath(allSprites[\"energy1\"]), name:\"Wind Mill\", boost: 25, cORp: \"production\", klass:\"energy\", index:1 },\n                    {file: buildAssetPath(allSprites[\"energy2\"]), name:\"Tesla Tower\", boost: 35, cORp: \"production\", klass:\"energy\", index:2 },\n                    {file: buildAssetPath(allSprites[\"energy3\"]), name:\"Nuclear\", boost: 45, cORp: \"production\", klass:\"energy\", index:3 },\n                    {file: buildAssetPath(allSprites[\"energy4\"]), name:\"Efficient Nuclear\", boost: 55, cORp: \"production\", klass:\"energy\", index:4 }\n                  ],\n                  flight:[\n                    {file: buildAssetPath(allSprites[\"flight0\"]), name:\"Hot Air Balloon\", boost: 15, cORp: \"production\", klass:\"flight\", index:0},\n                    {file: buildAssetPath(allSprites[\"flight1\"]), name:\"Helicopter\", boost: 25, cORp: \"production\", klass:\"flight\", index:1},\n                    {file: buildAssetPath(allSprites[\"flight2\"]), name:\"Airplane\", boost: 35, cORp: \"production\", klass:\"flight\", index:2},\n                    {file: buildAssetPath(allSprites[\"flight3\"]), name:\"Jet\", boost: 45, cORp: \"production\", klass:\"flight\", index:3},\n                  ],\n                houses: [\n                     {file: buildAssetPath(allSprites[\"house0\"]), name:\"Cold House\", boost: 15, cORp: \"production\", klass:\"houses\", index:0 },\n                     {file: buildAssetPath(allSprites[\"house1\"]), name:\"Farm House\", boost: 25, cORp: \"production\", klass:\"houses\", index:1 },\n                     {file: buildAssetPath(allSprites[\"house2\"]), name:\"Warm House\", boost: 35, cORp: \"production\", klass:\"houses\", index:2 }\n                    ],\n                weapons: [\n                     {file: buildAssetPath(allSprites[\"weapon0\"]), name:\"Defense Missle\", boost: 15, cORp: \"production\", klass:\"weapons\", index:0 },\n                     {file: buildAssetPath(allSprites[\"weapon1\"]), name:\"Attack Missle\", boost: 25, cORp: \"production\", klass:\"weapons\", index:1 },\n                     {file: buildAssetPath(allSprites[\"weapon2\"]), name:\"Mind Control\", boost: 35, cORp: \"production\", klass:\"weapons\", index:2 }\n                ],\n                  \n        }\n}\n\n\nexport const canvasEvents = (canvasHome, context) => {\n    //dropdown on right side\n    let menuContainer = document.getElementsByClassName(\"drop-down-container\")[0]\n    let menu = document.getElementsByClassName(\"civilization-menu\")[0]\n    const allDropDownCategories = Array.from(document.getElementsByClassName(\"cat\"));\n    const mainDropDown = Array.from(menu);\n    // let menu = document.getElementsByClassName(\"nocat\")[0]\n    const playerAlert = document.getElementsByClassName(\"playerAlert\")[0]\n    const playerAlert2 = document.getElementsByClassName(\"playerAlert2\")[0]\n    \n    //When user clicks on grid it sets currentGrid. If they click outside, it returns\n    // undefined\n    canvasHome.addEventListener('mousedown', (e) => {\n        currentGrid = getCoords(e);\n        debugger\n        // Menu is hidden . Therefore show the dropdown menu\n        if(currentGrid && Array.from(menuContainer.classList).includes(\"hidden\")){\n            const x = currentGrid[0];\n            const y = currentGrid[1];\n\n            //show dropdown if user clicks in playgrid\n            menuContainer.classList.toggle(\"hidden\")\n\n            const len = menu.options.length;\n            menu.setAttribute('size', len);\n\n            if(!isGridOccupied()){\n                removePlayerAlert(playerAlert)\n                previousGrid = currentGrid\n                console.log(\"previous grid\", previousGrid)\n                //draw crosshair\n                drawOnGrid(cursor, context, x, y)\n            } else {\n                removePlayerAlert(playerAlert)\n                const currBuild = onPlayerGrid[x][y]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n            }\n\n        } else if(currentGrid && !Array.from(menuContainer.classList).includes(\"hidden\")){\n            // Menu is not hidden, Game is Playable\n            // Draw cursor options below\n            if(!isGridOccupied()){\n                removePlayerAlert(playerAlert)\n                removePlayerAlert(playerAlert2)\n                const x = currentGrid[0];\n                const y = currentGrid[1];\n\n                if(previousGrid !== undefined){\n                    const prevX = previousGrid[0];\n                    const prevY = previousGrid[1];\n                    \n                    //remove crosshair cursor iff the previous grid wasn't built on.\n                    // if(!isGridOccupied(prevX, prevY)){\n                    if (onPlayerGrid[prevX][prevY].isPresent === false){\n                        drawOnGrid(grassSquare, context, prevX, prevY, true)\n                    }\n                }\n\n                //remove crosshair cursor iff the previous grid wasn't built on.\n                // if(!isGridOccupied(prevX, prevY)){\n                //     drawOnGrid(grassSquare, context, prevX, prevY, true)\n                // }\n                // draw new crosshair\n                previousGrid = currentGrid\n                drawOnGrid(cursor, context, x, y)\n                console.log(\"CORRECT\")\n            } else {\n                removePlayerAlert(playerAlert)\n                removePlayerAlert(playerAlert2)\n                const x = currentGrid[0];\n                const y = currentGrid[1];\n\n                if(previousGrid !== undefined){\n                    const prevX = previousGrid[0];\n                    const prevY = previousGrid[1];\n                \n                    //remove crosshair cursor iff the previous grid wasn't built on.\n                    // if(!isGridOccupied(prevX, prevY)){\n                    if(onPlayerGrid[prevX][prevY].isPresent === false){\n                        drawOnGrid(grassSquare, context, prevX, prevY, true)\n                    }\n                }\n                debugger\n                const currBuild = onPlayerGrid[x][y]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n            }\n        } else if (currentGrid === undefined && !Array.from(menuContainer.classList).includes(\"hidden\")) {\n            removePlayerAlert(playerAlert)\n            removePlayerAlert(playerAlert2)\n            debugger\n            if(previousGrid !== undefined){\n                const prevX = previousGrid[0];\n                const prevY = previousGrid[1];\n            \n                //remove crosshair cursor\n                if(onPlayerGrid[prevX][prevY].isPresent === false){\n                    drawOnGrid(grassSquare, context, prevX, prevY, true)\n                }\n            }\n            \n            previousGrid = undefined;\n\n            //hide dropdown if user clicks outside play grid            \n            menuContainer.classList.toggle(\"hidden\")\n\n        } \n        console.log(`currentGrid: ${currentGrid}`)\n        console.log(`previousGrid: ${previousGrid}`)\n    \n    })\n    if ( /Android|webOS|iPhone|iPod|Blackberry|Windows Phone/i.test(navigator.userAgent)){\n       onMobile = true;\n    }\n    // When user selects from the drop down menu to place a sprite\n    menu.addEventListener('click', (e) => {\n        // Remove error message if there is one\n        removePlayerAlert(playerAlert)\n        removePlayerAlert(playerAlert2)\n        \n        // show what sprite is currently there\n        if (previousGrid !== undefined){\n            if(previousGrid[0] === currentGrid[0] \n                && previousGrid[1] === currentGrid[1]\n                && isGridOccupied()){\n\n            const currBuild = onPlayerGrid[currentGrid[0]][currentGrid[1]]\n            playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n\n            } \n        }\n\n        if(playerAlert2.childElementCount === 0 && isGridOccupied()){\n                const currBuild = onPlayerGrid[currentGrid[0]][currentGrid[1]]\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n        }\n        \n\n        // player clicks on an option that isn't a play sprite\n        if (allDropDownCategories.includes(e.target) ){\n            playerAlert.appendChild(generateAlert(\"That is not a building\"))\n            return false;\n        }\n\n        console.log(\"resources\",playerPoints.resources)\n        \n        \n        // minimum purchase price required\n        if (playerPoints.resources < 20){\n            playerAlert.appendChild(generateAlert(\"Every building costs 20 resources ... !\"))\n            return false\n        } \n        \n        //choiceStr is \"production,houses,0\"\n        const choiceStr = menu.options[menu.selectedIndex].value\n\n        // prevent incorrect choice on dropdown from being playable as a sprite\n        if (!choiceStr.includes(\",\")){\n            playerAlert.appendChild(generateAlert(\"That is not a building\"))\n            return false;\n        } \n\n\n        // handle all the error cases with verifyBuildingMatch FN\n        const okToRender = verifyBuildingMatch(choiceStr, menu)\n        if (!okToRender){\n            console.log(\"choiceStr\", choiceStr)\n            console.log(\"can't draw\")\n            menu.disabled = false;\n            if(onMobile){\n                playerAlert.appendChild(generateAlert(\"On Mobile\"))\n                menu.selectedIndex = null\n            }\n            return false;\n        } \n        \n        // chosenBuilding is syntax is....\n        // {isPresent: false, cORp: \"\", klass: \"\", level: null}\n        const chosenBuilding = civilizationMenuSelect(choiceStr)\n        const filePathBuild = chosenBuilding.file\n        \n        // If we made it this far, we know the option selected IS a valid building\n        // Image file has been parsed\n\n        //place sprite if not occupied\n        if(!isGridOccupied()){\n\n            // Is the first building to be places\n            if (isInitialBuilding(chosenBuilding) === true){\n                parseImage(context, filePathBuild, currentGrid)\n\n                \n                const currBuild = occupyGrid(chosenBuilding)\n\n                // if (playerAlert2.childElementCount === 0){\n                //     debugger\n                //     playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                // } else {\n                //     //prepare playerAlert2 iff the cursor is at a new spot\n                //     removePlayerAlert(playerAlert2)\n                    playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                // }\n\n                console.log(\"PAY UP\")\n                adjustResources(-20)\n\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                // debugger\n                adjustPoints(playerPoints[chosenBuilding.cORp], context, chosenBuilding.cORp)\n            } else {\n                playerAlert.appendChild(generateAlert(\"That building is not the first of it's kind!\"))\n            }\n        } else if (isGridOccupied()){\n            \n             // Already a building on grid pos\n             const x = currentGrid[0];\n             const y = currentGrid[1];\n\n             const objAtGridPos = onPlayerGrid[x][y];\n            \n             if (chosenBuilding.index === (objAtGridPos.level + 1)){\n                // player upgrades appropriately by 1 level\n                //re-render grass first && remove previous building\n                console.log(\"DRAW!!!\")\n                drawOnGrid(grassSquare, context, x, y, true)\n                \n                parseImage(context, filePathBuild, currentGrid)\n\n                //prepare playerAlert2 iff the cursor is at a new spot\n                const currBuild = occupyGrid(chosenBuilding)\n            \n                if (playerAlert2.childElementCount === 0){\n                 playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n                }  else {\n\n                removePlayerAlert(playerAlert2)\n                playerAlert2.appendChild(generateAlert(generateCurrSelText(currBuild), false))\n             }\n\n\n                //  occupyGrid(chosenBuilding)\n                console.log(\"PAY UP\")\n                adjustResources(-20)\n                playerPoints[chosenBuilding.cORp] += chosenBuilding.boost\n                //  menu.disabled = false\n            }\n                //   else if (chosenBuilding.index < objAtGridPos.level){\n                //      playerAlert.appendChild(generateAlert(\"Try upgrading, we must not regret our past decisions\"));\n                //  }\n                 \n\n            //  }\n            \n\n        }\n\n\n        // reset default of dropdown\n            console.log(\"GO FALSE!\")\n            menu.disabled = false\n            if(onMobile){\n                playerAlert.appendChild(generateAlert(\"On Mobile\"))\n                menu.selectedIndex = null\n            }\n            console.log(\"playerpoints\", playerPoints)\n\n\n\n\n    })\n\n    const verifyBuildingMatch = (choiceStr, menu) => {\n        const x = currentGrid[0]\n        const y = currentGrid[1]\n        menu.disabled = true\n        // debugger\n\n        if(onPlayerGrid[x][y].isPresent === true){\n\n            let optionsArr = choiceStr.split(\",\")\n            let nextcORp = null\n            let nextKlass = null;\n            let nextIndex = null;\n            [nextcORp, nextKlass, nextIndex] = optionsArr;\n            nextIndex = parseInt(optionsArr[2])\n            \n            const objAtGridPos = onPlayerGrid[x][y]\n            const maxIndexOfType = civilization[nextcORp][nextKlass].length - 1\n\n            if(objAtGridPos.cORp !== nextcORp || objAtGridPos.klass !== nextKlass){\n                playerAlert.appendChild(generateAlert(\"Building types must match!\"))\n                return false;\n            } else if (nextKlass === objAtGridPos.klass && nextIndex === objAtGridPos.level\n                && maxIndexOfType != nextIndex){\n\n                playerAlert.appendChild(generateAlert(\"That building is already there. Try upgrading!\"));\n                return false\n             } else if (nextKlass === objAtGridPos.klass) {\n                // building klass is a match\n                \n                // player has maxed out upgrade\n                 if (maxIndexOfType === objAtGridPos.level){\n                     // players attempts to downgrade a max upgrade unit\n                     if (nextIndex < maxIndexOfType){\n                         playerAlert.appendChild(generateAlert(\"Go forth & build! The aliens are coming!\"));\n                         return false;\n                     } else {\n                         // players pick max upgrade again\n                         playerAlert.appendChild(generateAlert(\"Max upgrade achieved!\"));\n                         return false;\n                     }\n                 } else if (nextIndex < objAtGridPos.level){\n                     playerAlert.appendChild(generateAlert(\"Try upgrading, we must not regret our past decisions\"));\n                     return false;\n                 } else if((objAtGridPos.level + 1) !== nextIndex){\n                     playerAlert.appendChild(generateAlert(\"Upgrade one level at a time!\"));\n                     return false;\n                } \n            }\n            // else if ()\n        }\n        return true\n    }\n\n    //Alert System\n    const removePlayerAlert = (alertType) => {\n        const thisMany = alertType.childElementCount\n\n        if (thisMany > 0){\n            // if (thisMany > 1){\n            //     for(let i = 0; i < thisMany; i++){\n            //         alertType.removeChild(alertType.childNodes[0]); \n            //     }\n            // } else \n            alertType.removeChild(alertType.childNodes[0]); \n        }\n        \n        \n         \n    }\n\n    // x is a row and goes top -> down\n    const gridDecoderX = {\n        0: \"A\",\n        1: \"B\",\n        2: \"C\",\n        3: \"D\"\n    }\n\n    const gridDecoderY = {\n        0: \"1\",\n        1: \"2\",\n        2: \"3\",\n        3: \"4\",\n        4: \"5\",\n        5: \"6\",\n        6: \"7\",\n    }\n\n    const generateCurrSelText = (justBuilt) => {\n        const x = gridDecoderX[currentGrid[0]]\n        const y = gridDecoderY[currentGrid[1]]\n\n        let str = `Current Selection: ${justBuilt.name} ; @ [${x},${y}].`\n\n        return str\n    }\n\n    const generateAlert = (msg, isErrorMsg = true) => {\n        // Add Error message to the DOM -> \"That building is already there. Try upgrading!\"\n        const ele = document.createElement('span');\n        \n\n        \n        if(isErrorMsg){\n            const text = document.createTextNode(msg); \n            ele.appendChild(text);\n\n            ele.setAttribute('class', 'playerAlert');\n            return ele\n        } else {\n            const $span = document.createElement('p');\n            const parts = msg.split(\";\");\n\n            const text = document.createTextNode(parts[0]);\n            const posText = document.createTextNode(parts[1]);\n            ele.appendChild(text)\n            $span.appendChild(posText)\n            ele.setAttribute('class', 'playerAlert2');\n            $span.setAttribute('class', 'red');\n\n            ele.appendChild($span)\n            return ele\n        }\n\n        \n    }\n\n    // menuContainer.classList.toggle(\"shrink\")\n    // \n    // menuContainer.classList.toggle(\"hidden\")\n\n\n    \n    // console.log(canvasRect)\n   \n\n    // function onDown(e){\n    //         cx = e.pageX;\n    //         cy = e.pageY;\n    //     // console.log(`X: ${cx}, Y: ${cy}`)\n    // }\n    \n    const getCoords = (e) => {\n        let canvasRect = canvasHome.getBoundingClientRect();\n        let cx;\n        let cy;\n        let px = e.pageX;\n        let py = e.pageY;\n\n        console.log(\"-------\")\n        console.log(\"px\", px)\n        console.log(\"py\", py)\n\n        cx = px - canvasRect.left\n        cy = py - canvasRect.top\n        console.log(canvasRect)\n\n        console.log(\"-------\")\n        console.log(\"cx\", cx)\n        console.log(\"cy\",cy)\n        // const col = Math.floor((cx - 22) / 86) ;\n        // const row = Math.floor((cy - 131) / 86) ;\n\n        const col = Math.floor((cx - 49) / 86) ;\n        const row = Math.floor((cy - 138) / 86) ;\n\n        // current location console.log\n        console.log(`X: [${row}, Y: ${col}]`)\n\n        //did click on game grid\n        if (row >= 0 && row <= 3 && col >= 0 && col <= 6){\n            return [row,col]\n        }\n        //did NOT click on game grid\n        else {\n            return undefined\n        }\n            \n    }\n\n    function seeGridOptions(row, col){\n        console.log(gameOptions[row][col])\n    }\n\n    function gridClick(row, col){\n\n\n    }\n\n}\n// selected argument is \"production,houses,0\"\nconst civilizationMenuSelect = (selected) => {\n        let optionsArr = selected.split(\",\")\n        let cORp = null\n        let klass = null;\n        let index = null;\n        [cORp, klass, index] = optionsArr;\n        console.log(\"--\")\n        // console.log(optionsArr);\n        // console.log(civilization[cORp][klass][index]);\n\n        return civilization[cORp][klass][index]\n    }\n\n//function will draw grass\nexport const drawGrass = (context) => {\n    let img1 = new Image()\n\n        img1.src = buildAssetPath(grassD)\n\n        img1.onload = () => {\n\n            // drawRow(context, img1, 22, 131)\n            // drawRow(context, img1, 22, 217)\n            // drawRow(context, img1, 22, 303)\n            // drawRow(context, img1, 22, 389)\n            drawRow(context, img1, 44, 131)\n            drawRow(context, img1, 44, 217)\n            drawRow(context, img1, 44, 303)\n            drawRow(context, img1, 44, 389)\n\n        }\n    \n\n    const drawRow = (context, image, rowX, rowY) => {\n        for(let i = 0; i < 7; i++){\n\n            // context.drawImage(image, rowX, rowY, image.width /11.9, image.height / 11.9 )\n            context.drawImage(image, rowX, rowY, 86, 86 )\n            // \n            rowX += 86\n        }\n    }\n}\n\nexport const drawLetterNum = (context) => {\n    const alpha = [\"A\", \"B\", \"C\", \"D\"]\n    const numeric = [1, 2, 3, 4, 5, 6, 7]\n    // coordinates for Letters on left side\n    const startAlphaX = 32;\n    let startAlphaY = 177;\n    // coordinates for numbers on bottom of board\n    let startNumX = 83;\n    const startNumY = 489;\n\n    context.font = 'bold 13px Sans-Serif';\n    // context.fillStyle = \"#000\"\n    context.fillStyle = \"#FFF\"\n    context.strokeStyle = \"#FFF\";\n    for(let i = 0; i < alpha.length; i++){\n        context.fillText(alpha[i], startAlphaX, startAlphaY);\n        startAlphaY += 86;\n\n    }\n\n    for (let i = 0; i < numeric.length; i++) {\n        context.fillText(numeric[i], startNumX, startNumY);\n        startNumX += 86;\n\n        \n    }\n    // context.strokeText(alpha[0], startX, 164);\n}\n\nconst isGridOccupied = (x = currentGrid[0], y = currentGrid[1]) => {\n    // const x = currentGrid[0]\n    // const y = currentGrid[1]\n\n    return onPlayerGrid[x][y].isPresent\n}\n\n//update gameState with chosen Building\nconst occupyGrid = (chosenBuilding) => {\n    const x = currentGrid[0]\n    const y = currentGrid[1]\n\n    onPlayerGrid[x][y].isPresent = true\n    onPlayerGrid[x][y].cORp = chosenBuilding.cORp\n    onPlayerGrid[x][y].klass = chosenBuilding.klass\n    onPlayerGrid[x][y].level = chosenBuilding.index\n    onPlayerGrid[x][y].name = chosenBuilding.name\n\n\n    return onPlayerGrid[x][y]\n}\n\n\n\nconst isInitialBuilding = (chosenBuilding) => {\n    if (chosenBuilding.index === 0) return true;\n    return false\n}\n\n// to be MOVED LATER *!*!*!*!*!*!!*!*!*!*!*!*!*!*\nexport const summonAliens = (context) => {\n    const motherShip = new MotherShip(context)\n        motherShip.makeShips()\n        const intId1 = setInterval(motherShip.army[0].lToRAnimate, 150)\n        const intId2 = setInterval(motherShip.army[1].lToRAnimate, 150)\n        const intId3 = setInterval(motherShip.army[2].lToRAnimate, 150)\n\n\n        setTimeout(()=>clearInterval(intId1),2100)\n        setTimeout(()=>clearInterval(intId2),2100)\n        setTimeout(()=>clearInterval(intId3),2100)\n} \n\nconst parseImage = (context, filePath, currentGrid) =>{\n    let image = new Image();\n    image.src = filePath;\n\n    const x = currentGrid[0];\n    const y = currentGrid[1];\n\n    // remove crosshair before placing new sprite\n    drawOnGrid(grassSquare, context, x, y, true);\n\n    image.onload = () => {        \n        drawOnGrid(image, context, x, y)\n    }\n\n}\n\n// FN will draw an image at the appropriate spot on the grid\nconst drawOnGrid = (image, context, gridX, gridY, clearRectBoolean) => {\n    console.log(\"draw on grid\", gridX, gridY)\n        // const offsetX = 22;\n        const offsetY = 131;\n        const offsetX = 44;\n\n        // const offsetY = 136;\n        const topLeftX = 86;\n        const topLeftY = 86;    \n\n        if (gridX === 0 && gridY === 0) {\n            // context.drawImage(this.sprite, this.movements[this.moveIdx].x, this.movements[this.moveIdx].y, this.scaleW, this.scaleH )\n            //works and original func\n            // context.drawImage(image, offsetX, offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                context.clearRect(offsetX, offsetY, 86, 86)\n                context.drawImage(image, offsetX, offsetY, 86, 86)\n            } else {\n                context.drawImage(image, offsetX, offsetY, 86, 86 )\n            }\n        } else if (gridX === 0 && gridY > 0){\n            //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, 86, 86 )\n            }\n        } else {\n            // \n             //original\n            // context.drawImage(image, ((topLeftX * gridY) + offsetX), offsetY, image.width /11.9, image.height / 11.9 )\n            if (clearRectBoolean){\n                \n                //original\n                // context.clearRect(offsetX, offsetY, 86, 86)\n                // context.drawImage(image, offsetX, offsetY, 86, 86)\n\n                context.clearRect(((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86)\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            } else {\n                context.drawImage(image, ((topLeftX * gridY) + offsetX), ((topLeftY * gridX) + offsetY), 86, 86 )\n            }\n        }\n\n    \n    }\n\n    export const animateSquares = (image, context) => {\n        context.clearRect(44, 131, 602, 344)\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 7; j++){\n                drawOnGrid(grassSquare, context, i, j)\n                drawOnGrid(image, context, i, j)\n                \n            }\n        }\n\n    }\n\n    // export const loadAlienShip = () => {\n    //     // const alienSrc = \"/src/images/aliens/ships/08-Netuno.png\";\n    //     // const alienShip = new Image();\n    //     // alienShip.src = alienSrc;\n\n    //     // alienShip.onload( () => {\n    //     //     return true\n    //     // })\n\n    // }\n\n\n\n// export default canvasEvents;\n\n\n\n","export default \"images/grass_mix_d.jpg\";","export default \"images/cursor.png\";","import {animateSquares,\n        canvasEvents,\n        drawGrass,\n        drawLetterNum,\n        drawOnGrid,\n        summonAliens,\n        grassSquare,\n        cursor\n        } from \"./scripts/canvas_events.js\"\n\nimport progressBar from \"./scripts/progressBar.js\"\nimport {buildAssetPath} from \"./scripts/util\"\nimport \"./styles/index.scss\";\n\n\n// import cursorPng from \"./images/cursor.png\"\n\n\nimport {\n    drawResourcesText,\n    drawAlienCountdown,\n    clearAlienText,\n    adjustTimer,\n    getTime,\n    setTimer,\n    drawMidline,\n    spawnResources} from \"./scripts/pointsSystem\";\n\n// This is the cursor icon, preloaded with source path\n// const cursor = new Image()\n// cursor.src = buildAssetPath(cursorPng)\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () =>  {\n\n    const canvasHome = document.getElementById(\"canvas-home\");\n    const context = canvasHome.getContext('2d')\n\n    canvasEvents(canvasHome, context)\n    drawGrass(context)\n    //draw Production progress bar\n    // y is 375\n    // old\n    // const blankLeft = new progressBar(context, -34, 125, \"blank\", \"v\")\n    // pre resize\n    // const blankLeft = new progressBar(context, -34, 115, \"blank\", \"v\");\n    \n    \n    const blankLeft = new progressBar(context, -31, 115, \"blank\", \"v\");\n    // const blankRight = new progressBar(context, 590, 115, \"blank\", \"v\");\n    const blankRight = new progressBar(context, 612, 115, \"blank\", \"v\");\n    // debugger\n    drawMidline(context)\n    drawLetterNum(context)\n    \n    const makeCountdownId = setInterval(() => {\n        adjustTimer(-1);\n        drawAlienCountdown(context);\n        if(getTime() === 0){\n            // context.clearRect(44,389,86,86)\n            // animateSquares(cursor, context)\n            clearAlienText(context)\n            clearInterval(makeCountdownId)\n            summonAliens(context)\n        }\n    },1000)\n\n    const makeResourcesId = setInterval(() => {\n        spawnResources();\n        drawResourcesText(context);\n    }, 600)\n\n    setInterval(() => {\n        drawResourcesText(context);\n    }, 250)\n    // spawnResources();\n    // drawResourcesText(context);\n\n\n\n\n    // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", 10);\n    // const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", 20);\n    // const redBar = new progressBar(context, -34, 375, \"blue\", \"v\")\n\n    // const greenBar = new progressBar(context, -34, 105, \"green\", \"v\", 90);\n\n    // greenBar.increaseFill(100)\n\n    // const yellowBar = new progressBar(context, 590, 375, \"yellow\", \"v\")\n\n    //start points\n    // const yellowBar = new progressBar(context, 590, 445, \"yellow\", \"v\")\n    // const blueBar = new progressBar(context, 590, 105, \"blue\", \"v\", 20);\n    // productionBar.drawBar(context)\n    // productionBar.blankSprite.onload = () => {\n    //     \n    //     context.drawImage(productionBar.blankSprite, productionBar.startX, productionBar.startY);\n    //     context.drawImage(productionBar.colorSprite, productionBar.startX, productionBar.startY);\n    // }\n    // productionBar.increaseFill()\n    // progressBar(context, 626, 476, \"blue\")\n\n    \n    \n\n    \n    // let choice = menu.options[menu.selectedIndex].value\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n        // for(let i = 0; i < 7; i++){\n        //     for(let j = 0; j < 7; j++){\n                // drawOnGrid(imgTest, i, j)\n                // animateSquares(imgTest)\n\n\n        //     }\n        // }\n        // drawOnGrid(imgTest, 6)\n    // }\n\n    \n\n\n})\n\n    // let imgTest = new Image();\n    \n    // imgTest.src = \"/src/images/terrain_grass/grass_mix_n.jpg\"\n\n    // imgTest.onload = () => {\n\n    //     drawOnGrid(imgTest, 0, 5)\n    //     // drawOnGrid(imgTest, 6)\n    // }\n//  backgrounds()\n\n\n\n\n\n// const backgrounds = require(\"./scripts/backgrounds.js\")"],"sourceRoot":""}